# Save by mofid on 2024_08_05-01.39.36; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=50.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(10.0, 2.0))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(10.0, 2.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Water', type=EULERIAN)
mdb.models['Model-1'].parts['Water'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Water')
mdb.models['Model-1'].materials['Water'].Density(table=((1000.0, ), ))
mdb.models['Model-1'].materials['Water'].Eos(table=((1483.0, 0.0, 0.0), ), 
    type=USUP)
mdb.models['Model-1'].materials['Water'].Viscosity(table=((0.0001, ), ))
mdb.models['Model-1'].EulerianSection(data={'water-1': 'Water'}, name=
    'Section-1')
mdb.models['Model-1'].parts['Water'].Set(cells=
    mdb.models['Model-1'].parts['Water'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['Water'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Water'].sets['Set-1'], sectionName='Section-1'
    , thicknessAssignment=FROM_SECTION)
# Save by mofid on 2024_08_05-01.46.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=50.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=12.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 2.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.0, 2.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Applicator', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Applicator'].BaseShellExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Applicator'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Applicator'].InterestingPoint(
    mdb.models['Model-1'].parts['Applicator'].edges[3], MIDDLE))
# Save by mofid on 2024_08_05-01.50.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=25.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(10.0, 0.25))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(10.0, 0.25))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Container', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Container'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Container'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['Container'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), ))
# Save by mofid on 2024_08_05-01.54.46; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-01.55.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Applicator-1', 
    part=mdb.models['Model-1'].parts['Applicator'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Container-1', 
    part=mdb.models['Model-1'].parts['Container'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Water-1', part=
    mdb.models['Model-1'].parts['Water'])
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Applicator-1', 
    'Container-1', 'Water-1'))
mdb.models['Model-1'].parts['Water'].Set(faces=
    mdb.models['Model-1'].parts['Water'].faces.getSequenceFromMask(('[#30 ]', 
    ), ), name='Z')
mdb.models['Model-1'].parts['Water'].Set(faces=
    mdb.models['Model-1'].parts['Water'].faces.getSequenceFromMask(('[#5 ]', ), 
    ), name='X')
mdb.models['Model-1'].parts['Water'].Set(faces=
    mdb.models['Model-1'].parts['Water'].faces.getSequenceFromMask(('[#a ]', ), 
    ), name='Y')
# Save by mofid on 2024_08_05-02.01.26; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Applicator-1', 
    part=mdb.models['Model-1'].parts['Applicator'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Container-1', 
    part=mdb.models['Model-1'].parts['Container'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Water-1', part=
    mdb.models['Model-1'].parts['Water'])
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    previous='Initial', timePeriod=5.0)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.1, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactExp(createStepName='Step-1', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Step-1', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Step-1')
mdb.models['Model-1'].parts['Water'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['Water'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), ))
mdb.models['Model-1'].parts['Water'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['Water'].generateMesh()
mdb.models['Model-1'].parts['Applicator'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['Applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Applicator'].setMeshControls(algorithm=MEDIAL_AXIS
    , elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['Applicator'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['Applicator'].generateMesh()
# Save by mofid on 2024_08_05-02.10.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Container'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['Container'].faces.getSequenceFromMask((
    '[#3f ]', ), ), ))
mdb.models['Model-1'].parts['Container'].setMeshControls(algorithm=MEDIAL_AXIS, 
    elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Container'].faces.getSequenceFromMask((
    '[#3f ]', ), ))
mdb.models['Model-1'].parts['Container'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['Container'].generateMesh()
# Save by mofid on 2024_08_05-02.13.05; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DiscreteFieldByVolumeFraction(accuracy=HIGH, 
    description='', eulerianInstance=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'], name=
    'WaterField-1', referenceInstance=
    mdb.models['Model-1'].rootAssembly.instances['Container-1'])
mdb.models['Model-1'].MaterialAssignment(fieldList=((Region(
    cells=mdb.models['Model-1'].rootAssembly.instances['Water-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), ('WaterField-1', )), ), instanceList=(
    mdb.models['Model-1'].rootAssembly.instances['Water-1'], ), name=
    'Predefined Field-1', useFields=True)
mdb.models['Model-1'].Gravity(comp2=-0.98, createStepName='Step-1', 
    distributionType=UNIFORM, field='', name='Load-1')
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='X', region=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].sets['X'], v1=0.0, 
    v2=UNSET, v3=UNSET, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Y', region=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].sets['Y'], v1=UNSET
    , v2=0.0, v3=UNSET, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Z', region=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].sets['Z'], v1=UNSET
    , v2=UNSET, v3=0.0, vr1=UNSET, vr2=UNSET, vr3=UNSET)
# Save by mofid on 2024_08_05-02.21.56; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].PeriodicAmplitude(a_0=0.0, data=((-1.0, 0.0), ), 
    frequency=5.0, name='Amp-1', start=0.0, timeSpan=TOTAL)
mdb.models['Model-1'].rootAssembly.Set(name='Set-2', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Applicator-1'].referencePoints[2], 
    ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'], u1=0.15, 
    u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by mofid on 2024_08_05-02.27.01; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.features['Container-1'].suppress()
# Save by mofid on 2024_08_05-02.27.30; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 908, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2988, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 4.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 02:28:36 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(numIntervals=
    50)
# Save by mofid on 2024_08_05-02.29.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3284, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1788, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016854703426, 
    'stableTimeIncrement': 1.74675187736284e-05, 
    'internalEnergy': -4.32612943649292, 'stepTime': 0.100016854703426, 
    'totalEnergy': -1554.43774414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5730, 'distortionContrEnergy': 0.0, 
    'externalWork': 14880.4541015625, 'kineticEnergy': 378.539886474609, 
    'wallTime': 85.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200012028217316, 
    'stableTimeIncrement': 1.74554079421796e-05, 
    'internalEnergy': -3.17490077018738, 'stepTime': 0.200012028217316, 
    'totalEnergy': -1697.20751953125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11353, 'distortionContrEnergy': 0.0, 
    'externalWork': 14874.166015625, 'kineticEnergy': 215.624633789062, 
    'wallTime': 175.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.30001500248909, 
    'stableTimeIncrement': 1.74844972207211e-05, 
    'internalEnergy': -3.17113733291626, 'stepTime': 0.30001500248909, 
    'totalEnergy': -1703.41491699219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17079, 'distortionContrEnergy': 0.0, 
    'externalWork': 14867.6103515625, 'kineticEnergy': 198.615570068359, 
    'wallTime': 293.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400014042854309, 
    'stableTimeIncrement': 1.74901542777661e-05, 
    'internalEnergy': -2.81778764724731, 'stepTime': 0.400014042854309, 
    'totalEnergy': -1747.58312988281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22802, 'distortionContrEnergy': 0.0, 
    'externalWork': 14862.640625, 'kineticEnergy': 146.032150268555, 
    'wallTime': 405.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.497429132461548, 
    'stableTimeIncrement': 1.82801013579592e-05, 
    'internalEnergy': -2.8015558719635, 'stepTime': 0.497429132461548, 
    'totalEnergy': -1758.97937011719, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28250, 'distortionContrEnergy': 0.0, 
    'externalWork': 14858.2265625, 'kineticEnergy': 130.170135498047, 
    'wallTime': 528.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500006496906281, 
    'stableTimeIncrement': 1.82786516234046e-05, 
    'internalEnergy': -2.80155515670776, 'stepTime': 0.500006496906281, 
    'totalEnergy': -1759.09045410156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28391, 'distortionContrEnergy': 0.0, 
    'externalWork': 14858.1298828125, 'kineticEnergy': 129.962097167969, 
    'wallTime': 531.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.595878303050995, 
    'stableTimeIncrement': 1.82886396942195e-05, 
    'internalEnergy': -2.88738822937012, 'stepTime': 0.595878303050995, 
    'totalEnergy': -1763.92175292969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33632, 'distortionContrEnergy': 0.0, 
    'externalWork': 14855.0244140625, 'kineticEnergy': 122.045959472656, 
    'wallTime': 653.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600013673305511, 
    'stableTimeIncrement': 1.82752155524213e-05, 
    'internalEnergy': -2.8866879940033, 'stepTime': 0.600013673305511, 
    'totalEnergy': -1764.02819824219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33858, 'distortionContrEnergy': 0.0, 
    'externalWork': 14854.908203125, 'kineticEnergy': 121.822441101074, 
    'wallTime': 658.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.691756069660187, 
    'stableTimeIncrement': 1.82852454599924e-05, 
    'internalEnergy': -2.88451385498047, 'stepTime': 0.691756069660187, 
    'totalEnergy': -1765.91955566406, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38872, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.6708984375, 'kineticEnergy': 117.680084228516, 
    'wallTime': 780.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.70000809431076, 
    'stableTimeIncrement': 1.82879175554262e-05, 
    'internalEnergy': -2.88449811935425, 'stepTime': 0.70000809431076, 
    'totalEnergy': -1766.06701660156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39323, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.498046875, 'kineticEnergy': 117.358596801758, 
    'wallTime': 791.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.798714518547058, 
    'stableTimeIncrement': 1.82885214599082e-05, 
    'internalEnergy': -2.87419247627258, 'stepTime': 0.798714518547058, 
    'totalEnergy': -1767.55908203125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44718, 'distortionContrEnergy': 0.0, 
    'externalWork': 14850.7353515625, 'kineticEnergy': 114.086853027344, 
    'wallTime': 911.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800013720989227, 
    'stableTimeIncrement': 1.8277814888279e-05, 
    'internalEnergy': -2.87421035766602, 'stepTime': 0.800013720989227, 
    'totalEnergy': -1767.56787109375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44789, 'distortionContrEnergy': 0.0, 
    'externalWork': 14850.7158203125, 'kineticEnergy': 114.058494567871, 
    'wallTime': 912.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.899771869182587, 
    'stableTimeIncrement': 1.82915227924241e-05, 
    'internalEnergy': -2.86852097511292, 'stepTime': 0.899771869182587, 
    'totalEnergy': -1768.7099609375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50241, 'distortionContrEnergy': 0.0, 
    'externalWork': 14849.48828125, 'kineticEnergy': 111.679336547852, 
    'wallTime': 1034.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900009751319885, 
    'stableTimeIncrement': 1.82901931111701e-05, 
    'internalEnergy': -2.86851835250854, 'stepTime': 0.900009751319885, 
    'totalEnergy': -1768.71997070312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50254, 'distortionContrEnergy': 0.0, 
    'externalWork': 14849.486328125, 'kineticEnergy': 111.666984558105, 
    'wallTime': 1035.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-02.47.41; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00001239776611, 
    'stableTimeIncrement': 1.82502444658894e-05, 
    'internalEnergy': -2.83974552154541, 'stepTime': 1.00001239776611, 
    'totalEnergy': -1776.296875, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 55722, 
    'distortionContrEnergy': 0.0, 'externalWork': 14848.7236328125, 
    'kineticEnergy': 103.281890869141, 'wallTime': 1144.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10001349449158, 
    'stableTimeIncrement': 1.82701896846993e-05, 
    'internalEnergy': -2.77384757995605, 'stepTime': 1.10001349449158, 
    'totalEnergy': -1783.73791503906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61205, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.4033203125, 'kineticEnergy': 95.3559875488281, 
    'wallTime': 1236.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20001614093781, 
    'stableTimeIncrement': 1.82831117854221e-05, 
    'internalEnergy': -2.2089855670929, 'stepTime': 1.20001614093781, 
    'totalEnergy': -1786.80786132812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 66688, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.4658203125, 'kineticEnergy': 91.7120742797852, 
    'wallTime': 1321.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.30000269412994, 
    'stableTimeIncrement': 1.82891963049769e-05, 
    'internalEnergy': -2.20306277275085, 'stepTime': 1.30000269412994, 
    'totalEnergy': -1789.37158203125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 72170, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.763671875, 'kineticEnergy': 89.4329986572266, 
    'wallTime': 1412.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.40000998973846, 
    'stableTimeIncrement': 1.82762396434555e-05, 
    'internalEnergy': -29.0377292633057, 'stepTime': 1.40000998973846, 
    'totalEnergy': -1804.33386230469, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 77655, 'distortionContrEnergy': 0.0, 
    'externalWork': 14849.361328125, 'kineticEnergy': 79.140625, 
    'wallTime': 1519.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.50001358985901, 
    'stableTimeIncrement': 1.82866697286954e-05, 
    'internalEnergy': -28.8245964050293, 'stepTime': 1.50001358985901, 
    'totalEnergy': -1807.20483398438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 83138, 'distortionContrEnergy': 0.0, 
    'externalWork': 14850.2333984375, 'kineticEnergy': 76.914192199707, 
    'wallTime': 1636.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.59961986541748, 
    'stableTimeIncrement': 1.82714920811122e-05, 
    'internalEnergy': -28.3754653930664, 'stepTime': 1.59961986541748, 
    'totalEnergy': -1818.44128417969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 88600, 'distortionContrEnergy': 0.0, 
    'externalWork': 14851.1865234375, 'kineticEnergy': 66.1265335083008, 
    'wallTime': 1756.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.60000288486481, 
    'stableTimeIncrement': 1.8271486624144e-05, 
    'internalEnergy': -28.3754577636719, 'stepTime': 1.60000288486481, 
    'totalEnergy': -1818.46472167969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 88621, 'distortionContrEnergy': 0.0, 
    'externalWork': 14851.1904296875, 'kineticEnergy': 66.1063003540039, 
    'wallTime': 1757.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70000696182251, 
    'stableTimeIncrement': 1.82797466550255e-05, 
    'internalEnergy': -27.9965744018555, 'stepTime': 1.70000696182251, 
    'totalEnergy': -1825.96740722656, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 94104, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.0244140625, 'kineticEnergy': 59.0271301269531, 
    'wallTime': 1871.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.8000020980835, 
    'stableTimeIncrement': 1.74559754668735e-05, 
    'internalEnergy': -27.7280559539795, 'stepTime': 1.8000020980835, 
    'totalEnergy': -1830.37341308594, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 99701, 'distortionContrEnergy': 0.0, 
    'externalWork': 14853.064453125, 'kineticEnergy': 55.2812538146973, 
    'wallTime': 1972.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.9000096321106, 
    'stableTimeIncrement': 1.745467488945e-05, 
    'internalEnergy': -27.3860015869141, 'stepTime': 1.9000096321106, 
    'totalEnergy': -1837.17626953125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 105406, 'distortionContrEnergy': 0.0, 
    'externalWork': 14854.1220703125, 'kineticEnergy': 49.2018356323242, 
    'wallTime': 2067.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.00000190734863, 
    'stableTimeIncrement': 1.74561773746973e-05, 
    'internalEnergy': -27.3520488739014, 'stepTime': 2.00000190734863, 
    'totalEnergy': -1841.72155761719, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 111061, 'distortionContrEnergy': 0.0, 
    'externalWork': 14855.0068359375, 'kineticEnergy': 45.5037040710449, 
    'wallTime': 2165.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.10001540184021, 
    'stableTimeIncrement': 1.74721681105439e-05, 
    'internalEnergy': -27.2614879608154, 'stepTime': 2.10001540184021, 
    'totalEnergy': -1843.78198242188, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 116764, 'distortionContrEnergy': 0.0, 
    'externalWork': 14855.83984375, 'kineticEnergy': 44.4142303466797, 
    'wallTime': 2278.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.20001745223999, 
    'stableTimeIncrement': 1.82720978045836e-05, 
    'internalEnergy': -27.2182540893555, 'stepTime': 2.20001745223999, 
    'totalEnergy': -1846.9267578125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 122409, 'distortionContrEnergy': 0.0, 
    'externalWork': 14856.63671875, 'kineticEnergy': 42.0068016052246, 
    'wallTime': 2392.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.3000180721283, 
    'stableTimeIncrement': 1.82730946107768e-05, 
    'internalEnergy': -26.9042873382568, 'stepTime': 2.3000180721283, 
    'totalEnergy': -1852.55639648438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 127858, 'distortionContrEnergy': 0.0, 
    'externalWork': 14857.400390625, 'kineticEnergy': 36.7978096008301, 
    'wallTime': 2503.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.40000605583191, 
    'stableTimeIncrement': 1.82846706593409e-05, 
    'internalEnergy': -26.7858047485352, 'stepTime': 2.40000605583191, 
    'totalEnergy': -1854.57470703125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 133311, 'distortionContrEnergy': 0.0, 
    'externalWork': 14858.0966796875, 'kineticEnergy': 35.3479309082031, 
    'wallTime': 2607.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 24, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.50000429153442, 
    'stableTimeIncrement': 1.74469605553895e-05, 
    'internalEnergy': -26.636568069458, 'stepTime': 2.50000429153442, 
    'totalEnergy': -1861.29772949219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 138994, 'distortionContrEnergy': 0.0, 
    'externalWork': 14872.8447265625, 'kineticEnergy': 39.7893867492676, 
    'wallTime': 2703.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 25, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.60000443458557, 
    'stableTimeIncrement': 1.73309890669771e-05, 
    'internalEnergy': -26.4210300445557, 'stepTime': 2.60000443458557, 
    'totalEnergy': -1892.609375, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 144741, 
    'distortionContrEnergy': 0.0, 'externalWork': 15238.8681640625, 
    'kineticEnergy': 33.9833679199219, 'wallTime': 2799.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 26, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.70000600814819, 
    'stableTimeIncrement': 1.74684828380123e-05, 
    'internalEnergy': -26.004524230957, 'stepTime': 2.70000600814819, 
    'totalEnergy': -1909.04431152344, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 150490, 'distortionContrEnergy': 0.0, 
    'externalWork': 15594.6103515625, 'kineticEnergy': 29.8111839294434, 
    'wallTime': 2899.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 27, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.80001258850098, 
    'stableTimeIncrement': 1.74462111317553e-05, 
    'internalEnergy': -25.8557071685791, 'stepTime': 2.80001258850098, 
    'totalEnergy': -1911.92956542969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 156236, 'distortionContrEnergy': 0.0, 
    'externalWork': 15597.439453125, 'kineticEnergy': 28.9106788635254, 
    'wallTime': 3003.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 28, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.90000176429749, 
    'stableTimeIncrement': 1.74377473740606e-05, 
    'internalEnergy': -25.6038818359375, 'stepTime': 2.90000176429749, 
    'totalEnergy': -1914.01696777344, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 161981, 'distortionContrEnergy': 0.0, 
    'externalWork': 15598.9609375, 'kineticEnergy': 27.9041976928711, 
    'wallTime': 3107.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 29, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.00001430511475, 
    'stableTimeIncrement': 1.8263359379489e-05, 
    'internalEnergy': -25.4113578796387, 'stepTime': 3.00001430511475, 
    'totalEnergy': -1918.48913574219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 167632, 'distortionContrEnergy': 0.0, 
    'externalWork': 15599.8515625, 'kineticEnergy': 24.081485748291, 
    'wallTime': 3210.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 30, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.10000991821289, 
    'stableTimeIncrement': 1.82754629349802e-05, 
    'internalEnergy': -25.3356971740723, 'stepTime': 3.10000991821289, 
    'totalEnergy': -1919.92248535156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 173206, 'distortionContrEnergy': 0.0, 
    'externalWork': 15600.796875, 'kineticEnergy': 23.5098915100098, 
    'wallTime': 3311.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 31, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.20000720024109, 
    'stableTimeIncrement': 1.82789954124019e-05, 
    'internalEnergy': -25.3053512573242, 'stepTime': 3.20000720024109, 
    'totalEnergy': -1920.95764160156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 178653, 'distortionContrEnergy': 0.0, 
    'externalWork': 15601.8408203125, 'kineticEnergy': 23.4833183288574, 
    'wallTime': 3408.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 32, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.30000114440918, 
    'stableTimeIncrement': 1.82605253939983e-05, 
    'internalEnergy': -25.224193572998, 'stepTime': 3.30000114440918, 
    'totalEnergy': -1922.39392089844, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 184100, 'distortionContrEnergy': 0.0, 
    'externalWork': 15602.9501953125, 'kineticEnergy': 23.064510345459, 
    'wallTime': 3509.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 33, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.40000748634338, 
    'stableTimeIncrement': 1.8276399714523e-05, 
    'internalEnergy': -25.1707324981689, 'stepTime': 3.40000748634338, 
    'totalEnergy': -1924.43701171875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 189549, 'distortionContrEnergy': 0.0, 
    'externalWork': 15604.1318359375, 'kineticEnergy': 22.1418266296387, 
    'wallTime': 3619.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 34, 'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Water'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Water'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Water'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.50001335144043, 
    'stableTimeIncrement': 1.82498661160935e-05, 
    'internalEnergy': -24.9656467437744, 'stepTime': 3.50001335144043, 
    'totalEnergy': -1926.64953613281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 195000, 'distortionContrEnergy': 0.0, 
    'externalWork': 15605.3076171875, 'kineticEnergy': 20.8761692047119, 
    'wallTime': 3723.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 35, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.59967017173767, 
    'stableTimeIncrement': 1.8280925360159e-05, 
    'internalEnergy': -24.9632911682129, 'stepTime': 3.59967017173767, 
    'totalEnergy': -1928.53479003906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 200502, 'distortionContrEnergy': 0.0, 
    'externalWork': 15606.375, 'kineticEnergy': 20.0472240447998, 
    'wallTime': 3844.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.60000061988831, 
    'stableTimeIncrement': 1.82685398613103e-05, 
    'internalEnergy': -24.9632530212402, 'stepTime': 3.60000061988831, 
    'totalEnergy': -1928.5400390625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 200520, 'distortionContrEnergy': 0.0, 
    'externalWork': 15606.37890625, 'kineticEnergy': 20.0451488494873, 
    'wallTime': 3844.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 36, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.68134450912476, 
    'stableTimeIncrement': 1.75240002135979e-05, 
    'internalEnergy': -24.8478183746338, 'stepTime': 3.68134450912476, 
    'totalEnergy': -1930.24633789062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 205171, 'distortionContrEnergy': 0.0, 
    'externalWork': 15608.0107421875, 'kineticEnergy': 19.3099174499512, 
    'wallTime': 3966.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.70000100135803, 
    'stableTimeIncrement': 1.75189707078971e-05, 
    'internalEnergy': -24.840726852417, 'stepTime': 3.70000100135803, 
    'totalEnergy': -1930.56127929688, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 206239, 'distortionContrEnergy': 0.0, 
    'externalWork': 15608.85546875, 'kineticEnergy': 19.4154014587402, 
    'wallTime': 3994.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 37, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.77479434013367, 
    'stableTimeIncrement': 1.75612512975931e-05, 
    'internalEnergy': -24.7384700775146, 'stepTime': 3.77479434013367, 
    'totalEnergy': -1933.50048828125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 210509, 'distortionContrEnergy': 0.0, 
    'externalWork': 15617.7353515625, 'kineticEnergy': 24.1802558898926, 
    'wallTime': 4118.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.80001616477966, 
    'stableTimeIncrement': 1.75812729139579e-05, 
    'internalEnergy': -24.7010974884033, 'stepTime': 3.80001616477966, 
    'totalEnergy': -1935.70581054688, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 211939, 'distortionContrEnergy': 0.0, 
    'externalWork': 15639.5234375, 'kineticEnergy': 24.3437309265137, 
    'wallTime': 4166.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 38, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.88251900672913, 
    'stableTimeIncrement': 1.75776258402038e-05, 
    'internalEnergy': -24.770694732666, 'stepTime': 3.88251900672913, 
    'totalEnergy': -1942.87866210938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 216626, 'distortionContrEnergy': 0.0, 
    'externalWork': 15659.3974609375, 'kineticEnergy': 19.1917819976807, 
    'wallTime': 4287.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.90001535415649, 
    'stableTimeIncrement': 1.76125668076565e-05, 
    'internalEnergy': -24.7704734802246, 'stepTime': 3.90001535415649, 
    'totalEnergy': -1943.44970703125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 217618, 'distortionContrEnergy': 0.0, 
    'externalWork': 15659.521484375, 'kineticEnergy': 18.8288955688477, 
    'wallTime': 4309.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 39, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-03.43.18; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-03.43.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.99061059951782, 
    'stableTimeIncrement': 1.82803651114227e-05, 
    'internalEnergy': -24.7425079345703, 'stepTime': 3.99061059951782, 
    'totalEnergy': -1945.00231933594, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 222703, 'distortionContrEnergy': 0.0, 
    'externalWork': 15660.126953125, 'kineticEnergy': 17.8161010742188, 
    'wallTime': 4436.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.00001001358032, 
    'stableTimeIncrement': 1.82784569915384e-05, 
    'internalEnergy': -24.7423191070557, 'stepTime': 4.00001001358032, 
    'totalEnergy': -1945.11694335938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 223215, 'distortionContrEnergy': 0.0, 
    'externalWork': 15660.1943359375, 'kineticEnergy': 17.7682037353516, 
    'wallTime': 4449.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 40, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.095862865448, 
    'stableTimeIncrement': 1.82824023795547e-05, 
    'internalEnergy': -24.4815845489502, 'stepTime': 4.095862865448, 
    'totalEnergy': -1946.94091796875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 228505, 'distortionContrEnergy': 0.0, 
    'externalWork': 15660.8076171875, 'kineticEnergy': 16.2750453948975, 
    'wallTime': 4575.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.10001230239868, 
    'stableTimeIncrement': 1.82931926246965e-05, 
    'internalEnergy': -24.4816436767578, 'stepTime': 4.10001230239868, 
    'totalEnergy': -1947.01904296875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 228734, 'distortionContrEnergy': 0.0, 
    'externalWork': 15660.83203125, 'kineticEnergy': 16.2204093933105, 
    'wallTime': 4581.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 41, 'jobName': 'Job-1'})
mdb.models['Model-1'].PartFromInputFile(inputFileName=
    'C:/Users/mofid/Desktop/DirectoryName2/Job-55.inp')
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'CANTILEVER_SLAB-1', part=mdb.models['Model-1'].parts['CANTILEVER_SLAB'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.188636302948, 
    'stableTimeIncrement': 1.82751045940677e-05, 
    'internalEnergy': -24.4505500793457, 'stepTime': 4.188636302948, 
    'totalEnergy': -1948.01867675781, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 233625, 'distortionContrEnergy': 0.0, 
    'externalWork': 15661.306640625, 'kineticEnergy': 15.6590185165405, 
    'wallTime': 4702.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.20001554489136, 
    'stableTimeIncrement': 1.82750954991207e-05, 
    'internalEnergy': -24.4440135955811, 'stepTime': 4.20001554489136, 
    'totalEnergy': -1948.10754394531, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 234253, 'distortionContrEnergy': 0.0, 
    'externalWork': 15661.3642578125, 'kineticEnergy': 15.6204347610474, 
    'wallTime': 4718.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 42, 'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'CANTILEVER_SLAB-2', part=mdb.models['Model-1'].parts['CANTILEVER_SLAB'])
mdb.models['Model-1'].Material(name='Material-Slab')
mdb.models['Model-1'].materials['Material-Slab'].Density(table=((2500.0, ), ))
mdb.models['Model-1'].materials['Material-Slab'].Elastic(table=((32500000000.0, 
    0.3), ))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.29056024551392, 
    'stableTimeIncrement': 1.82792282430455e-05, 
    'internalEnergy': -24.3920650482178, 'stepTime': 4.29056024551392, 
    'totalEnergy': -1948.77966308594, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 239250, 'distortionContrEnergy': 0.0, 
    'externalWork': 15661.802734375, 'kineticEnergy': 15.3296356201172, 
    'wallTime': 4840.0})
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Slab', name=
    'Section-slab', thickness=None)
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.30000066757202, 
    'stableTimeIncrement': 1.82770527317189e-05, 
    'internalEnergy': -24.3921699523926, 'stepTime': 4.30000066757202, 
    'totalEnergy': -1948.84155273438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 239771, 'distortionContrEnergy': 0.0, 
    'externalWork': 15661.845703125, 'kineticEnergy': 15.3104867935181, 
    'wallTime': 4851.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 43, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-03.51.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['CANTILEVER_SLAB'].Set(elements=
    mdb.models['Model-1'].parts['CANTILEVER_SLAB'].elements.getSequenceFromMask(
    mask=('[#ffffffff:3 #7ffffff ]', ), ), name='Set-slab')
mdb.models['Model-1'].parts['CANTILEVER_SLAB'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['CANTILEVER_SLAB'].sets['Set-slab'], 
    sectionName='Section-slab', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'CANTILEVER_SLAB-3', part=mdb.models['Model-1'].parts['CANTILEVER_SLAB'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('CANTILEVER_SLAB-3', 
    ), vector=(5.687, 2.587, 0.0))
# Save by mofid on 2024_08_05-03.52.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.4000039100647, 
    'stableTimeIncrement': 1.82709118234925e-05, 
    'internalEnergy': -24.2569541931152, 'stepTime': 4.4000039100647, 
    'totalEnergy': -1949.681640625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 245290, 'distortionContrEnergy': 0.0, 
    'externalWork': 15662.248046875, 'kineticEnergy': 14.7280206680298, 
    'wallTime': 4958.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 44, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-03.53.32; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('CANTILEVER_SLAB-3', 
    ), vector=(-0.187, -1.587, 0.0))
# Save by mofid on 2024_08_05-03.53.57; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-03.54.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.50000715255737, 
    'stableTimeIncrement': 1.82823532668408e-05, 
    'internalEnergy': -24.0805225372314, 'stepTime': 4.50000715255737, 
    'totalEnergy': -1951.12084960938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 250809, 'distortionContrEnergy': 0.0, 
    'externalWork': 15662.4443359375, 'kineticEnergy': 13.2898092269897, 
    'wallTime': 5065.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 45, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3004, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10024, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.05521666632558e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 03:56:00 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.deleteFeatures(('CANTILEVER_SLAB-1', 
    'CANTILEVER_SLAB-2'))
# Save by mofid on 2024_08_05-03.56.17; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5156, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6568, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21324296237435e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0247986856848001, 
    'stableTimeIncrement': 3.21324364449538e-06, 
    'internalEnergy': 5.09171104431152, 'stepTime': 0.0247986856848001, 
    'totalEnergy': -976.662170410156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000175110253621824, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 7718, 'distortionContrEnergy': 0.0, 
    'externalWork': 19988.19140625, 'kineticEnergy': 935.687316894531, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0486625544726849, 
    'stableTimeIncrement': 3.21324137075862e-06, 
    'internalEnergy': 8.64457702636719, 'stepTime': 0.0486625544726849, 
    'totalEnergy': -2888.81274414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000497606524731964, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 15142, 'distortionContrEnergy': 0.0, 
    'externalWork': 24798.431640625, 'kineticEnergy': 1022.14471435547, 
    'wallTime': 241.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0721171423792839, 
    'stableTimeIncrement': 3.21324137075862e-06, 
    'internalEnergy': 8.74235820770264, 'stepTime': 0.0721171423792839, 
    'totalEnergy': -2906.47192382812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00166270486079156, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 22441, 'distortionContrEnergy': 0.0, 
    'externalWork': 24794.57421875, 'kineticEnergy': 1000.52600097656, 
    'wallTime': 361.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0957355201244354, 
    'stableTimeIncrement': 3.21323659591144e-06, 
    'internalEnergy': 8.74391174316406, 'stepTime': 0.0957355201244354, 
    'totalEnergy': -2911.74780273438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00386162591166794, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 29796, 'distortionContrEnergy': 0.0, 
    'externalWork': 24790.361328125, 'kineticEnergy': 991.04931640625, 
    'wallTime': 481.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100003205239773, 
    'stableTimeIncrement': 3.21324000651657e-06, 
    'internalEnergy': 8.7442798614502, 'stepTime': 0.100003205239773, 
    'totalEnergy': -2912.35302734375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00438846740871668, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 31125, 'distortionContrEnergy': 0.0, 
    'externalWork': 24789.58203125, 'kineticEnergy': 989.668884277344, 
    'wallTime': 503.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.123640850186348, 
    'stableTimeIncrement': 3.21324000651657e-06, 
    'internalEnergy': 8.74905300140381, 'stepTime': 0.123640850186348, 
    'totalEnergy': -2914.85961914062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00795166566967964, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 38486, 'distortionContrEnergy': 0.0, 
    'externalWork': 24785.1953125, 'kineticEnergy': 982.786743164062, 
    'wallTime': 623.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('CANTILEVER_SLAB-3', 
    ), vector=(0.0805, 1.6305, 0.0))
# Save by mofid on 2024_08_05-04.09.49; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4156, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6096, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21324705510051e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 04:10:17 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6152, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6192, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21324705510051e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0241464339196682, 
    'stableTimeIncrement': 3.21324705510051e-06, 
    'internalEnergy': 2.56965470314026, 'stepTime': 0.0241464339196682, 
    'totalEnergy': -979.35888671875, 'jobName': 'Job-1', 
    'artificialEnergy': 4.16068302857772e-13, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 7515, 'distortionContrEnergy': 0.0, 
    'externalWork': 18459.712890625, 'kineticEnergy': 648.580688476562, 
    'wallTime': 120.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0453415364027023, 
    'stableTimeIncrement': 3.21324705510051e-06, 
    'internalEnergy': 15.4408302307129, 'stepTime': 0.0453415364027023, 
    'totalEnergy': -3743.99194335938, 'jobName': 'Job-1', 
    'artificialEnergy': 4.36268772843751e-12, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 14109, 'distortionContrEnergy': 0.0, 
    'externalWork': 33599.3671875, 'kineticEnergy': 674.315979003906, 
    'wallTime': 244.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['CANTILEVER_SLAB-3']
# Save by mofid on 2024_08_05-04.15.28; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 512, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5824, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016854703426, 
    'stableTimeIncrement': 1.74675187736284e-05, 
    'internalEnergy': -4.32612943649292, 'stepTime': 0.100016854703426, 
    'totalEnergy': -1554.43774414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5730, 'distortionContrEnergy': 0.0, 
    'externalWork': 14880.4541015625, 'kineticEnergy': 378.539886474609, 
    'wallTime': 93.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200012028217316, 
    'stableTimeIncrement': 1.74554079421796e-05, 
    'internalEnergy': -3.17490077018738, 'stepTime': 0.200012028217316, 
    'totalEnergy': -1697.20751953125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11353, 'distortionContrEnergy': 0.0, 
    'externalWork': 14874.166015625, 'kineticEnergy': 215.624633789062, 
    'wallTime': 195.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.30001500248909, 
    'stableTimeIncrement': 1.74844972207211e-05, 
    'internalEnergy': -3.17113733291626, 'stepTime': 0.30001500248909, 
    'totalEnergy': -1703.41491699219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17079, 'distortionContrEnergy': 0.0, 
    'externalWork': 14867.6103515625, 'kineticEnergy': 198.615570068359, 
    'wallTime': 304.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400014042854309, 
    'stableTimeIncrement': 1.74901542777661e-05, 
    'internalEnergy': -2.81778764724731, 'stepTime': 0.400014042854309, 
    'totalEnergy': -1747.58312988281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22802, 'distortionContrEnergy': 0.0, 
    'externalWork': 14862.640625, 'kineticEnergy': 146.032150268555, 
    'wallTime': 414.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500006496906281, 
    'stableTimeIncrement': 1.82786516234046e-05, 
    'internalEnergy': -2.80155515670776, 'stepTime': 0.500006496906281, 
    'totalEnergy': -1759.09045410156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28391, 'distortionContrEnergy': 0.0, 
    'externalWork': 14858.1298828125, 'kineticEnergy': 129.962097167969, 
    'wallTime': 518.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600013673305511, 
    'stableTimeIncrement': 1.82752155524213e-05, 
    'internalEnergy': -2.8866879940033, 'stepTime': 0.600013673305511, 
    'totalEnergy': -1764.02819824219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33858, 'distortionContrEnergy': 0.0, 
    'externalWork': 14854.908203125, 'kineticEnergy': 121.822441101074, 
    'wallTime': 627.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.697885453701019, 
    'stableTimeIncrement': 1.82938183570514e-05, 
    'internalEnergy': -2.88449764251709, 'stepTime': 0.697885453701019, 
    'totalEnergy': -1766.03735351562, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39207, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.5419921875, 'kineticEnergy': 117.432670593262, 
    'wallTime': 748.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.70000809431076, 
    'stableTimeIncrement': 1.82879175554262e-05, 
    'internalEnergy': -2.88449811935425, 'stepTime': 0.70000809431076, 
    'totalEnergy': -1766.06701660156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39323, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.498046875, 'kineticEnergy': 117.358596801758, 
    'wallTime': 751.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=25.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(1.5, 0.0))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=25.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.25, 0.0), point2=(
    0.25, 2.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.25, 2.0), point2=(
    -1.0, 2.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.0, 2.0), point2=(
    -1.0, 2.25))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.0, 2.25), point2=
    (-1.375, 2.25))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.375, 2.25), 
    point2=(-1.375, 2.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.375, 2.0), 
    point2=(0.0, 1.5))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 1.5), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Slab', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Slab'].BaseSolidExtrude(depth=0.2, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2024_08_05-04.33.21; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (9.75, 0.0, -0.1))
# Save by mofid on 2024_08_05-04.34.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6584, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11228, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Slab', name=
    'Section-Slab-2', thickness=None)
mdb.models['Model-1'].parts['Slab'].Set(cells=
    mdb.models['Model-1'].parts['Slab'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-Slab-2')
mdb.models['Model-1'].parts['Slab'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Slab'].sets['Set-Slab-2'], sectionName=
    'Section-Slab-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016854703426, 
    'stableTimeIncrement': 1.74675187736284e-05, 
    'internalEnergy': -4.32612943649292, 'stepTime': 0.100016854703426, 
    'totalEnergy': -1554.43774414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5730, 'distortionContrEnergy': 0.0, 
    'externalWork': 14880.4541015625, 'kineticEnergy': 378.539886474609, 
    'wallTime': 79.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (9.75, 0.0, -0.1))
# Save by mofid on 2024_08_05-04.36.16; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Slab'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT), ElemType(
    elemCode=C3D4, elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['Slab'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), ))
mdb.models['Model-1'].parts['Slab'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.02)
mdb.models['Model-1'].parts['Slab'].generateMesh()
# Save by mofid on 2024_08_05-04.37.22; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4040, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1956, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58576892772544e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00400888221338391, 
    'stableTimeIncrement': 1.58575960540475e-06, 
    'internalEnergy': 0.497715413570404, 'stepTime': 0.00400888221338391, 
    'totalEnergy': -0.0273271184414625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0164878517389297, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2528, 'distortionContrEnergy': 0.0, 
    'externalWork': 51.7632827758789, 'kineticEnergy': 2.08657073974609, 
    'wallTime': 120.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00745275476947427, 
    'stableTimeIncrement': 1.58576335707039e-06, 
    'internalEnergy': 0.279929846525192, 'stepTime': 0.00745275476947427, 
    'totalEnergy': -1.48936152458191, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0267894230782986, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4700, 'distortionContrEnergy': 0.0, 
    'externalWork': 855.578308105469, 'kineticEnergy': 13.1796894073486, 
    'wallTime': 241.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0101695396006107, 
    'stableTimeIncrement': 1.58576619924133e-06, 
    'internalEnergy': 0.231532171368599, 'stepTime': 0.0101695396006107, 
    'totalEnergy': -6.81368970870972, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0347079671919346, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 6413, 'distortionContrEnergy': 0.0, 
    'externalWork': 3220.15185546875, 'kineticEnergy': 36.3471870422363, 
    'wallTime': 361.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
# Save by mofid on 2024_08_05-04.44.48; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5600, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10760, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0868961364030838, 
    'stableTimeIncrement': 1.74246597453021e-05, 
    'internalEnergy': -0.474053919315338, 'stepTime': 0.0868961364030838, 
    'totalEnergy': -712.729187011719, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4978, 'distortionContrEnergy': 0.0, 
    'externalWork': 12388.53125, 'kineticEnergy': 209.146530151367, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016854703426, 
    'stableTimeIncrement': 1.74675187736284e-05, 
    'internalEnergy': -4.32612943649292, 'stepTime': 0.100016854703426, 
    'totalEnergy': -1554.43774414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5730, 'distortionContrEnergy': 0.0, 
    'externalWork': 14880.4541015625, 'kineticEnergy': 378.539886474609, 
    'wallTime': 141.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178167313337326, 
    'stableTimeIncrement': 1.74645792867523e-05, 
    'internalEnergy': -3.17677736282349, 'stepTime': 0.178167313337326, 
    'totalEnergy': -1694.79455566406, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 10102, 'distortionContrEnergy': 0.0, 
    'externalWork': 14875.3330078125, 'kineticEnergy': 220.485443115234, 
    'wallTime': 261.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200012028217316, 
    'stableTimeIncrement': 1.74554079421796e-05, 
    'internalEnergy': -3.17490077018738, 'stepTime': 0.200012028217316, 
    'totalEnergy': -1697.20751953125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11353, 'distortionContrEnergy': 0.0, 
    'externalWork': 14874.166015625, 'kineticEnergy': 215.624633789062, 
    'wallTime': 293.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.295088291168213, 
    'stableTimeIncrement': 1.7458682123106e-05, 
    'internalEnergy': -3.17113256454468, 'stepTime': 0.295088291168213, 
    'totalEnergy': -1703.1904296875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16797, 'distortionContrEnergy': 0.0, 
    'externalWork': 14867.9755859375, 'kineticEnergy': 199.203979492188, 
    'wallTime': 413.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.30001500248909, 
    'stableTimeIncrement': 1.74844972207211e-05, 
    'internalEnergy': -3.17113733291626, 'stepTime': 0.30001500248909, 
    'totalEnergy': -1703.41491699219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17079, 'distortionContrEnergy': 0.0, 
    'externalWork': 14867.6103515625, 'kineticEnergy': 198.615570068359, 
    'wallTime': 419.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400014042854309, 
    'stableTimeIncrement': 1.74901542777661e-05, 
    'internalEnergy': -2.81778764724731, 'stepTime': 0.400014042854309, 
    'totalEnergy': -1747.58312988281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22802, 'distortionContrEnergy': 0.0, 
    'externalWork': 14862.640625, 'kineticEnergy': 146.032150268555, 
    'wallTime': 525.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500006496906281, 
    'stableTimeIncrement': 1.82786516234046e-05, 
    'internalEnergy': -2.80155515670776, 'stepTime': 0.500006496906281, 
    'totalEnergy': -1759.09045410156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28391, 'distortionContrEnergy': 0.0, 
    'externalWork': 14858.1298828125, 'kineticEnergy': 129.962097167969, 
    'wallTime': 625.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600013673305511, 
    'stableTimeIncrement': 1.82752155524213e-05, 
    'internalEnergy': -2.8866879940033, 'stepTime': 0.600013673305511, 
    'totalEnergy': -1764.02819824219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33858, 'distortionContrEnergy': 0.0, 
    'externalWork': 14854.908203125, 'kineticEnergy': 121.822441101074, 
    'wallTime': 726.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.70000809431076, 
    'stableTimeIncrement': 1.82879175554262e-05, 
    'internalEnergy': -2.88449811935425, 'stepTime': 0.70000809431076, 
    'totalEnergy': -1766.06701660156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39323, 'distortionContrEnergy': 0.0, 
    'externalWork': 14852.498046875, 'kineticEnergy': 117.358596801758, 
    'wallTime': 828.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800013720989227, 
    'stableTimeIncrement': 1.8277814888279e-05, 
    'internalEnergy': -2.87421035766602, 'stepTime': 0.800013720989227, 
    'totalEnergy': -1767.56787109375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44789, 'distortionContrEnergy': 0.0, 
    'externalWork': 14850.7158203125, 'kineticEnergy': 114.058494567871, 
    'wallTime': 931.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900009751319885, 
    'stableTimeIncrement': 1.82901931111701e-05, 
    'internalEnergy': -2.86851835250854, 'stepTime': 0.900009751319885, 
    'totalEnergy': -1768.71997070312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50254, 'distortionContrEnergy': 0.0, 
    'externalWork': 14849.486328125, 'kineticEnergy': 111.666984558105, 
    'wallTime': 1032.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00001239776611, 
    'stableTimeIncrement': 1.82502444658894e-05, 
    'internalEnergy': -2.83974552154541, 'stepTime': 1.00001239776611, 
    'totalEnergy': -1776.296875, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 55722, 
    'distortionContrEnergy': 0.0, 'externalWork': 14848.7236328125, 
    'kineticEnergy': 103.281890869141, 'wallTime': 1132.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10001349449158, 
    'stableTimeIncrement': 1.82701896846993e-05, 
    'internalEnergy': -2.77384757995605, 'stepTime': 1.10001349449158, 
    'totalEnergy': -1783.73791503906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61205, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.4033203125, 'kineticEnergy': 95.3559875488281, 
    'wallTime': 1232.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20001614093781, 
    'stableTimeIncrement': 1.82831117854221e-05, 
    'internalEnergy': -2.2089855670929, 'stepTime': 1.20001614093781, 
    'totalEnergy': -1786.80786132812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 66688, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.4658203125, 'kineticEnergy': 91.7120742797852, 
    'wallTime': 1333.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.30000269412994, 
    'stableTimeIncrement': 1.82891963049769e-05, 
    'internalEnergy': -2.20306277275085, 'stepTime': 1.30000269412994, 
    'totalEnergy': -1789.37158203125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 72170, 'distortionContrEnergy': 0.0, 
    'externalWork': 14848.763671875, 'kineticEnergy': 89.4329986572266, 
    'wallTime': 1448.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
# Save by mofid on 2024_08_05-05.12.05; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (10.0, 0.5, -0.15))
# Save by mofid on 2024_08_05-05.12.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7252, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6472, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58578518494323e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (-5.0, 0.0, 0.0))
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-05.13.38; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2708, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10700, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58583657139388e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00355539377778769, 
    'stableTimeIncrement': 1.58583770826226e-06, 
    'internalEnergy': 0.00406611151993275, 'stepTime': 0.00355539377778769, 
    'totalEnergy': -0.0235451217740774, 'jobName': 'Job-1', 
    'artificialEnergy': 3.63247233399304e-14, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 2242, 'distortionContrEnergy': 0.0, 
    'externalWork': 61.1551170349121, 'kineticEnergy': 1.68653082847595, 
    'wallTime': 122.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00811521336436272, 
    'stableTimeIncrement': 1.58583657139388e-06, 
    'internalEnergy': 0.0202988144010305, 'stepTime': 0.00811521336436272, 
    'totalEnergy': -5.32484865188599, 'jobName': 'Job-1', 
    'artificialEnergy': 7.09870747253594e-13, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 5117, 'distortionContrEnergy': 0.0, 
    'externalWork': 1365.89453125, 'kineticEnergy': 24.7173595428467, 
    'wallTime': 242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0127528011798859, 
    'stableTimeIncrement': 1.58583770826226e-06, 
    'internalEnergy': 0.521124124526978, 'stepTime': 0.0127528011798859, 
    'totalEnergy': -58.2702178955078, 'jobName': 'Job-1', 
    'artificialEnergy': 3.6243185102397e-12, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 8041, 'distortionContrEnergy': 0.0, 
    'externalWork': 9013.7236328125, 'kineticEnergy': 138.466796875, 
    'wallTime': 362.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0173814259469509, 
    'stableTimeIncrement': 1.58583657139388e-06, 
    'internalEnergy': 5.7162504196167, 'stepTime': 0.0173814259469509, 
    'totalEnergy': -785.410522460938, 'jobName': 'Job-1', 
    'artificialEnergy': 1.12491344364529e-11, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 10960, 'distortionContrEnergy': 0.0, 
    'externalWork': 25167.625, 'kineticEnergy': 1082.66491699219, 
    'wallTime': 482.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0219449605792761, 
    'stableTimeIncrement': 1.58583770826226e-06, 
    'internalEnergy': 13.1514253616333, 'stepTime': 0.0219449605792761, 
    'totalEnergy': -2270.33935546875, 'jobName': 'Job-1', 
    'artificialEnergy': 2.66070429577603e-11, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 13839, 'distortionContrEnergy': 0.0, 
    'externalWork': 37143.8984375, 'kineticEnergy': 1529.3544921875, 
    'wallTime': 602.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0264863036572933, 
    'stableTimeIncrement': 1.58583748088859e-06, 
    'internalEnergy': 19.0705604553223, 'stepTime': 0.0264863036572933, 
    'totalEnergy': -3095.0654296875, 'jobName': 'Job-1', 
    'artificialEnergy': 5.27425082774702e-11, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 16704, 'distortionContrEnergy': 0.0, 
    'externalWork': 40858.890625, 'kineticEnergy': 1514.00280761719, 
    'wallTime': 722.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0310070402920246, 
    'stableTimeIncrement': 1.58583770826226e-06, 
    'internalEnergy': 32.0489234924316, 'stepTime': 0.0310070402920246, 
    'totalEnergy': -5660.2138671875, 'jobName': 'Job-1', 
    'artificialEnergy': 9.36323241162995e-11, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 19556, 'distortionContrEnergy': 0.0, 
    'externalWork': 41273.3984375, 'kineticEnergy': 2471.76342773438, 
    'wallTime': 842.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
# Save by mofid on 2024_08_05-05.30.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4416, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10044, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58580655806873e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00375043926760554, 
    'stableTimeIncrement': 1.58580053266633e-06, 
    'internalEnergy': 0.316839694976807, 'stepTime': 0.00375043926760554, 
    'totalEnergy': -0.00236438121646643, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0359404906630516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2365, 'distortionContrEnergy': 0.0, 
    'externalWork': 91.5480499267578, 'kineticEnergy': 0.922308683395386, 
    'wallTime': 122.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
# Save by mofid on 2024_08_05-05.34.42; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10460, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3312, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016854703426, 
    'stableTimeIncrement': 1.74675187736284e-05, 
    'internalEnergy': -4.32612943649292, 'stepTime': 0.100016854703426, 
    'totalEnergy': -1554.43774414062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5730, 'distortionContrEnergy': 0.0, 
    'externalWork': 14880.4541015625, 'kineticEnergy': 378.539886474609, 
    'wallTime': 76.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Slab-1'], ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (4.75, 0.0, -0.1))
# Save by mofid on 2024_08_05-05.39.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Slab-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=2.0, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (5.0, 1.0)), name=
    'Amp-2', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude='Amp-2')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Slab-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude='Amp-2', createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=2.0, name='Load-3', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-2'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Slab-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-3')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'])
# Save by mofid on 2024_08_05-05.44.11; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-05.44.31; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 556, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1988, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58582031417609e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00310977431945503, 
    'stableTimeIncrement': 1.58582076892344e-06, 
    'internalEnergy': 0.0052571757696569, 'stepTime': 0.00310977431945503, 
    'totalEnergy': -0.00725053204223514, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000146147693158127, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1961, 'distortionContrEnergy': 0.0, 
    'externalWork': 32.7160186767578, 'kineticEnergy': 0.762922406196594, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Slab-1', ), vector=
    (6.625, 0.0, 0.0))
# Save by mofid on 2024_08_05-05.50.26; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1344, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 4 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9096, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58576892772544e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 17.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000187120502232574, 
    'stableTimeIncrement': 1.58576892772544e-06, 
    'internalEnergy': 0.000115306480438448, 'stepTime': 0.000187120502232574, 
    'totalEnergy': 7.12463734089397e-05, 'jobName': 'Job-1', 
    'artificialEnergy': 2.05146760690056e-10, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 118, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.00197624671272933, 'kineticEnergy': 0.00134975521359593, 
    'wallTime': 218.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000393271446228027, 
    'stableTimeIncrement': 1.58576892772544e-06, 
    'internalEnergy': 0.000346915272530168, 'stepTime': 0.000393271446228027, 
    'totalEnergy': 7.96555541455746e-05, 'jobName': 'Job-1', 
    'artificialEnergy': 9.0526852680739e-10, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 248, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.105502441525459, 'kineticEnergy': 0.00496749067679048, 
    'wallTime': 381.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Slab'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Slab'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=25.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.25, 0.0), point2=(
    0.25, 2.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.25, 2.0), point2=(
    -1.5, 2.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.5, 2.0), point2=(
    -1.5, 2.25))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.5, 2.25), point2=
    (-1.75, 2.25))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.75, 2.25), 
    point2=(-1.75, 1.875))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.75, 1.875), 
    point2=(0.0, 1.5))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 1.5), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-6', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-6'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
mdb.models['Model-1'].parts['Part-6'].setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=mdb.models['Model-1'].parts['Part-6'].cells.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['Part-6'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-6'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-6'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['Part-6'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), ))
# Save by mofid on 2024_08_05-06.14.49; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-6-1', 
    part=mdb.models['Model-1'].parts['Part-6'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-6-1', ), 
    vector=(4.75, 0.0, 0.0))
# Save by mofid on 2024_08_05-06.15.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].loads['Load-3']
del mdb.models['Model-1'].loads['Load-2']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=2.0, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-3'])
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-4', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=2.0, name='Load-3', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-4'])
del mdb.models['Model-1'].boundaryConditions['BC-5']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-4')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-4'])
# Save by mofid on 2024_08_05-06.17.36; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-06.17.42; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Part-6'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Part-6'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-6'].edges[13], MIDDLE))
# Save by mofid on 2024_08_05-06.18.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 44244: Unknown assembly node set SET-4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-3 NOT FOUND.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-4 NOT FOUND.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_PART-6-1_PART-6-REFPT_ HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-3 HAS NOT BEEN LOCATED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-4 HAS NOT BEEN LOCATED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-4 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-4 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.sets['Set-4']
mdb.models['Model-1'].parts['Part-6'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=STANDARD), ElemType(elemCode=R3D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#3ff ]', 
    ), ), ))
mdb.models['Model-1'].parts['Part-6'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=STANDARD), ElemType(elemCode=R3D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#3ff ]', 
    ), ), ))
mdb.models['Model-1'].parts['Part-6'].setMeshControls(algorithm=MEDIAL_AXIS, 
    elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#3bf ]', 
    ), ))
mdb.models['Model-1'].parts['Part-6'].generateMesh()
# Save by mofid on 2024_08_05-06.20.28; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].boundaryConditions['BC-5']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#40 ]', ), ), name='Set-4')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-4'])
# Save by mofid on 2024_08_05-06.21.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2924, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-5', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].referencePoints[5], 
    ))
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-6', region=mdb.models['Model-1'].rootAssembly.sets['Set-5'])
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#220 ]', ), ), name='Set-6')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-6'])
del mdb.models['Model-1'].boundaryConditions['BC-7']
# Save by mofid on 2024_08_05-06.26.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3012, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1256, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 06:27:45 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1652, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8516, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.10000366717577, 
    'stableTimeIncrement': 1.74436645465903e-05, 
    'internalEnergy': 6.32635736465454, 'stepTime': 0.10000366717577, 
    'totalEnergy': -820.267517089844, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5728, 'distortionContrEnergy': 0.0, 'externalWork': 15319.875, 
    'kineticEnergy': 259.729217529297, 'wallTime': 103.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-6-1', ), 
    vector=(7.0, 0.125, 0.0))
# Save by mofid on 2024_08_05-06.33.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3908, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6304, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 100.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 203.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-06.38.15; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300007522106171, 
    'stableTimeIncrement': 1.82956300704973e-05, 
    'internalEnergy': 0.573885381221771, 'stepTime': 0.300007522106171, 
    'totalEnergy': -1102.64221191406, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16900, 'distortionContrEnergy': 0.0, 
    'externalWork': 13380.5185546875, 'kineticEnergy': 155.934875488281, 
    'wallTime': 308.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.394855290651321, 
    'stableTimeIncrement': 1.82789754035184e-05, 
    'internalEnergy': -56.3348999023438, 'stepTime': 0.394855290651321, 
    'totalEnergy': -1126.54663085938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22098, 'distortionContrEnergy': 0.0, 
    'externalWork': 13374.404296875, 'kineticEnergy': 130.380233764648, 
    'wallTime': 428.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400017231702805, 
    'stableTimeIncrement': 1.82737276190892e-05, 
    'internalEnergy': -56.3157119750977, 'stepTime': 0.400017231702805, 
    'totalEnergy': -1130.41882324219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22382, 'distortionContrEnergy': 0.0, 
    'externalWork': 13374.1171875, 'kineticEnergy': 126.186347961426, 
    'wallTime': 435.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.482961803674698, 
    'stableTimeIncrement': 1.74414199136663e-05, 
    'internalEnergy': -55.7520942687988, 'stepTime': 0.482961803674698, 
    'totalEnergy': -1155.92565917969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 27100, 'distortionContrEnergy': 0.0, 
    'externalWork': 13371.646484375, 'kineticEnergy': 95.1998977661133, 
    'wallTime': 555.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500003278255463, 
    'stableTimeIncrement': 1.74615088326391e-05, 
    'internalEnergy': -55.6629753112793, 'stepTime': 0.500003278255463, 
    'totalEnergy': -1156.89965820312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28076, 'distortionContrEnergy': 0.0, 
    'externalWork': 13371.2080078125, 'kineticEnergy': 93.6730499267578, 
    'wallTime': 579.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.584429979324341, 
    'stableTimeIncrement': 1.74741908267606e-05, 
    'internalEnergy': -55.7937126159668, 'stepTime': 0.584429979324341, 
    'totalEnergy': -1157.97521972656, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32901, 'distortionContrEnergy': 0.0, 
    'externalWork': 13368.8974609375, 'kineticEnergy': 89.9872665405273, 
    'wallTime': 699.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600012898445129, 
    'stableTimeIncrement': 1.74740343936719e-05, 
    'internalEnergy': -56.0164604187012, 'stepTime': 0.600012898445129, 
    'totalEnergy': -1156.73486328125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33790, 'distortionContrEnergy': 0.0, 
    'externalWork': 13368.5029296875, 'kineticEnergy': 90.9037170410156, 
    'wallTime': 722.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.681293606758118, 
    'stableTimeIncrement': 1.36549706439837e-05, 
    'internalEnergy': 350.24267578125, 'stepTime': 0.681293606758118, 
    'totalEnergy': 4575.85595703125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38368, 'distortionContrEnergy': 0.0, 
    'externalWork': 13366.734375, 'kineticEnergy': 4464.21533203125, 
    'wallTime': 844.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700015366077423, 
    'stableTimeIncrement': 1.69152917806059e-05, 
    'internalEnergy': -532.269775390625, 'stepTime': 0.700015366077423, 
    'totalEnergy': 1967.04895019531, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39477, 'distortionContrEnergy': 0.0, 
    'externalWork': 13366.4873046875, 'kineticEnergy': 1663.86437988281, 
    'wallTime': 873.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.778018295764923, 
    'stableTimeIncrement': 1.69153991009807e-05, 
    'internalEnergy': -4818.71142578125, 'stepTime': 0.778018295764923, 
    'totalEnergy': 1941.1162109375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44085, 'distortionContrEnergy': 0.0, 
    'externalWork': 13365.6181640625, 'kineticEnergy': 1610.93371582031, 
    'wallTime': 993.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800007402896881, 
    'stableTimeIncrement': 1.69150971487397e-05, 'internalEnergy': -6009.46875, 
    'stepTime': 0.800007402896881, 'totalEnergy': 1935.60217285156, 
    'jobName': 'Job-1', 'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 45384, 'distortionContrEnergy': 0.0, 
    'externalWork': 13365.3828125, 'kineticEnergy': 1597.64807128906, 
    'wallTime': 1026.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.893194496631622, 
    'stableTimeIncrement': 1.69152554008178e-05, 
    'internalEnergy': -11056.70703125, 'stepTime': 0.893194496631622, 
    'totalEnergy': 1961.56750488281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50889, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.2744140625, 'kineticEnergy': 1591.94116210938, 
    'wallTime': 1146.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900016367435455, 
    'stableTimeIncrement': 1.69150407600682e-05, 
    'internalEnergy': -11426.212890625, 'stepTime': 0.900016367435455, 
    'totalEnergy': 1963.64575195312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 51292, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.201171875, 'kineticEnergy': 1591.76794433594, 
    'wallTime': 1155.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00000834465027, 
    'stableTimeIncrement': 1.69152572198072e-05, 
    'internalEnergy': -16842.271484375, 'stepTime': 1.00000834465027, 
    'totalEnergy': 1996.462890625, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 57199, 
    'distortionContrEnergy': 0.0, 'externalWork': 13363.314453125, 
    'kineticEnergy': 1589.46166992188, 'wallTime': 1271.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10000038146973, 
    'stableTimeIncrement': 1.69151098816656e-05, 
    'internalEnergy': -22258.986328125, 'stepTime': 1.10000038146973, 
    'totalEnergy': 2033.18322753906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 63106, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.7763671875, 'kineticEnergy': 1586.05773925781, 
    'wallTime': 1386.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.2000093460083, 
    'stableTimeIncrement': 1.691515717539e-05, 
    'internalEnergy': -27676.2421875, 'stepTime': 1.2000093460083, 
    'totalEnergy': 2070.73901367188, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 69014, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.5771484375, 'kineticEnergy': 1584.12622070312, 
    'wallTime': 1502.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.29802083969116, 
    'stableTimeIncrement': 1.69149770954391e-05, 
    'internalEnergy': -32988.34765625, 'stepTime': 1.29802083969116, 
    'totalEnergy': 2103.79760742188, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 74804, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.8037109375, 'kineticEnergy': 1581.64929199219, 
    'wallTime': 1622.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.30000138282776, 
    'stableTimeIncrement': 1.69149916473543e-05, 
    'internalEnergy': -33095.703125, 'stepTime': 1.30000138282776, 
    'totalEnergy': 2104.41918945312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 74921, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.8095703125, 'kineticEnergy': 1581.6396484375, 
    'wallTime': 1624.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.38616347312927, 
    'stableTimeIncrement': 1.69150243891636e-05, 
    'internalEnergy': -37765.00390625, 'stepTime': 1.38616347312927, 
    'totalEnergy': 2127.37158203125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 80011, 'distortionContrEnergy': 0.0, 
    'externalWork': 13363.1953125, 'kineticEnergy': 1579.24963378906, 
    'wallTime': 1744.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.40001034736633, 
    'stableTimeIncrement': 1.6915008018259e-05, 
    'internalEnergy': -38515.45703125, 'stepTime': 1.40001034736633, 
    'totalEnergy': 2131.00537109375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 80829, 'distortionContrEnergy': 0.0, 
    'externalWork': 13363.27734375, 'kineticEnergy': 1578.64086914062, 
    'wallTime': 1764.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.48561382293701, 
    'stableTimeIncrement': 1.69150589499623e-05, 
    'internalEnergy': -43156.61328125, 'stepTime': 1.48561382293701, 
    'totalEnergy': 2156.03955078125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 85886, 'distortionContrEnergy': 0.0, 
    'externalWork': 13363.9033203125, 'kineticEnergy': 1576.21435546875, 
    'wallTime': 1884.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.50001204013824, 
    'stableTimeIncrement': 1.66084391821641e-05, 
    'internalEnergy': -43377.55859375, 'stepTime': 1.50001204013824, 
    'totalEnergy': 932.070068359375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 86733, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.0166015625, 'kineticEnergy': 351.536834716797, 
    'wallTime': 1904.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.58311212062836, 
    'stableTimeIncrement': 1.75624172698008e-05, 
    'internalEnergy': -43338.77734375, 'stepTime': 1.58311212062836, 
    'totalEnergy': 687.495788574219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 91537, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.6513671875, 'kineticEnergy': 50.7905540466309, 
    'wallTime': 2024.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.60001170635223, 
    'stableTimeIncrement': 1.75895747815957e-05, 
    'internalEnergy': -43338.140625, 'stepTime': 1.60001170635223, 
    'totalEnergy': 687.827209472656, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 92500, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.763671875, 'kineticEnergy': 50.5986175537109, 
    'wallTime': 2051.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-3'].setValues(amplitude='Amp-2', magnitude=
    100.0)
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude='Amp-2', magnitude=
    100.0)
# Save by mofid on 2024_08_05-07.10.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.67497336864471, 
    'stableTimeIncrement': 1.74661927303532e-05, 
    'internalEnergy': -43333.33984375, 'stepTime': 1.67497336864471, 
    'totalEnergy': 690.7333984375, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 96796, 
    'distortionContrEnergy': 0.0, 'externalWork': 13365.314453125, 
    'kineticEnergy': 49.1999359130859, 'wallTime': 2172.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70001649856567, 
    'stableTimeIncrement': 1.74602337210672e-05, 
    'internalEnergy': -43329.3671875, 'stepTime': 1.70001649856567, 
    'totalEnergy': 694.272766113281, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 98233, 'distortionContrEnergy': 0.0, 
    'externalWork': 13365.4599609375, 'kineticEnergy': 48.9067726135254, 
    'wallTime': 2214.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
# Save by mofid on 2024_08_05-07.12.21; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9684, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2320, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0848208069801331, 
    'stableTimeIncrement': 1.74411197804147e-05, 
    'internalEnergy': 0.814348042011261, 'stepTime': 0.0848208069801331, 
    'totalEnergy': -777.9833984375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4859, 'distortionContrEnergy': 0.0, 
    'externalWork': 11823.6845703125, 'kineticEnergy': 193.737609863281, 
    'wallTime': 120.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 144.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude=UNSET)
mdb.models['Model-1'].loads['Load-3'].setValues(amplitude=UNSET)
# Save by mofid on 2024_08_05-07.16.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11088, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1568, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0861646384000778, 
    'stableTimeIncrement': 1.74569777300349e-05, 
    'internalEnergy': 0.805750250816345, 'stepTime': 0.0861646384000778, 
    'totalEnergy': -839.189025878906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4936, 'distortionContrEnergy': 0.0, 
    'externalWork': 12177.3486328125, 'kineticEnergy': 264.817108154297, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 140.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].amplitudes['Amp-2'].setValues(data=((0.0, 0.0), (1.0, 
    1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].loads['Load-2'].setValues(magnitude=10000.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=10000.0)
mdb.models['Model-1'].loads['Load-3'].setValues(amplitude='Amp-2')
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude='Amp-2')
# Save by mofid on 2024_08_05-07.26.05; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3360, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10496, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 82.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(magnitude=4.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=3.0)
# Save by mofid on 2024_08_05-07.29.29; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6424, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11144, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 81.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 174.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'CANTILEVER_SLAB-1', part=mdb.models['Model-1'].parts['CANTILEVER_SLAB'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('CANTILEVER_SLAB-1', 
    ), vector=(10.545, 2.960556, 0.0))
# Save by mofid on 2024_08_05-07.37.26; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Surface(face1Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#ff803fcb #1f7 ]', ), ), face2Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#0:2 #1f640000 #5c77e00 ]', ), ), face3Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#1002 #401 #200 #40000 ]', ), ), face4Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#2241 #44c210 #9842000 #400000 ]', ), ), face5Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#86000000 #0 #10c #21800 ]', ), ), face6Elements=
    mdb.models['Model-1'].rootAssembly.instances['CANTILEVER_SLAB-1'].elements.getSequenceFromMask(
    mask=('[#59800188 #33000 #66000b3 #16600 ]', ), ), name='Surf-5')
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=5.0, name='Load-4', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-5'])
# Save by mofid on 2024_08_05-07.40.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9220, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 75 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1348, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21325160257402e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0251649748533964, 
    'stableTimeIncrement': 3.21324932883726e-06, 
    'internalEnergy': 3.45282649993896, 'stepTime': 0.0251649748533964, 
    'totalEnergy': -1479.36853027344, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000420408439822495, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 7832, 'distortionContrEnergy': 0.0, 
    'externalWork': 18425.181640625, 'kineticEnergy': 803.296569824219, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0465310588479042, 
    'stableTimeIncrement': 3.21325069307932e-06, 
    'internalEnergy': 9.99915599822998, 'stepTime': 0.0465310588479042, 
    'totalEnergy': -3300.26416015625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000690318935085088, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 14479, 'distortionContrEnergy': 0.0, 
    'externalWork': 27694.1796875, 'kineticEnergy': 869.905944824219, 
    'wallTime': 243.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['CANTILEVER_SLAB-1']
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].edges[2], MIDDLE))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-6', side2Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
del mdb.models['Model-1'].loads['Load-4']
mdb.models['Model-1'].rootAssembly.Set(name='Set-7', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[46], ))
mdb.models['Model-1'].ConcentratedForce(cf1=23.0, cf2=22.0, cf3=22.0, 
    createStepName='Step-1', distributionType=UNIFORM, field='', localCsys=None
    , name='Load-4', region=mdb.models['Model-1'].rootAssembly.sets['Set-7'])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].edges[23], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.Set(name='Set-8', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[49], ))
mdb.models['Model-1'].ConcentratedForce(cf1=22.0, cf2=22.0, cf3=22.0, 
    createStepName='Step-1', distributionType=UNIFORM, field='', localCsys=None
    , name='Load-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'])
# Save by mofid on 2024_08_05-07.49.29; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-7.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-7.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-7.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-8.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-8.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A CONCENTRATED LOAD HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-8.  THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-9', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].nodes.getSequenceFromMask(
    mask=('[#fc000000 #1eeddfff #6eddcdaf #0:7 #fff00000 #7fffff #0:4', 
    ' #318c0000 #8c010842 #21000211 #20000 #2000020 #2300 #0:4', 
    ' #ffff7000 #eff07ffe #f07ffbfb #7b188860 #0 #38 #800 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].nodes.getSequenceFromMask(
    mask=('[#2 ]', ), ))
mdb.models['Model-1'].loads['Load-4'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-9'])
# Save by mofid on 2024_08_05-07.51.47; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(name='Set-10', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].nodes.getSequenceFromMask(
    mask=('[#80 #0:7 #3000000 #ffffa1e0 #ffff #0:3 #fffe0000', 
    ' #fff #0:10 #8 #0:5 #1110000 #11111111:2 #11110001 ]', ), ))
mdb.models['Model-1'].loads['Load-5'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-10'])
# Save by mofid on 2024_08_05-07.52.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 700, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 77 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1032, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 83.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-5'].setValues(cf1=2.0, cf2=2.0, cf3=2.0, 
    distributionType=UNIFORM, field='')
mdb.models['Model-1'].loads['Load-4'].setValues(amplitude='Amp-2', cf1=2.0, 
    cf2=2.0, cf3=2.0, distributionType=UNIFORM, field='')
mdb.models['Model-1'].loads['Load-5'].setValues(amplitude='Amp-2', 
    distributionType=UNIFORM, field='')
# Save by mofid on 2024_08_05-07.55.15; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 696, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 77 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6348, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 106.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.196511074900627, 
    'stableTimeIncrement': 1.76005141838687e-05, 
    'internalEnergy': 0.594553291797638, 'stepTime': 0.196511074900627, 
    'totalEnergy': -1098.43737792969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11214, 'distortionContrEnergy': 0.0, 
    'externalWork': 13387.1884765625, 'kineticEnergy': 166.810546875, 
    'wallTime': 227.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 232.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(magnitude=1.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=1.0)
mdb.models['Model-1'].loads['Load-4'].suppress()
mdb.models['Model-1'].loads['Load-5'].suppress()
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8528, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 77 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10392, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 08:01:19 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7520, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 77 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5148, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0571837536990643, 
    'stableTimeIncrement': 1.74539927684236e-05, 
    'internalEnergy': 0.176942214369774, 'stepTime': 0.0571837536990643, 
    'totalEnergy': -258.675506591797, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3275, 'distortionContrEnergy': 0.0, 
    'externalWork': 4924.9921875, 'kineticEnergy': 95.0570373535156, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 215.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.149249389767647, 
    'stableTimeIncrement': 1.76045214175247e-05, 
    'internalEnergy': 0.593075752258301, 'stepTime': 0.149249389767647, 
    'totalEnergy': -1095.18615722656, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 8529, 'distortionContrEnergy': 0.0, 
    'externalWork': 13390.1025390625, 'kineticEnergy': 173.211685180664, 
    'wallTime': 335.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.194557458162308, 
    'stableTimeIncrement': 1.75968543771887e-05, 
    'internalEnergy': 0.594549357891083, 'stepTime': 0.194557458162308, 
    'totalEnergy': -1098.37121582031, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11103, 'distortionContrEnergy': 0.0, 
    'externalWork': 13387.3115234375, 'kineticEnergy': 167.000045776367, 
    'wallTime': 456.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 470.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.252409398555756, 
    'stableTimeIncrement': 1.82813455467112e-05, 
    'internalEnergy': 0.580273628234863, 'stepTime': 0.252409398555756, 
    'totalEnergy': -1101.41333007812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 14298, 'distortionContrEnergy': 0.0, 
    'externalWork': 13383.6064453125, 'kineticEnergy': 160.256469726562, 
    'wallTime': 590.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300007522106171, 
    'stableTimeIncrement': 1.82956300704973e-05, 
    'internalEnergy': 0.573885381221771, 'stepTime': 0.300007522106171, 
    'totalEnergy': -1102.64221191406, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16900, 'distortionContrEnergy': 0.0, 
    'externalWork': 13380.5185546875, 'kineticEnergy': 155.934875488281, 
    'wallTime': 669.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.393136352300644, 
    'stableTimeIncrement': 1.8135111531592e-05, 
    'internalEnergy': -55.9644203186035, 'stepTime': 0.393136352300644, 
    'totalEnergy': -1124.07263183594, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22003, 'distortionContrEnergy': 0.0, 
    'externalWork': 13374.5029296875, 'kineticEnergy': 133.282516479492, 
    'wallTime': 789.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400017231702805, 
    'stableTimeIncrement': 1.82737276190892e-05, 
    'internalEnergy': -56.3157119750977, 'stepTime': 0.400017231702805, 
    'totalEnergy': -1130.41882324219, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22382, 'distortionContrEnergy': 0.0, 
    'externalWork': 13374.1171875, 'kineticEnergy': 126.186347961426, 
    'wallTime': 797.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500003278255463, 
    'stableTimeIncrement': 1.74615088326391e-05, 
    'internalEnergy': -55.6629753112793, 'stepTime': 0.500003278255463, 
    'totalEnergy': -1156.89965820312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28076, 'distortionContrEnergy': 0.0, 
    'externalWork': 13371.2080078125, 'kineticEnergy': 93.6730499267578, 
    'wallTime': 912.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600012898445129, 
    'stableTimeIncrement': 1.74740343936719e-05, 
    'internalEnergy': -56.0164604187012, 'stepTime': 0.600012898445129, 
    'totalEnergy': -1156.73486328125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33790, 'distortionContrEnergy': 0.0, 
    'externalWork': 13368.5029296875, 'kineticEnergy': 90.9037170410156, 
    'wallTime': 1027.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700015366077423, 
    'stableTimeIncrement': 1.69152917806059e-05, 
    'internalEnergy': -532.269775390625, 'stepTime': 0.700015366077423, 
    'totalEnergy': 1967.04895019531, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39477, 'distortionContrEnergy': 0.0, 
    'externalWork': 13366.4873046875, 'kineticEnergy': 1663.86437988281, 
    'wallTime': 1148.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.797468245029449, 
    'stableTimeIncrement': 1.69150771398563e-05, 
    'internalEnergy': -5871.970703125, 'stepTime': 0.797468245029449, 
    'totalEnergy': 1935.75817871094, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45234, 'distortionContrEnergy': 0.0, 
    'externalWork': 13365.4130859375, 'kineticEnergy': 1598.7001953125, 
    'wallTime': 1268.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800007402896881, 
    'stableTimeIncrement': 1.69150971487397e-05, 'internalEnergy': -6009.46875, 
    'stepTime': 0.800007402896881, 'totalEnergy': 1935.60217285156, 
    'jobName': 'Job-1', 'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 45384, 'distortionContrEnergy': 0.0, 
    'externalWork': 13365.3828125, 'kineticEnergy': 1597.64807128906, 
    'wallTime': 1271.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.896106064319611, 
    'stableTimeIncrement': 1.69153136084788e-05, 
    'internalEnergy': -11214.4140625, 'stepTime': 0.896106064319611, 
    'totalEnergy': 1962.45520019531, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 51061, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.2431640625, 'kineticEnergy': 1591.8642578125, 
    'wallTime': 1391.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900016367435455, 
    'stableTimeIncrement': 1.69150407600682e-05, 
    'internalEnergy': -11426.212890625, 'stepTime': 0.900016367435455, 
    'totalEnergy': 1963.64575195312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 51292, 'distortionContrEnergy': 0.0, 
    'externalWork': 13364.201171875, 'kineticEnergy': 1591.76794433594, 
    'wallTime': 1396.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.984180986881256, 
    'stableTimeIncrement': 1.69151790032629e-05, 
    'internalEnergy': -15985.103515625, 'stepTime': 0.984180986881256, 
    'totalEnergy': 1990.70239257812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 56264, 'distortionContrEnergy': 0.0, 
    'externalWork': 13363.4296875, 'kineticEnergy': 1589.80554199219, 
    'wallTime': 1516.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00000834465027, 
    'stableTimeIncrement': 1.69152572198072e-05, 
    'internalEnergy': -16842.271484375, 'stepTime': 1.00000834465027, 
    'totalEnergy': 1996.462890625, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 57199, 
    'distortionContrEnergy': 0.0, 'externalWork': 13363.314453125, 
    'kineticEnergy': 1589.46166992188, 'wallTime': 1544.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.05928921699524, 
    'stableTimeIncrement': 1.69153136084788e-05, 
    'internalEnergy': -20053.3046875, 'stepTime': 1.05928921699524, 
    'totalEnergy': 2018.25659179688, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 60701, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.9541015625, 'kineticEnergy': 1587.21166992188, 
    'wallTime': 1668.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.09580230712891, 
    'stableTimeIncrement': 1.69152790476801e-05, 
    'internalEnergy': -22031.55859375, 'stepTime': 1.09580230712891, 
    'totalEnergy': 2031.72546386719, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 62858, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.7919921875, 'kineticEnergy': 1586.30700683594, 
    'wallTime': 1799.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10000038146973, 
    'stableTimeIncrement': 1.69151098816656e-05, 
    'internalEnergy': -22258.986328125, 'stepTime': 1.10000038146973, 
    'totalEnergy': 2033.18322753906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 63106, 'distortionContrEnergy': 0.0, 
    'externalWork': 13362.7763671875, 'kineticEnergy': 1586.05773925781, 
    'wallTime': 1826.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#3f1 ]', ), ), name='Set-11')
mdb.models['Model-1'].Gravity(comp2=-0.98, createStepName='Step-1', 
    distributionType=UNIFORM, field='', name='Load-6', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-11'])
# Save by mofid on 2024_08_05-08.35.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 1 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 2 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 3 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 4 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 5 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 6 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 7 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 8 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 9 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 10 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 11 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 12 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 13 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 14 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 15 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 16 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 17 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 18 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 19 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 20 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 21 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 22 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 23 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 24 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 25 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 26 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 27 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 28 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 29 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 30 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 31 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 32 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 33 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 34 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 35 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 36 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 37 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 38 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 39 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 40 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 41 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 42 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 43 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 44 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 45 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 46 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 47 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 48 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 49 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 50 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Error message limit reached. No further error messages will be reported.\nPlease see the dat file for more errors.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].suppress()
# Save by mofid on 2024_08_05-08.39.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9772, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 77 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2596, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-3'].setValues(amplitude=UNSET, magnitude=4.0)
mdb.models['Model-1'].loads['Load-2'].setValues(amplitude=UNSET, magnitude=4.0)
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#3ff ]', ), ), name='Set-12')
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-12'])
# Save by mofid on 2024_08_05-08.45.22; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 1 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 2 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 3 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 4 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 5 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 6 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 7 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 8 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 9 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 10 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 11 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 12 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 13 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 14 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 15 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 16 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 17 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 18 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 19 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 20 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 21 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 22 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 23 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 24 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 25 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 26 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 27 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 28 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 29 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 30 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 31 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 32 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 33 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 34 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 35 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 36 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 37 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 38 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 39 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 40 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 41 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 42 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 43 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 44 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 45 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 46 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 47 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 48 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 49 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 50 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Error message limit reached. No further error messages will be reported.\nPlease see the dat file for more errors.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].sets['Set-1'])
# Save by mofid on 2024_08_05-08.46.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6496, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 76 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4444, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0927270650863647, 
    'stableTimeIncrement': 1.7454260159866e-05, 
    'internalEnergy': 0.757845759391785, 'stepTime': 0.0927270650863647, 
    'totalEnergy': -992.5185546875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5312, 'distortionContrEnergy': 0.0, 
    'externalWork': 13305.6630859375, 'kineticEnergy': 215.6484375, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 131.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.182923898100853, 
    'stableTimeIncrement': 1.76099947566399e-05, 
    'internalEnergy': 0.594357430934906, 'stepTime': 0.182923898100853, 
    'totalEnergy': -1097.9580078125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 10442, 'distortionContrEnergy': 0.0, 
    'externalWork': 13388.0400390625, 'kineticEnergy': 168.144180297852, 
    'wallTime': 252.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 278.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].setValues(magnitude=2.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=1.0)
# Save by mofid on 2024_08_05-08.52.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1164, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 76 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2476, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0827614516019821, 
    'stableTimeIncrement': 1.74671913555358e-05, 
    'internalEnergy': 0.625028192996979, 'stepTime': 0.0827614516019821, 
    'totalEnergy': -744.172973632812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4741, 'distortionContrEnergy': 0.0, 
    'externalWork': 11219.0302734375, 'kineticEnergy': 109.183563232422, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 152.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'])
#* A gravity region may not contain reference points.
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.174106046557426, 
    'stableTimeIncrement': 1.75989389390452e-05, 
    'internalEnergy': 0.594260931015015, 'stepTime': 0.174106046557426, 
    'totalEnergy': -1097.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9941, 'distortionContrEnergy': 0.0, 
    'externalWork': 13388.5869140625, 'kineticEnergy': 169.114501953125, 
    'wallTime': 272.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 315.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-13')
mdb.models['Model-1'].loads['Load-1'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-13'])
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-3'].suppress()
# Save by mofid on 2024_08_05-08.58.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '18 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9140, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 76 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6332, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0830408185720444, 
    'stableTimeIncrement': 1.74602882907493e-05, 
    'internalEnergy': 0.642521917819977, 'stepTime': 0.0830408185720444, 
    'totalEnergy': -745.044311523438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4757, 'distortionContrEnergy': 0.0, 
    'externalWork': 11301.76171875, 'kineticEnergy': 111.761276245117, 
    'wallTime': 121.0})
mdb.meshEditOptions.setValues(enableUndo=True, maxUndoCacheElements=0.5)
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100017413496971, 
    'stableTimeIncrement': 1.75029072124744e-05, 
    'internalEnergy': 0.769590973854065, 'stepTime': 0.100017413496971, 
    'totalEnergy': -1053.02307128906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5729, 'distortionContrEnergy': 0.0, 
    'externalWork': 13392.552734375, 'kineticEnergy': 227.047805786133, 
    'wallTime': 147.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.166501969099045, 
    'stableTimeIncrement': 1.76125085999956e-05, 
    'internalEnergy': 0.594034254550934, 'stepTime': 0.166501969099045, 
    'totalEnergy': -1097.09631347656, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9509, 'distortionContrEnergy': 0.0, 
    'externalWork': 13389.0546875, 'kineticEnergy': 170.025375366211, 
    'wallTime': 277.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.19497986137867, 
    'stableTimeIncrement': 1.75968489202205e-05, 
    'internalEnergy': 0.59454882144928, 'stepTime': 0.19497986137867, 
    'totalEnergy': -1098.38549804688, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11127, 'distortionContrEnergy': 0.0, 
    'externalWork': 13387.28515625, 'kineticEnergy': 166.959106445312, 
    'wallTime': 465.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200013563036919, 
    'stableTimeIncrement': 1.7601931176614e-05, 
    'internalEnergy': 0.594586670398712, 'stepTime': 0.200013563036919, 
    'totalEnergy': -1098.53637695312, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11413, 'distortionContrEnergy': 0.0, 
    'externalWork': 13386.9677734375, 'kineticEnergy': 166.490036010742, 
    'wallTime': 714.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#3f1 ]', ), ), name='Set-14')
mdb.models['Model-1'].Gravity(comp2=-0.98, createStepName='Step-1', 
    distributionType=UNIFORM, field='', name='Load-7', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-14'])
mdb.models['Model-1'].parts['Part-6'].deleteMesh()
mdb.models['Model-1'].parts['Part-6'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.04)
mdb.models['Model-1'].parts['Part-6'].generateMesh()
# Save by mofid on 2024_08_05-09.15.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 1 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 2 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 3 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 4 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 5 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 6 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 7 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 8 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 9 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 10 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 11 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 12 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 13 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 14 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 15 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 16 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 17 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 18 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 19 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 20 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 21 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 22 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 23 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 24 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 25 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 26 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 27 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 28 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 29 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 30 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 31 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 32 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 33 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 34 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 35 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 36 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 37 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 38 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 39 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 40 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 41 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 42 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 43 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 44 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 45 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 46 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 47 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 48 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 49 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 50 INSTANCE PART-6-1. LOAD TYPE GRAV IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Error message limit reached. No further error messages will be reported.\nPlease see the dat file for more errors.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-7'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#3b1 ]', ), ), name='Set-15')
mdb.models['Model-1'].BodyForce(comp2=-0.9, createStepName='Step-1', name=
    'Load-8', region=mdb.models['Model-1'].rootAssembly.sets['Set-15'])
# Save by mofid on 2024_08_05-09.17.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 19 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 20 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 21 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 22 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 23 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 24 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 25 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 26 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 27 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 28 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 29 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 30 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 31 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 32 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 33 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 34 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 35 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 36 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 37 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 38 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 39 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 40 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 41 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 42 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 43 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 44 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 45 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 46 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 47 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 48 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 49 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 50 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 51 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 52 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 53 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 54 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 55 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 56 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 57 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 58 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 59 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 60 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 61 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 62 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 63 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 64 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 65 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 66 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 67 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INVALID LOAD TYPE ON ELEMENT 68 INSTANCE PART-6-1. LOAD TYPE BY IS NOT VALID FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Error message limit reached. No further error messages will be reported.\nPlease see the dat file for more errors.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Slab'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-6'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Slab-1', part=
    mdb.models['Model-1'].parts['Slab'])
# Save by mofid on 2024_08_05-09.20.30; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-8'].suppress()
mdb.models['Model-1'].loads['Load-7'].resume()
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Slab-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-16')
mdb.models['Model-1'].loads['Load-7'].setValues(distributionType=UNIFORM, 
    field='', region=mdb.models['Model-1'].rootAssembly.sets['Set-16'])
# Save by mofid on 2024_08_05-09.21.42; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *DLOAD, file "Job-1.inp", line 49067: Unknown assembly element set SET-16', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT SET ASSEMBLY_SET-16 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Slab'].generateMesh()
# Save by mofid on 2024_08_05-09.22.31; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_05-09.22.54; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5916, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2396, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58580655806873e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Mon Aug  5 09:23:27 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1788, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11168, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.58580655806873e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00385510269552469, 
    'stableTimeIncrement': 1.585804966453e-06, 
    'internalEnergy': 0.277205109596252, 'stepTime': 0.00385510269552469, 
    'totalEnergy': -0.00484005734324455, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0361837446689606, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2431, 'distortionContrEnergy': 0.0, 
    'externalWork': 92.2393951416016, 'kineticEnergy': 1.19060719013214, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['Slab-1']
# Save by mofid on 2024_08_05-09.27.18; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].loads['Load-2']
del mdb.models['Model-1'].loads['Load-4']
del mdb.models['Model-1'].loads['Load-3']
del mdb.models['Model-1'].loads['Load-5']
del mdb.models['Model-1'].loads['Load-6']
del mdb.models['Model-1'].loads['Load-8']
del mdb.models['Model-1'].loads['Load-7']
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].edges.getSequenceFromMask(
    ('[#fde00d ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#3f1 ]', ), ), name='Set-17', referencePoints=((
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].referencePoints[5], 
    ), (mdb.models['Model-1'].rootAssembly.referencePoints[46], 
    mdb.models['Model-1'].rootAssembly.referencePoints[49])), vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].vertices.getSequenceFromMask(
    ('[#cc09 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-2', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-17'], u1=5e-08, 
    u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by mofid on 2024_08_05-09.30.09; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '29 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '1914 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Desktop\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].boundaryConditions['BC-7']
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-7', side2Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=0.9, name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-7'])
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-8', side2Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=0.9, name='Load-3', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-8'])
# Save by mofid on 2024_08_05-09.34.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11124, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9196, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016720592976, 
    'stableTimeIncrement': 1.83001357072499e-05, 
    'internalEnergy': -1.2678906917572, 'stepTime': 0.100016720592976, 
    'totalEnergy': -2475.19702148438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5736, 'distortionContrEnergy': 0.0, 
    'externalWork': 15525.5869140625, 'kineticEnergy': 434.880615234375, 
    'wallTime': 89.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200008019804955, 
    'stableTimeIncrement': 1.74739543581381e-05, 
    'internalEnergy': -1.37444412708282, 'stepTime': 0.200008019804955, 
    'totalEnergy': -2686.89428710938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11248, 'distortionContrEnergy': 0.0, 
    'externalWork': 15519.015625, 'kineticEnergy': 215.499542236328, 
    'wallTime': 176.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300002634525299, 
    'stableTimeIncrement': 1.74690121639287e-05, 
    'internalEnergy': -1.37343192100525, 'stepTime': 0.300002634525299, 
    'totalEnergy': -2690.28076171875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16937, 'distortionContrEnergy': 0.0, 
    'externalWork': 15511.8671875, 'kineticEnergy': 204.618225097656, 
    'wallTime': 281.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.391490012407303, 
    'stableTimeIncrement': 1.74662745848764e-05, 
    'internalEnergy': -1.29400908946991, 'stepTime': 0.391490012407303, 
    'totalEnergy': -2700.39233398438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22168, 'distortionContrEnergy': 0.0, 
    'externalWork': 15504.298828125, 'kineticEnergy': 185.843551635742, 
    'wallTime': 401.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400012105703354, 
    'stableTimeIncrement': 1.7463838958065e-05, 
    'internalEnergy': -1.2643940448761, 'stepTime': 0.400012105703354, 
    'totalEnergy': -2720.9931640625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22656, 'distortionContrEnergy': 0.0, 
    'externalWork': 15503.6611328125, 'kineticEnergy': 164.183349609375, 
    'wallTime': 414.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.464562088251114, 
    'stableTimeIncrement': 1.74672895809636e-05, 
    'internalEnergy': -1.18849444389343, 'stepTime': 0.464562088251114, 
    'totalEnergy': -2758.32177734375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 26353, 'distortionContrEnergy': 0.0, 
    'externalWork': 15503.2451171875, 'kineticEnergy': 122.293067932129, 
    'wallTime': 534.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500014245510101, 
    'stableTimeIncrement': 1.7461237803218e-05, 
    'internalEnergy': -1.17946600914001, 'stepTime': 0.500014245510101, 
    'totalEnergy': -2761.66015625, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 28383, 
    'distortionContrEnergy': 0.0, 'externalWork': 15501.8046875, 
    'kineticEnergy': 117.408515930176, 'wallTime': 624.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.54680073261261, 
    'stableTimeIncrement': 1.74813012563391e-05, 
    'internalEnergy': -1.17784523963928, 'stepTime': 0.54680073261261, 
    'totalEnergy': -2764.11572265625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 31062, 'distortionContrEnergy': 0.0, 
    'externalWork': 15500.1494140625, 'kineticEnergy': 113.28369140625, 
    'wallTime': 744.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.59826648235321, 
    'stableTimeIncrement': 1.82883140951162e-05, 
    'internalEnergy': -1.17424952983856, 'stepTime': 0.59826648235321, 
    'totalEnergy': -2765.64770507812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 33974, 'distortionContrEnergy': 0.0, 
    'externalWork': 15498.5615234375, 'kineticEnergy': 110.149261474609, 
    'wallTime': 864.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600004851818085, 
    'stableTimeIncrement': 1.82883122761268e-05, 
    'internalEnergy': -1.17425000667572, 'stepTime': 0.600004851818085, 
    'totalEnergy': -2765.67797851562, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 34069, 'distortionContrEnergy': 0.0, 
    'externalWork': 15498.51171875, 'kineticEnergy': 110.069244384766, 
    'wallTime': 868.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.676327228546143, 
    'stableTimeIncrement': 1.82845615199767e-05, 
    'internalEnergy': -1.15365719795227, 'stepTime': 0.676327228546143, 
    'totalEnergy': -2767.166015625, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38240, 'distortionContrEnergy': 0.0, 
    'externalWork': 15496.544921875, 'kineticEnergy': 106.585670471191, 
    'wallTime': 988.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700005054473877, 
    'stableTimeIncrement': 1.82865096576279e-05, 
    'internalEnergy': -1.15372133255005, 'stepTime': 0.700005054473877, 
    'totalEnergy': -2767.68115234375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39534, 'distortionContrEnergy': 0.0, 
    'externalWork': 15496.0146484375, 'kineticEnergy': 105.538864135742, 
    'wallTime': 1019.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.783535540103912, 
    'stableTimeIncrement': 1.8291495507583e-05, 
    'internalEnergy': -1.13242542743683, 'stepTime': 0.783535540103912, 
    'totalEnergy': -2768.923828125, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44100, 'distortionContrEnergy': 0.0, 
    'externalWork': 15494.4228515625, 'kineticEnergy': 102.676216125488, 
    'wallTime': 1140.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800004124641418, 
    'stableTimeIncrement': 1.82901367224986e-05, 
    'internalEnergy': -1.12890660762787, 'stepTime': 0.800004124641418, 
    'totalEnergy': -2769.19555664062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45000, 'distortionContrEnergy': 0.0, 
    'externalWork': 15494.15625, 'kineticEnergy': 102.133666992188, 
    'wallTime': 1165.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.874642968177795, 
    'stableTimeIncrement': 1.8282255041413e-05, 
    'internalEnergy': -1.11024832725525, 'stepTime': 0.874642968177795, 
    'totalEnergy': -2770.3671875, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 49079, 
    'distortionContrEnergy': 0.0, 'externalWork': 15493.134765625, 
    'kineticEnergy': 99.917106628418, 'wallTime': 1290.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900004744529724, 
    'stableTimeIncrement': 1.82829699042486e-05, 
    'internalEnergy': -1.09398257732391, 'stepTime': 0.900004744529724, 
    'totalEnergy': -2770.71020507812, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50465, 'distortionContrEnergy': 0.0, 
    'externalWork': 15492.845703125, 'kineticEnergy': 99.2677154541016, 
    'wallTime': 1348.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.927119493484497, 
    'stableTimeIncrement': 1.82872099685483e-05, 
    'internalEnergy': -1.09407961368561, 'stepTime': 0.927119493484497, 
    'totalEnergy': -2771.0703125, 'jobName': 'Job-1', 'artificialEnergy': 0.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 51947, 
    'distortionContrEnergy': 0.0, 'externalWork': 15492.5693359375, 
    'kineticEnergy': 98.6299133300781, 'wallTime': 1498.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.931803941726685, 
    'stableTimeIncrement': 1.82799012691248e-05, 
    'internalEnergy': -1.09401249885559, 'stepTime': 0.931803941726685, 
    'totalEnergy': -2771.13305664062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 52203, 'distortionContrEnergy': 0.0, 
    'externalWork': 15492.525390625, 'kineticEnergy': 98.5223541259766, 
    'wallTime': 1937.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.949166834354401, 
    'stableTimeIncrement': 1.82764779310673e-05, 
    'internalEnergy': -1.08904552459717, 'stepTime': 0.949166834354401, 
    'totalEnergy': -2771.33349609375, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 53152, 'distortionContrEnergy': 0.0, 
    'externalWork': 15492.369140625, 'kineticEnergy': 98.1603012084961, 
    'wallTime': 2124.0})
# Save by mofid on 2024_08_05-10.17.08; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6204, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4900, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 13.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100016720592976, 
    'stableTimeIncrement': 1.83001357072499e-05, 
    'internalEnergy': -1.2678906917572, 'stepTime': 0.100016720592976, 
    'totalEnergy': -2475.19702148438, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5736, 'distortionContrEnergy': 0.0, 
    'externalWork': 15525.5869140625, 'kineticEnergy': 434.880615234375, 
    'wallTime': 104.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200008019804955, 
    'stableTimeIncrement': 1.74739543581381e-05, 
    'internalEnergy': -1.37444412708282, 'stepTime': 0.200008019804955, 
    'totalEnergy': -2686.89428710938, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11248, 'distortionContrEnergy': 0.0, 
    'externalWork': 15519.015625, 'kineticEnergy': 215.499542236328, 
    'wallTime': 201.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-6-1', ), 
    vector=(-5.0, 0.0, 0.0))
# Save by mofid on 2024_08_12-07.11.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    addPairs=((mdb.models['Model-1'].rootAssembly.surfaces['Surf-3'], 
    'Water-1.water-1'), (mdb.models['Model-1'].rootAssembly.surfaces['Surf-7'], 
    'Water-1.water-1')), stepName='Step-1', useAllstar=OFF)
# Save by mofid on 2024_08_12-07.13.19; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5364, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 7 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-6'].resume()
mdb.models['Model-1'].boundaryConditions['BC-5'].resume()
# Save by mofid on 2024_08_12-07.14.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1816, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8700, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.10000741481781, 
    'stableTimeIncrement': 1.7463104086346e-05, 
    'internalEnergy': -0.000780232832767069, 'artificialEnergy': 0.0, 
    'step': 1, 'increment': 5722, 'phase': EXPLICIT_PHASE, 
    'externalWork': 3.08902090182528e-05, 
    'kineticEnergy': 8.28706106403843e-05, 'stepTime': 0.10000741481781, 
    'totalEnergy': 7.30534111426095e-07, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 74.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200017094612122, 
    'stableTimeIncrement': 1.74610177055001e-05, 
    'internalEnergy': -0.00159825989976525, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 11452, 'phase': EXPLICIT_PHASE, 
    'externalWork': 3.29803369822912e-05, 
    'kineticEnergy': 0.000981712946668267, 'stepTime': 0.200017094612122, 
    'totalEnergy': -1.4846177691652e-05, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 162.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300007283687592, 
    'stableTimeIncrement': 1.74587548826821e-05, 
    'internalEnergy': -0.00242711137980223, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 17183, 'phase': EXPLICIT_PHASE, 
    'externalWork': -2.51593573921127e-05, 
    'kineticEnergy': 0.00393338920548558, 'stepTime': 0.300007283687592, 
    'totalEnergy': -0.000296641985187307, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 249.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400011360645294, 
    'stableTimeIncrement': 1.74525230249856e-05, 
    'internalEnergy': -0.0032525931019336, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 22914, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.000282039341982454, 'kineticEnergy': 0.0163433961570263, 
    'stepTime': 0.400011360645294, 'totalEnergy': -0.00264882575720549, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 331.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.50001323223114, 
    'stableTimeIncrement': 1.74632605194347e-05, 
    'internalEnergy': -0.00406279228627682, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 28645, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.00104947155341506, 'kineticEnergy': 0.041048813611269, 
    'stepTime': 0.50001323223114, 'totalEnergy': -0.0199125744402409, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 416.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600016236305237, 
    'stableTimeIncrement': 1.74485085153719e-05, 
    'internalEnergy': -0.00491277826949954, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 34374, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.00240444322116673, 'kineticEnergy': 0.0394752509891987, 
    'stepTime': 0.600016236305237, 'totalEnergy': -0.0438957773149014, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 505.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700010538101196, 
    'stableTimeIncrement': 1.7449139704695e-05, 
    'internalEnergy': -0.00575124518945813, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 40103, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.00417967699468136, 'kineticEnergy': 0.0389603637158871, 
    'stepTime': 0.700010538101196, 'totalEnergy': -0.0646851509809494, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 595.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800009429454803, 
    'stableTimeIncrement': 1.74304059328279e-05, 
    'internalEnergy': -0.00657985731959343, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 45836, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.00624228827655315, 'kineticEnergy': 0.0380234979093075, 
    'stepTime': 0.800009429454803, 'totalEnergy': -0.0825697109103203, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 685.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.90001392364502, 
    'stableTimeIncrement': 1.74448268808192e-05, 
    'internalEnergy': -0.00739884795621037, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 51565, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.00834606308490038, 'kineticEnergy': 0.0360340736806393, 
    'stepTime': 0.90001392364502, 'totalEnergy': -0.0977117419242859, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 774.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00000381469727, 
    'stableTimeIncrement': 1.74493106896989e-05, 
    'internalEnergy': -0.00820705015212297, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 57292, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.0106450086459517, 'kineticEnergy': 0.0435424633324146, 
    'stepTime': 1.00000381469727, 'totalEnergy': -0.11199764162302, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 864.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.10001075267792, 
    'stableTimeIncrement': 1.74324468389386e-05, 
    'internalEnergy': -0.00901688169687986, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 63038, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.0163886100053787, 'kineticEnergy': 0.195426270365715, 
    'stepTime': 1.10001075267792, 'totalEnergy': -0.191018715500832, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 953.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20000004768372, 
    'stableTimeIncrement': 1.74490960489493e-05, 
    'internalEnergy': -0.00964479614049196, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 68783, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.0330541133880615, 'kineticEnergy': 0.560922205448151, 
    'stepTime': 1.20000004768372, 'totalEnergy': -0.497602015733719, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1037.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.3000077009201, 
    'stableTimeIncrement': 1.74526976479683e-05, 
    'internalEnergy': -0.0103513961657882, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 74529, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.0811711326241493, 'kineticEnergy': 1.45254099369049, 
    'stepTime': 1.3000077009201, 'totalEnergy': -1.83715629577637, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1113.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.40001428127289, 
    'stableTimeIncrement': 1.74532906385139e-05, 
    'internalEnergy': -0.00606083450838923, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 80275, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.184310436248779, 'kineticEnergy': 4.08153104782104, 
    'stepTime': 1.40001428127289, 'totalEnergy': -3.7455141544342, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1190.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.5, 
    'stableTimeIncrement': 1.73736807482783e-05, 
    'internalEnergy': 0.187195897102356, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 86022, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.404383093118668, 'kineticEnergy': 8.75898933410645, 
    'stepTime': 1.5, 'totalEnergy': -28.6303100585938, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1269.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.60001456737518, 
    'stableTimeIncrement': 1.74491742654936e-05, 
    'internalEnergy': 0.234578147530556, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 91769, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.654219686985016, 'kineticEnergy': 9.57571411132812, 
    'stepTime': 1.60001456737518, 'totalEnergy': -37.2023048400879, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1359.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.70000600814819, 
    'stableTimeIncrement': 1.74280612554867e-05, 
    'internalEnergy': 0.243662357330322, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 97514, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.935855567455292, 'kineticEnergy': 7.73873567581177, 
    'stepTime': 1.70000600814819, 'totalEnergy': -42.5707359313965, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1459.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.80001246929169, 
    'stableTimeIncrement': 1.741951200529e-05, 
    'internalEnergy': 0.246538609266281, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 103260, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.19682765007019, 'kineticEnergy': 5.6447286605835, 
    'stepTime': 1.80001246929169, 'totalEnergy': -45.6009979248047, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1559.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.90000236034393, 
    'stableTimeIncrement': 1.74407250597142e-05, 
    'internalEnergy': 0.244514331221581, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 109005, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.43262183666229, 'kineticEnergy': 4.47499752044678, 
    'stepTime': 1.90000236034393, 'totalEnergy': -47.3069305419922, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1673.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.00000905990601, 
    'stableTimeIncrement': 1.74387732840842e-05, 
    'internalEnergy': 0.244476944208145, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 114751, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.64467239379883, 'kineticEnergy': 3.70459604263306, 
    'stepTime': 2.00000905990601, 'totalEnergy': -48.4916038513184, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1792.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.09294939041138, 
    'stableTimeIncrement': 1.74242941284319e-05, 
    'internalEnergy': 0.244072556495667, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 120091, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.79819345474243, 'kineticEnergy': 2.72339487075806, 
    'stepTime': 2.09294939041138, 'totalEnergy': -49.8624229431152, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1912.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.10001564025879, 
    'stableTimeIncrement': 1.74308861460304e-05, 
    'internalEnergy': 0.244128152728081, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 120497, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.80773162841797, 'kineticEnergy': 2.70103096961975, 
    'stepTime': 2.10001564025879, 'totalEnergy': -49.9152793884277, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1923.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 21, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.17280149459839, 
    'stableTimeIncrement': 1.74233755387831e-05, 
    'internalEnergy': 0.248458191752434, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 124679, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.89777374267578, 'kineticEnergy': 2.45516276359558, 
    'stepTime': 2.17280149459839, 'totalEnergy': -50.4910736083984, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2043.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.2000048160553, 
    'stableTimeIncrement': 1.74246433743974e-05, 
    'internalEnergy': 0.248238354921341, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 126242, 'phase': EXPLICIT_PHASE, 
    'externalWork': -1.9302145242691, 'kineticEnergy': 2.39968705177307, 
    'stepTime': 2.2000048160553, 'totalEnergy': -50.6847229003906, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2088.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 22, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.27098059654236, 
    'stableTimeIncrement': 1.74296983459499e-05, 
    'internalEnergy': 0.247657880187035, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 130320, 'phase': EXPLICIT_PHASE, 
    'externalWork': -2.01388120651245, 'kineticEnergy': 2.34011125564575, 
    'stepTime': 2.27098059654236, 'totalEnergy': -51.1558265686035, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2213.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.30001139640808, 
    'stableTimeIncrement': 1.74317756318487e-05, 
    'internalEnergy': 0.247398063540459, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 131988, 'phase': EXPLICIT_PHASE, 
    'externalWork': -2.04788517951965, 'kineticEnergy': 2.38927531242371, 
    'stepTime': 2.30001139640808, 'totalEnergy': -51.3303375244141, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2293.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 23, 'jobName': 'Job-1'})
# Save by mofid on 2024_08_12-08.08.45; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_08_12-08.22.12; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_12-08.22.21; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_12-08.22.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-6'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_08_12-08.22.56; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_12-08.25.08; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_12-08.25.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Water'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Water'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Water'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.230286478996277, 0.0753959268331528), value=0.95, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
# Save by mofid on 2024_08_12-08.39.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_08_12-08.39.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.415036916732788, 0.113401785492897), value=0.95, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.420135736465454, -0.327044248580933), value=0.95, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.280503153800964, 0.147638708353043), value=0.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=0.95)
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(reference=
    ON)
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(reference=
    OFF)
mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Container'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Container-2', 
    part=mdb.models['Model-1'].parts['Container'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Container-2', ), 
    vector=(0.0, 0.7, 0.0))
# Save by mofid on 2024_08_12-08.44.39; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Container-2'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Container-2'].edges[4], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].edges[22], 
    MIDDLE))
# Save by mofid on 2024_08_12-08.48.26; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].rootAssembly.features['Container-2']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Container-2', 
    part=mdb.models['Model-1'].parts['Container'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Container-2', ), 
    vector=(0.0, 0.7, 0.0))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Container-2'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Container-2'].edges[4], 
    MIDDLE))
# Save by mofid on 2024_08_12-08.50.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Container'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Container'].InterestingPoint(
    mdb.models['Model-1'].parts['Container'].edges[4], MIDDLE))
# Save by mofid on 2024_08_12-08.51.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-6'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Container'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['Container'].faces.getSequenceFromMask((
    '[#3a ]', ), ), ))
mdb.models['Model-1'].parts['Container'].generateMesh()
# Save by mofid on 2024_08_14-06.36.58; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2024_08_14-06.37.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.models['Model-1'].rootAssembly.DiscreteFieldByVolumeFraction(accuracy=HIGH, 
    description='', eulerianInstance=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'], name=
    'DiscField-new', referenceInstance=
    mdb.models['Model-1'].rootAssembly.instances['Container-2'])
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-18')
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].setValues(
    fieldList=((mdb.models['Model-1'].rootAssembly.sets['Set-18'], (
    'DiscField-new', )), ))
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.4)
# Save by mofid on 2024_08_14-07.19.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-12', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1508, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 118 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.17)
# Save by mofid on 2024_08_14-07.22.54; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7108, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 118 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
# Save by mofid on 2024_08_14-07.23.50; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2612, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 118 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-6'].resume()
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ), name='Set-19')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-19'])
# Save by mofid on 2024_08_14-07.27.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '212 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10636, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 852 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Container'].features['RP']
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].parts['Part-6'].features['RP']
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2024_08_14-07.31.37; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_08_14-07.32.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Container'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Container'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Container'].features['Remove cells-1'].suppress()
mdb.models['Model-1'].parts['Container'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['Container'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), ))
# Save by mofid on 2024_08_14-07.34.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].edges[0], MIDDLE))
# Save by mofid on 2024_08_14-07.36.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-6'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-6'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-6'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Part-6'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-6'].edges[0], MIDDLE))
# Save by mofid on 2024_08_14-07.36.47; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Container-1'].resume()
mdb.models['Model-1'].parts['Container'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Container'].InterestingPoint(
    mdb.models['Model-1'].parts['Container'].edges[4], MIDDLE))
# Save by mofid on 2024_08_14-07.39.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features['Container-2'].suppress()
mdb.models['Model-1'].rootAssembly.features['Container-1'].suppress()
# Save by mofid on 2024_08_14-07.39.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '212 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4352, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 850 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].boundaryConditions['BC-6'].resume()
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
del mdb.models['Model-1'].parts['Part-6'].features['RP']
mdb.models['Model-1'].parts['Part-6'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Part-6'].InterestingPoint(
    mdb.models['Model-1'].parts['Part-6'].edges[13], MIDDLE))
# Save by mofid on 2024_08_14-08.02.29; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2024_08_14-08.03.47; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Part-6'].Set(name='Set-rf', referencePoints=(
    mdb.models['Model-1'].parts['Part-6'].referencePoints[11], ))
# Save by mofid on 2024_08_14-08.04.42; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-8', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].sets['Set-rf'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ), name='Set-20')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-9', region=mdb.models['Model-1'].rootAssembly.sets['Set-20'])
# Save by mofid on 2024_08_14-08.06.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '392 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9312, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1572 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8020, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_COMPLETED, {'time': 'Wed Aug 14 08:06:50 2024', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '392 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10808, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1572 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3000, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.100013323128223, 
    'stableTimeIncrement': 1.74415727087762e-05, 
    'internalEnergy': -0.0023338736500591, 'stepTime': 0.100013323128223, 
    'totalEnergy': -4.2536215914879e-05, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5726, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.000716621521860361, 'kineticEnergy': 0.00516922725364566, 
    'wallTime': 95.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
# Save by mofid on 2024_08_14-08.10.38; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.15)
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.8)
mdb.models['Model-1'].boundaryConditions['BC-8'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
mdb.models['Model-1'].parts['Part-6'].sets.changeKey(fromName='Set-rf', toName=
    'Set-rf-parti-6')
mdb.models['Model-1'].parts['Part-6'].Set(faces=
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#40 ]', 
    ), ), name='Set-bottom')
# Save by mofid on 2024_08_14-08.17.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-10', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].sets['Set-bottom'])
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-11', region=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].sets['Set-rf-parti-6'])
# Save by mofid on 2024_08_14-08.18.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3972, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2900, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.10000342130661, 
    'stableTimeIncrement': 1.74479646375403e-05, 
    'internalEnergy': -0.00240040826611221, 'stepTime': 0.10000342130661, 
    'totalEnergy': 3.30852594743192e-06, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5723, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.000646648521069437, 
    'kineticEnergy': 0.000373346003470942, 'wallTime': 87.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.200010418891907, 
    'stableTimeIncrement': 1.74147553479997e-05, 
    'internalEnergy': -0.00548291066661477, 'stepTime': 0.200010418891907, 
    'totalEnergy': -0.000311843847157434, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11458, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.000698529649525881, 'kineticEnergy': 0.0124927377328277, 
    'wallTime': 187.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.29877758026123, 
    'stableTimeIncrement': 1.74388387677027e-05, 
    'internalEnergy': -0.00848675426095724, 'stepTime': 0.29877758026123, 
    'totalEnergy': -0.0343332402408123, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17125, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.000597840175032616, 'kineticEnergy': 0.130922228097916, 
    'wallTime': 309.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.300015419721603, 
    'stableTimeIncrement': 1.74450087797595e-05, 
    'internalEnergy': -0.00844372715801001, 'stepTime': 0.300015419721603, 
    'totalEnergy': -0.0352205373346806, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17196, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.000693541544023901, 'kineticEnergy': 0.131494104862213, 
    'wallTime': 311.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.15)
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Step-1', useAllstar=ON)
# Save by mofid on 2024_08_14-08.28.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10996, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7988, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0591933391988277, 
    'stableTimeIncrement': 1.74409087776439e-05, 
    'internalEnergy': 1.51827251911163, 'stepTime': 0.0591933391988277, 
    'totalEnergy': -1089.74499511719, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3392, 'distortionContrEnergy': 0.0, 
    'externalWork': 29437.037109375, 'kineticEnergy': 426.627105712891, 
    'wallTime': 120.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.100006967782974, 
    'stableTimeIncrement': 1.74144352058647e-05, 
    'internalEnergy': 16.413179397583, 'stepTime': 0.100006967782974, 
    'totalEnergy': -6168.89990234375, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5737, 'distortionContrEnergy': 0.0, 'externalWork': 155807.75, 
    'kineticEnergy': 512.965393066406, 'wallTime': 205.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-9', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Water-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-9', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].faces.getSequenceFromMask(
    ('[#80 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Step-1', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='IntProp-1', main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-9'], 
    mechanicalConstraint=KINEMATIC, name='Int-2', secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-9'], sliding=FINITE)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-ceiling', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-6-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Step-1', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='IntProp-1', main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-9'], 
    mechanicalConstraint=KINEMATIC, name='Int-3', secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-ceiling'], sliding=
    FINITE)
# Save by mofid on 2024_08_14-08.40.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACES WHICH INCLUDE EDGES CANNOT BE USED WITH *CONTACT PAIR', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_M_SURF-9 CANNOT BE USED IN A CONTACT PAIR DEFINITION BECAUSE IT IS BASED ON EULERIAN ELEMENTS.  USE GENERAL CONTACT INSTEAD.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_M_SURF-9 CANNOT BE USED IN A CONTACT PAIR DEFINITION BECAUSE IT IS BASED ON EULERIAN ELEMENTS.  USE GENERAL CONTACT INSTEAD.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_SURF-CEILING BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE CANNOT BE USED WITH *CONTACT PAIR. CHECK PREVIOUS WARNING MESSAGES FOR THIS SURFACE TO FIND THE CAUSE.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName2\\Job-12.odb', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-12.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-12.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
del mdb.models['Model-1'].interactions['Int-2']
del mdb.models['Model-1'].interactions['Int-3']
mdb.models['Model-1'].ContactProperty('IntProp-2')
mdb.models['Model-1'].interactionProperties['IntProp-2'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-2'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactProperty('IntProp-3')
mdb.models['Model-1'].interactionProperties['IntProp-3'].GeometricProperties(
    contactArea=1.0, padThickness=None)
mdb.models['Model-1'].IncidentWaveProperty(fluidDensity=200.0, name='IntProp-4'
    , soundSpeed=5.0)
mdb.models['Model-1'].StdXplCosimulation(createStepName='Step-1', 
    incrementation=ALLOW_SUBCYCLING, name='Int-2', region=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-9'], stepSize=0.0, 
    stepSizeDefinition=DEFAULT)
mdb.models['Model-1'].FSICosimulation(createStepName='Step-1', name='Int-3', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-ceiling'])
# Save by mofid on 2024_08_14-08.45.36; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].interactions['Int-3']
del mdb.models['Model-1'].interactions['Int-2']
# Save by mofid on 2024_08_14-08.46.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10592, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6252, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0799338892102242, 
    'stableTimeIncrement': 1.74191973201232e-05, 
    'internalEnergy': 12.0062627792358, 'stepTime': 0.0799338892102242, 
    'totalEnergy': -3503.81225585938, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4584, 'distortionContrEnergy': 0.0, 
    'externalWork': 76987.203125, 'kineticEnergy': 500.683074951172, 
    'wallTime': 121.0})
# Save by mofid on 2024_08_14-08.48.54; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.100006967782974, 
    'stableTimeIncrement': 1.74144352058647e-05, 
    'internalEnergy': 16.413179397583, 'stepTime': 0.100006967782974, 
    'totalEnergy': -6168.89990234375, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5737, 'distortionContrEnergy': 0.0, 'externalWork': 155807.75, 
    'kineticEnergy': 512.965393066406, 'wallTime': 157.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.150390475988388, 
    'stableTimeIncrement': 1.71679494087584e-05, 
    'internalEnergy': 504.640441894531, 'stepTime': 0.150390475988388, 
    'totalEnergy': -17114.8359375, 'jobName': 'Job-12', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 8651, 'distortionContrEnergy': 0.0, 
    'externalWork': 595886.3125, 'kineticEnergy': 2039.65551757812, 
    'wallTime': 283.0})
# Save by mofid on 2024_08_14-08.51.52; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-7 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-8 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '28 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2136, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 116 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9676, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.74794913618825e-05, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 4.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0450390763580799, 
    'stableTimeIncrement': 1.74449414771516e-05, 
    'internalEnergy': 0.251585870981216, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 2580, 'phase': EXPLICIT_PHASE, 
    'externalWork': 10749.955078125, 'kineticEnergy': 247.094543457031, 
    'stepTime': 0.0450390763580799, 'totalEnergy': -187.903762817383, 
    'jobName': 'Job-12', 'distortionContrEnergy': 0.0, 'wallTime': 128.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0886946618556976, 
    'stableTimeIncrement': 1.74212491401704e-05, 
    'internalEnergy': 8.28154182434082, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 5087, 'phase': EXPLICIT_PHASE, 'externalWork': 106665.4921875, 
    'kineticEnergy': 775.590026855469, 'stepTime': 0.0886946618556976, 
    'totalEnergy': -4706.91064453125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 255.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.100006967782974, 
    'stableTimeIncrement': 1.74144352058647e-05, 
    'internalEnergy': 16.413179397583, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 5737, 'phase': EXPLICIT_PHASE, 'externalWork': 155807.75, 
    'kineticEnergy': 512.965393066406, 'stepTime': 0.100006967782974, 
    'totalEnergy': -6168.89990234375, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 287.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.14531347155571, 
    'stableTimeIncrement': 1.71542778844014e-05, 
    'internalEnergy': 491.829010009766, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 8355, 'phase': EXPLICIT_PHASE, 'externalWork': 539171.0625, 
    'kineticEnergy': 2248.1728515625, 'stepTime': 0.14531347155571, 
    'totalEnergy': -12746.9697265625, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 411.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.18515382707119, 
    'stableTimeIncrement': 1.72118143382249e-05, 
    'internalEnergy': -1579.05859375, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 10687, 'phase': EXPLICIT_PHASE, 'externalWork': 1070998.0, 
    'kineticEnergy': 25342.091796875, 'stepTime': 0.18515382707119, 
    'totalEnergy': -208940.484375, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 535.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.20000921189785, 
    'stableTimeIncrement': 1.68955139088212e-05, 
    'internalEnergy': -1162.54174804688, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 11564, 'phase': EXPLICIT_PHASE, 'externalWork': 1195893.875, 
    'kineticEnergy': 13773.2529296875, 'stepTime': 0.20000921189785, 
    'totalEnergy': -520692.875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 585.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.223742619156837, 
    'stableTimeIncrement': 8.09880748420255e-06, 
    'internalEnergy': 55662.203125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 13756, 'phase': EXPLICIT_PHASE, 'externalWork': 1237326.375, 
    'kineticEnergy': 46631.08203125, 'stepTime': 0.223742619156837, 
    'totalEnergy': -511963.75, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 706.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.253692865371704, 
    'stableTimeIncrement': 1.73379758052761e-05, 
    'internalEnergy': 57890.90234375, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 15522, 'phase': EXPLICIT_PHASE, 'externalWork': 1237280.375, 
    'kineticEnergy': 6073.35693359375, 'stepTime': 0.253692865371704, 
    'totalEnergy': -548405.0, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 832.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.282505005598068, 
    'stableTimeIncrement': 1.72691197803942e-05, 
    'internalEnergy': 57939.015625, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 17192, 'phase': EXPLICIT_PHASE, 'externalWork': 1237294.0, 
    'kineticEnergy': 4983.603515625, 'stepTime': 0.282505005598068, 
    'totalEnergy': -549227.125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 954.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.300002425909042, 
    'stableTimeIncrement': 1.72462987393374e-05, 
    'internalEnergy': 57927.73046875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 18203, 'phase': EXPLICIT_PHASE, 'externalWork': 1237283.25, 
    'kineticEnergy': 4667.41259765625, 'stepTime': 0.300002425909042, 
    'totalEnergy': -549450.125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1035.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.327029943466187, 
    'stableTimeIncrement': 1.71998963196529e-05, 
    'internalEnergy': 57840.4296875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 19772, 'phase': EXPLICIT_PHASE, 'externalWork': 1237295.75, 
    'kineticEnergy': 4241.53076171875, 'stepTime': 0.327029943466187, 
    'totalEnergy': -549824.3125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1164.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.353457450866699, 
    'stableTimeIncrement': 1.74230699485634e-05, 
    'internalEnergy': 58075.8671875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 21310, 'phase': EXPLICIT_PHASE, 'externalWork': 1237312.5, 
    'kineticEnergy': 3554.32275390625, 'stepTime': 0.353457450866699, 
    'totalEnergy': -550262.5625, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1297.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.378263771533966, 
    'stableTimeIncrement': 1.74059241544455e-05, 
    'internalEnergy': 58023.83203125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 22735, 'phase': EXPLICIT_PHASE, 'externalWork': 1237306.5, 
    'kineticEnergy': 3385.63305664062, 'stepTime': 0.378263771533966, 
    'totalEnergy': -550417.375, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1425.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.397489726543427, 
    'stableTimeIncrement': 1.74153028638102e-05, 
    'internalEnergy': 58007.6640625, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 23840, 'phase': EXPLICIT_PHASE, 'externalWork': 1237297.25, 
    'kineticEnergy': 3292.25903320312, 'stepTime': 0.397489726543427, 
    'totalEnergy': -550512.8125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1569.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.400015503168106, 
    'stableTimeIncrement': 1.74225187947741e-05, 
    'internalEnergy': 58006.07421875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 23985, 'phase': EXPLICIT_PHASE, 'externalWork': 1237296.0, 
    'kineticEnergy': 3285.212890625, 'stepTime': 0.400015503168106, 
    'totalEnergy': -550520.25, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1591.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.410207331180573, 
    'stableTimeIncrement': 1.74195520230569e-05, 
    'internalEnergy': 57997.81640625, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 24570, 'phase': EXPLICIT_PHASE, 'externalWork': 1237291.375, 
    'kineticEnergy': 3260.3271484375, 'stepTime': 0.410207331180573, 
    'totalEnergy': -550548.75, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1732.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.418363124132156, 
    'stableTimeIncrement': 1.72662821569247e-05, 
    'internalEnergy': 57993.65234375, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 25039, 'phase': EXPLICIT_PHASE, 'externalWork': 1237290.0, 
    'kineticEnergy': 3207.39868164062, 'stepTime': 0.418363124132156, 
    'totalEnergy': -550588.125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1858.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.429856836795807, 
    'stableTimeIncrement': 1.74308206624119e-05, 'internalEnergy': 57987.0625, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 25699, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1237286.125, 
    'kineticEnergy': 3131.52197265625, 'stepTime': 0.429856836795807, 
    'totalEnergy': -550651.1875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 1983.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.451430767774582, 
    'stableTimeIncrement': 1.74153628904605e-05, 
    'internalEnergy': 57959.74609375, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 26938, 'phase': EXPLICIT_PHASE, 'externalWork': 1237280.375, 
    'kineticEnergy': 3053.181640625, 'stepTime': 0.451430767774582, 
    'totalEnergy': -550744.9375, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2106.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.47778046131134, 
    'stableTimeIncrement': 1.74237520695897e-05, 
    'internalEnergy': 57883.2421875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 28453, 'phase': EXPLICIT_PHASE, 'externalWork': 1237272.5, 
    'kineticEnergy': 3008.21435546875, 'stepTime': 0.47778046131134, 
    'totalEnergy': -550799.1875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2229.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.500011801719666, 
    'stableTimeIncrement': 1.74370779859601e-05, 
    'internalEnergy': 57863.66796875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 29730, 'phase': EXPLICIT_PHASE, 'externalWork': 1237265.875, 
    'kineticEnergy': 2892.67358398438, 'stepTime': 0.500011801719666, 
    'totalEnergy': -550891.8125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2327.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.523995459079742, 
    'stableTimeIncrement': 1.73812004504725e-05, 
    'internalEnergy': 57842.05078125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 31107, 'phase': EXPLICIT_PHASE, 'externalWork': 1237259.625, 
    'kineticEnergy': 2554.83911132812, 'stepTime': 0.523995459079742, 
    'totalEnergy': -551194.0, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2448.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.540892899036407, 
    'stableTimeIncrement': 1.74068900378188e-05, 
    'internalEnergy': 57827.33203125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 32078, 'phase': EXPLICIT_PHASE, 'externalWork': 1237256.375, 
    'kineticEnergy': 2376.89331054688, 'stepTime': 0.540892899036407, 
    'totalEnergy': -551375.125, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2576.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.553316235542297, 
    'stableTimeIncrement': 1.74272645381279e-05, 
    'internalEnergy': 57821.30078125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 32792, 'phase': EXPLICIT_PHASE, 'externalWork': 1237253.75, 
    'kineticEnergy': 2259.9013671875, 'stepTime': 0.553316235542297, 
    'totalEnergy': -551493.5, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2713.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.568537175655365, 
    'stableTimeIncrement': 1.74197575688595e-05, 
    'internalEnergy': 57814.81640625, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 33669, 'phase': EXPLICIT_PHASE, 'externalWork': 1237250.625, 
    'kineticEnergy': 2135.90600585938, 'stepTime': 0.568537175655365, 
    'totalEnergy': -551623.0625, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2841.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.580089330673218, 
    'stableTimeIncrement': 1.74132655956782e-05, 
    'internalEnergy': 57809.3984375, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 34333, 'phase': EXPLICIT_PHASE, 'externalWork': 1237248.5, 
    'kineticEnergy': 2045.57678222656, 'stepTime': 0.580089330673218, 
    'totalEnergy': -551717.0625, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 2977.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.593332469463348, 
    'stableTimeIncrement': 1.7398871932528e-05, 
    'internalEnergy': 57804.12890625, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 35094, 'phase': EXPLICIT_PHASE, 'externalWork': 1237246.0, 
    'kineticEnergy': 1955.35144042969, 'stepTime': 0.593332469463348, 
    'totalEnergy': -551811.875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 3101.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.600015223026276, 
    'stableTimeIncrement': 1.74169690581039e-05, 
    'internalEnergy': 57803.08203125, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 35479, 'phase': EXPLICIT_PHASE, 'externalWork': 1237244.875, 
    'kineticEnergy': 1908.91247558594, 'stepTime': 0.600015223026276, 
    'totalEnergy': -551860.6875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 3163.0})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.614251792430878, 
    'stableTimeIncrement': 1.74115812114906e-05, 
    'internalEnergy': 57798.76171875, 'artificialEnergy': 0.0, 'step': 1, 
    'increment': 36297, 'phase': EXPLICIT_PHASE, 'externalWork': 1237242.625, 
    'kineticEnergy': 1705.51062011719, 'stepTime': 0.614251792430878, 
    'totalEnergy': -552015.0625, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 3283.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.628923296928406, 
    'stableTimeIncrement': 1.74169945239555e-05, 'internalEnergy': 57795.28125, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 37140, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1237240.375, 
    'kineticEnergy': 1613.06530761719, 'stepTime': 0.628923296928406, 
    'totalEnergy': -552100.25, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 3404.0})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.645902156829834, 
    'stableTimeIncrement': 1.7414486137568e-05, 'internalEnergy': 57797.4375, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 38116, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1237238.0, 
    'kineticEnergy': 1479.56787109375, 'stepTime': 0.645902156829834, 
    'totalEnergy': -552222.875, 'jobName': 'Job-12', 
    'distortionContrEnergy': 0.0, 'wallTime': 3525.0})
# Save by mofid on 2024_08_19-15.52.53; build 2023 2022_09_28-21.41.55 183150
