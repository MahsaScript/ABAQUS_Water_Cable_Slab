# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.005), 
    point2=(-0.5, 0.04))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.265), 
    point2=(-0.04, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(-0.5, 0.04))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.3), 
    point2=(-0.051748014986515, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(
    -0.051748014986515, 0.225), point2=(-0.205, 0.04))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(-0.5, 0.04))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.42), 
    point2=(-0.04, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.04, 0.42), 
    point2=(0.0, 0.37))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.285), 
    point2=(-0.2, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.355), 
    point2=(-0.241956353187561, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.241956353187561, 
    0.04), point2=(-0.5, 0.04))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 0.04), point2=
    (-0.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 0.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.0, 0.37))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.37), point2=(
    0.04, 0.37))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.04, 0.37), point2=
    (0.04, 0.42))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.04, 0.42), point2=
    (0.0, 0.42))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.42), point2=(
    -0.04, 0.42))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[22], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[23])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.42), 
    point2=(-0.04, 0.355))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.355), 
    point2=(-0.241956353187561, 0.04))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.241956353187561, 
    0.04), point2=(-0.2, 0.04))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[26])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.2, 0.04), point2=
    (-0.04, 0.285))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.285), 
    point2=(-0.04, 0.04))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[28])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.04, 0.04), 
    point2=(-0.2, 0.04))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[28], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(-0.5, 0.04))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.34), 
    point2=(-0.04, 0.04))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.34), 
    point2=(0.06, 0.3))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    -0.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 0.0), point2=(
    -0.5, 0.0449999999627471))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 
    0.0449999999627471), point2=(-0.0449999999627471, 0.0449999999627475))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.0449999999627471, 
    0.0449999999627475), point2=(-0.0449999999627475, 0.38))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.0449999999627475, 
    0.38), point2=(0.0649999999720603, 0.38))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0649999999720603, 
    0.38), point2=(0.0649999999720598, 0.334999999981374))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0649999999720598, 
    0.334999999981374), point2=(0.0, 0.334999999981374))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    0.334999999981374), point2=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-1'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-1']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    -0.5, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 0.0), point2=(
    -0.5, 0.0449999999627471))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.5, 
    0.0449999999627471), point2=(-0.145, 0.0449999999627475))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.145, 
    0.0449999999627475), point2=(0.0, 0.4))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.4), point2=(
    0.0566980242729187, 0.4))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0566980242729187, 
    0.4), point2=(0.0566980242729187, 0.36))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0566980242729187, 
    0.36), point2=(0.0145219564437866, 0.36))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0145219564437866, 
    0.36), point2=(0.0, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='cantilever_slab', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['cantilever_slab'].BaseSolidExtrude(depth=0.1, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=1.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.145, 0.285), 
    point2=(-0.26, -0.125))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='wave', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['wave'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Material-Slab')
mdb.models['Model-1'].materials['Material-Slab'].Density(table=((2500.0, ), ))
mdb.models['Model-1'].materials['Material-Slab'].Elastic(table=((32500000000.0, 
    0.3), ))
mdb.models['Model-1'].Material(name='Material-wave')
mdb.models['Model-1'].materials['Material-wave'].Density(table=((997.0, ), ))
mdb.models['Model-1'].materials['Material-wave'].Elastic(table=((2200000000.0, 
    0.5), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Slab', name=
    'Section-slab', thickness=None)
mdb.models['Model-1'].parts['cantilever_slab'].Set(cells=
    mdb.models['Model-1'].parts['cantilever_slab'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-slab')
mdb.models['Model-1'].parts['cantilever_slab'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['cantilever_slab'].sets['Set-slab'], 
    sectionName='Section-slab', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-wave', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Material-wave', name='Section-wave', 
    nodalThicknessField='', numIntPts=1, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.3, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].sections['Section-wave'].RebarLayers(layerTable=(
    LayerProperties(barArea=0.24, orientationAngle='0.2,0,0', barSpacing=0.001, 
    layerPosition=-0.2, extensionRatio=0.1, radius=0.3, layerName='wave_layer', 
    material='Material-wave'), ), rebarSpacing=LIFT_EQUATION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['wave'].Set(faces=
    mdb.models['Model-1'].parts['wave'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-wave')
mdb.models['Model-1'].parts['wave'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['wave'].sets['Set-wave'], sectionName=
    'Section-wave', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['wave'].Set(faces=
    mdb.models['Model-1'].parts['wave'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-wave')
mdb.models['Model-1'].CircularProfile(name='Profile-1', r=0.5)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'cantilever_slab-1', part=mdb.models['Model-1'].parts['cantilever_slab'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='wave-1', part=
    mdb.models['Model-1'].parts['wave'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (-0.4675, 0.17, 0.1))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-0.1775, 
    0.0, 0.0), axisPoint=(-0.3225, 0.045, 0.1), instanceList=('wave-1', ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.rotate(angle=-180.0, axisDirection=(0.5825, 
    0.0, 0.0), axisPoint=(-0.7275, 0.045, 0.1), instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (0.0, 0.0, -0.41))
mdb.models['Model-1'].rootAssembly.instances['wave-1'].translateTo(clearance=
    1.0, direction=(0.900813503536035, -0.178182890809325, -0.395961979576279), 
    fixedList=(
    mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces[1], 
    ), movableList=(
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].faces[0], ))
mdb.models['Model-1'].rootAssembly.instances['wave-1'].translateTo(clearance=
    1.0, direction=(0.955382396651526, -0.294789196234058, 0.0185420050713181), 
    fixedList=(
    mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces[1], 
    ), movableList=(
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].faces[0], ))
#* The two part instances do not touch when moved
#* along the specified direction.
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (0.723313, -0.178183, -0.395962))
mdb.models['Model-1'].rootAssembly.rotate(angle=-200.0, axisDirection=(0.0, 
    -0.045, 0.0), axisPoint=(-0.5, 0.045, 0.1), instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-100.0, axisDirection=(
    -0.520804, 0.0, -0.346756), axisPoint=(0.020804, 0.045, 0.346756), 
    instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=20.0, axisDirection=(-0.520804, 
    -0.045, -0.246756), axisPoint=(0.020804, 0.045, 0.346756), instanceList=(
    'wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=20.0, axisDirection=(-0.262374, 
    -0.221358, -0.118032), axisPoint=(-0.237626, 0.266358, 0.118032), 
    instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=20.0, axisDirection=(-0.262374, 
    -0.221358, -0.118032), axisPoint=(-0.237626, 0.266358, 0.118032), 
    instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-30.0, axisDirection=(
    -0.212239, 0.029862, -0.396821), axisPoint=(-0.287761, 0.015138, 0.496821), 
    instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=10.0, axisDirection=(-0.264601, 
    -0.157492, -0.453059), axisPoint=(-0.235399, 0.202492, 0.553059), 
    instanceList=('wave-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (-0.264601, -0.157492, -0.453059))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].vertices[3])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(-0.06, 0.08))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].edges[2], MIDDLE))
mdb.models['Model-1'].ImplicitDynamicsStep(initialInc=0.01, maxInc=0.01, 
    minInc=0.0001, name='dynamic', nlgeom=ON, previous='Initial', timePeriod=
    10.0)
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='dynamic', 
    distributionType=UNIFORM, field='', magnitude=-400.0, name='fdd', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )))
mdb.models['Model-1'].loads['fdd'].setValues(magnitude=400.0)
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='dynamic', 
    distributionType=UNIFORM, field='', magnitude=400.0, name='Load-2', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces.getSequenceFromMask(
    mask=('[#4 ]', ), )))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='dynamic', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-1', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[7], )), u1=0.0, u2=0.0, 
    u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-1'].move('dynamic', 'Initial')
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[6], )))
mdb.models['Model-1'].parts['wave'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.041)
mdb.models['Model-1'].parts['wave'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=S3R, elemLibrary=EXPLICIT)), 
    regions=(mdb.models['Model-1'].parts['wave'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['wave'].generateMesh()
mdb.models['Model-1'].parts['cantilever_slab'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['cantilever_slab'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['cantilever_slab'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.04)
mdb.models['Model-1'].parts['cantilever_slab'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Problem when parsing keyword: REBARLAYER     Invalid value "0."2,0,0"" for parameter "orientation". The value may be misspelled, obsolete, or invalid.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Problem when parsing keyword: ORIENTATION     Invalid value "0."2,0,0"" for parameter "name". The value may be misspelled, obsolete, or invalid.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A SHELL ELEMENT MUST HAVE MORE THAN ONE INTEGRATION POINT TO CALCULATE BENDING STIFFNESS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'Error message limit reached. No further error messages will be reported.\nPlease see the dat file for more errors.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.models['Model-1'].sections['Section-wave'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='Material-wave', 
    nodalThicknessField='', numIntPts=1, preIntegrate=OFF, thickness=0.3, 
    thicknessField='', thicknessType=UNIFORM)
mdb.models['Model-1'].sections['Section-wave'].rebarLayers.setValues(
    layerTable=(LayerProperties(barArea=0.24, orientationAngle=10.0, 
    barSpacing=0.001, layerPosition=-0.2, extensionRatio=0.1, radius=0.3, 
    layerName='wave_layer', material='Material-wave'), ), rebarSpacing=
    LIFT_EQUATION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.models['Model-1'].sections['Section-wave'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=GAUSS, material='Material-wave', 
    nodalThicknessField='', numIntPts=15, preIntegrate=OFF, thickness=0.3, 
    thicknessField='', thicknessType=UNIFORM)
mdb.models['Model-1'].sections['Section-wave'].rebarLayers.setValues(
    layerTable=(LayerProperties(barArea=0.24, orientationAngle=10.0, 
    barSpacing=0.001, layerPosition=-0.2, layerName='wave_layer', 
    material='Material-wave'), ), rebarSpacing=CONSTANT)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(initialInc=0.001)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValuesInStep(stepName=
    'dynamic', u1=-0.4)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*** Error: Extend failed (utl_File: SetEndOfFile) error: There is not enough space on the disk.\n  file: C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ERROR DURING PART, INSTANCE AND ASSEMBLY PROCESSING', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'XML parsing failure for job Job-1.  Shutting down socket and terminating all further messages.  Please check the .log, .dat, .sta, or .msg files for information about the status of the job.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-1'].deactivate('dynamic')
mdb.models['Model-1'].boundaryConditions['BC-1'].reset('dynamic')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='dynamic', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=Region(
    vertices=mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].vertices.getSequenceFromMask(
    mask=('[#80 ]', ), )), u1=UNSET, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].move('dynamic', 'Initial')
mdb.models['Model-1'].boundaryConditions['BC-2'].setValuesInStep(stepName=
    'dynamic', u1=-0.4)
mdb.models['Model-1'].boundaryConditions['BC-2'].setValues(u1=SET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(u1=SET)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValuesInStep(stepName=
    'dynamic', u1=-0.4)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9264, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 26.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 12.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 15:34:25 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8948, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.001, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.00025, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(initialInc=0.01, maxInc=0.01, 
    maxNumInc=1000, minInc=0.0001)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5460, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 1U', 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 5})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 2U', 
    'timeIncrement': 0.0025, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 3U', 
    'timeIncrement': 0.000625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': ' 4U', 
    'timeIncrement': 0.00015625, 'increment': 1, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 4, 'phase': STANDARD_PHASE, 
    'equilibrium': 4})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(noStop=OFF, nohaf=OFF, 
    timeIncrementationMethod=FIXED)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11800, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(maxNumInc=20)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1716, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(maxNumInc=2)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8480, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(initialInc=0.0001)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4788, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(initialInc=10.0, maxNumInc=20, 
    noStop=OFF, nohaf=OFF, timePeriod=10.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12448, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 3 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CANTILEVER_SLAB-1.407 D.O.F. 3 ratio = 4.87028E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CANTILEVER_SLAB-1.407 D.O.F. 3 ratio = 13.5427E+09 .', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'Solver problem. Numerical singularity when processing node CANTILEVER_SLAB-1.407 D.O.F. 3 ratio = 4.91047E+09.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 2 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(initialInc=2.0, maxNumInc=1, 
    timePeriod=2.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7360, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 3 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'The system matrix has 3 negative eigenvalues.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Fixed time increment is too large', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['dynamic'].setValues(nlgeom=OFF)
mdb.models['Model-1'].steps['dynamic'].setValues(maxNumInc=3)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11992, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0, 'attempts': 1, 
    'timeIncrement': 2.0, 'increment': 1, 'stepTime': 2.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 15:45:26 2024', 
    'jobName': 'Job-1'})
# Save by mofid on 2024_07_09-15.46.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].EncastreBC(createStepName='dynamic', localCsys=None, 
    name='BC-encastre', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces.getSequenceFromMask(
    mask=('[#2 ]', ), )))
mdb.models['Model-1'].EncastreBC(createStepName='dynamic', localCsys=None, 
    name='BC-4-encastre', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )))
# Save by mofid on 2024_07_09-15.49.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-2'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='dynamic', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[7], )), u1=0.4, u2=UNSET
    , u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
# Save by mofid on 2024_07_09-15.50.45; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET15 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName-slab-wave\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET15 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].move('dynamic', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['BC-4-encastre'].move('dynamic', 
    'Initial')
mdb.models['Model-1'].boundaryConditions['BC-5'].move('dynamic', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['BC-encastre'].move('dynamic', 
    'Initial')
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-6', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[7], )), u1=SET, u2=UNSET
    , u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
# Save by mofid on 2024_07_09-15.54.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(u2=UNSET, u3=UNSET, 
    ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValuesInStep(stepName=
    'dynamic', u1=0.3, ur1=2.0)
# Save by mofid on 2024_07_09-15.54.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET16 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET16 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET16 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET16 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['wave'].DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
# Save by mofid on 2024_07_09-15.57.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.referencePoints[7])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].datums[6])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.referencePoints[18])
# Save by mofid on 2024_07_09-15.57.50; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-6'].suppress()
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-7', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], )), u1=UNSET, u2=
    SET, u3=SET, ur1=UNSET, ur2=SET, ur3=SET)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(u1=SET, u2=UNSET, 
    u3=UNSET, ur1=SET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.3, ur1=0.3)
# Save by mofid on 2024_07_09-15.59.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET20 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET20 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET20 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET20 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET20 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET20 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET20 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(name='Set-1', nodes=
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].nodes.getSequenceFromMask(
    mask=('[#0:3 #80000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='node', nodes=
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].nodes.getSequenceFromMask(
    mask=('[#0:3 #80000 ]', ), ))
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[17], 
    )))
# Save by mofid on 2024_07_09-16.02.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].deactivate('dynamic')
mdb.models['Model-1'].boundaryConditions['BC-7'].reset('dynamic')
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.3, ur1=1.0)
# Save by mofid on 2024_07_09-16.03.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET23 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET23 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-7'].resume()
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(region=
    mdb.models['Model-1'].rootAssembly.instances['wave-1'].sets['Set-wave'])
# Save by mofid on 2024_07_09-16.05.04; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10112, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0, 'attempts': 1, 
    'timeIncrement': 2.0, 'increment': 1, 'stepTime': 2.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 16:05:28 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=1.5)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.3, ur1=1.5)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', ur1=3.0)
# Save by mofid on 2024_07_09-16.07.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6500, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0, 'attempts': 1, 
    'timeIncrement': 2.0, 'increment': 1, 'stepTime': 2.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 16:07:31 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.1)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=20.0)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.4, ur1=20.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7476, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0, 'attempts': 1, 
    'timeIncrement': 2.0, 'increment': 1, 'stepTime': 2.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 16:09:38 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', ur1=2.0)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.5)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValuesInStep(stepName=
    'dynamic', u1=0.4)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (0.355, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('wave-1', ), vector=
    (0.048177, 0.319508, -0.012275))
# Save by mofid on 2024_07_09-16.12.15; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'POSITION OF REBAR IN THE SHELL SECTION THICKNESS DIRECTION IS GIVEN AS THE DISTANCE OF THE REBAR FROM THE MIDDLE SURFACE OF THE SHELL. REBAR WAVE_LAYER LIES OUTSIDE THE SHELL SECTION THICKNESS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET11 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET15 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET16 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\0-wave-propagation\\DirectoryName2\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10068, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 2 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 32.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 19.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.0, 'attempts': 1, 
    'timeIncrement': 2.0, 'increment': 1, 'stepTime': 2.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 2})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul  9 16:12:37 2024', 
    'jobName': 'Job-1'})
# Save by mofid on 2024_07_09-16.12.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].sections['Section-wave'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=GAUSS, material='Material-wave', 
    nodalThicknessField='', numIntPts=15, preIntegrate=OFF, thickness=0.9, 
    thicknessField='', thicknessType=UNIFORM)
# Save by mofid on 2024_07_09-16.25.05; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_07_09-16.25.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
#* IOError: C:/Users/mofid/Downloads/0-wave-propagation: Directory not found
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_26-05.09.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].Material(name='Material-Water')
mdb.models['Model-1'].materials['Material-Water'].Density(table=((1000.0, ), ))
mdb.models['Model-1'].materials['Material-Water'].Viscosity(table=((0.001, ), 
    ))
mdb.models['Model-1'].materials['Material-Water'].Eos(table=((1483.0, 0.0, 
    0.0), ), type=USUP)
mdb.models['Model-1'].PeriodicAmplitude(a_0=0.0, data=((-1.0, 0.0), ), 
    frequency=5.0, name='Amp-1', start=0.0, timeSpan=TOTAL)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=100.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(20.0, 8.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='water_wave', type=
    EULERIAN)
mdb.models['Model-1'].parts['water_wave'].BaseSolidExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='water_wave-1', 
    part=mdb.models['Model-1'].parts['water_wave'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    depth=0.1)
mdb.models['Model-1'].parts['water_wave'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    7.77303791046143, -1.99410104751587), value=0.41, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    22.0913848876953, 4.61285257339478), value=0.41, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].parts['water_wave']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.048, 0.0445)
    , point2=(-0.0265, -0.044))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-3', type=
    EULERIAN)
mdb.models['Model-1'].parts['Part-3'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=(
    'water_wave-1', ))
del mdb.models['Model-1'].rootAssembly.features['water_wave-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0366893224418163, -0.015049772337079), value=0.0885, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_26-07.55.31; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0357279889285564, -0.0160760097205639), value=0.0885, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0380349569022655, -0.0049735140055418), value=0.0885, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_26-07.57.47; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-3']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.036, 0.0505)
    , point2=(-0.047, -0.0485))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0485, 0.049), 
    point2=(0.0335, -0.0485))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='water_wave', type=
    EULERIAN)
mdb.models['Model-1'].parts['water_wave'].BaseSolidExtrude(depth=0.01, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2024_07_26-07.59.58; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='water_wave-1', 
    part=mdb.models['Model-1'].parts['water_wave'])
del mdb.models['Model-1'].rootAssembly.features['water_wave-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[43], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], ))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['water_wave']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.097, 0.0495)
    , point2=(-0.106, -0.1225))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-3', type=
    EULERIAN)
mdb.models['Model-1'].parts['Part-3'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2024_07_26-08.02.09; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['Part-3']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.188, 0.0565)
    , point2=(-0.258, -0.783))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-3', type=
    EULERIAN)
mdb.models['Model-1'].parts['Part-3'].BaseSolidExtrude(depth=0.01, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
mdb.models['Model-1'].rootAssembly.rotate(angle=40.0, axisDirection=(-0.312, 
    0.828, 0.095), axisPoint=(-0.188, -0.783, 0.005), instanceList=('Part-3-1', 
    ))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-3'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    depth=0.1)
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].parts['Part-3'].features['Solid extrude-1'].setValues(
    depth=0.05)
mdb.models['Model-1'].parts['Part-3'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3-1', 
    part=mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-3-1', ), 
    vector=(-0.312, 0.40825, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-3-1', ), 
    vector=(0.07, 0.0, 0.05))
del mdb.models['Model-1'].rootAssembly.features['Part-3-1']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=50.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(10.0, 2.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-4', type=
    EULERIAN)
mdb.models['Model-1'].parts['Part-4'].BaseSolidExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-4-1', 
    part=mdb.models['Model-1'].parts['Part-4'])
del mdb.models['Model-1'].rootAssembly.features['Part-4-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.2)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.015, 0.02), 
    point2=(-0.035, -0.03))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-5', type=
    EULERIAN)
mdb.models['Model-1'].parts['Part-5'].BaseSolidExtrude(depth=0.02, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].parts['Part-3']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-5'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-5'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-5'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-5'].regenerate()
del mdb.models['Model-1'].parts['Part-4']
mdb.models['Model-1'].parts.changeKey(fromName='Part-5', toName='water_wave')
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Water', name=
    'Section-4', thickness=None)
mdb.models['Model-1'].EulerianSection(data={
    'material-water-1': 'Material-Water'}, name='Section-5')
mdb.models['Model-1'].parts['water_wave'].Set(cells=
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['water_wave'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['water_wave'].sets['Set-1'], sectionName=
    'Section-5', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    depth=0.002)
mdb.models['Model-1'].parts['water_wave'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['wave'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['wave'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=10.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.65, 1.65), 
    point2=(-0.65, -1.45))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.2, 1.6), point2=(
    -1.2, 0.2))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='applicator', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['applicator'].BaseShellExtrude(depth=0.1, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['applicator'].ReferencePoint(point=
    mdb.models['Model-1'].parts['applicator'].InterestingPoint(
    mdb.models['Model-1'].parts['applicator'].edges[1], MIDDLE))
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=25.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    10.0, 0.5))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-7.5, 0.5), 
    point2=(7.5, -0.5))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='box', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['box'].BaseSolidExtrude(depth=0.3, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['box'].AddCells(faceList=
    mdb.models['Model-1'].parts['box'].faces.getSequenceFromMask(mask=(
    '[#3a ]', ), ))
#* Solid from shell failed.
mdb.models['Model-1'].parts['box'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['box'].cells.getSequenceFromMask(mask=('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['water_wave'].Set(faces=
    mdb.models['Model-1'].parts['water_wave'].faces.getSequenceFromMask((
    '[#10 ]', ), ), name='z')
mdb.models['Model-1'].parts['water_wave'].Set(faces=
    mdb.models['Model-1'].parts['water_wave'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='x')
mdb.models['Model-1'].parts['water_wave'].Set(faces=
    mdb.models['Model-1'].parts['water_wave'].faces.getSequenceFromMask((
    '[#8 ]', ), ), name='y')
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='applicator-1', 
    part=mdb.models['Model-1'].parts['applicator'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='box-1', part=
    mdb.models['Model-1'].parts['box'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='water_wave-1', 
    part=mdb.models['Model-1'].parts['water_wave'])
# Save by mofid on 2024_07_26-09.18.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['wave']
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=('wave-1', ))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('wave-1', 'RP-4', 'RP-5', 
    'RP-2', 'RP-3'))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-1.2, 1.2, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(1.7, -0.7, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=10.0, axisDirection=(-1.7, 0.7, 
    0.1), axisPoint=(0.5, 0.9, 0.0), instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-1.7, 0.7, 
    0.1), axisPoint=(0.5, 0.9, 0.0), instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-1.88619, 
    0.698398, -0.254021), axisPoint=(0.68619, 0.901602, 0.354021), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-1.627737, 
    0.951659, -0.297332), axisPoint=(0.427737, 0.648341, 0.397332), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-1.612827, 
    0.935602, -0.330796), axisPoint=(0.412827, 0.664398, 0.430796), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-1.545531, 
    0.903527, -0.4183), axisPoint=(0.345531, 0.696473, 0.5183), instanceList=(
    'cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=50.0, axisDirection=(-1.545035, 
    0.282725, -0.746729), axisPoint=(0.345035, 0.617275, 0.746729), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=70.0, axisDirection=(-1.31908, 
    -0.887935, -0.692298), axisPoint=(0.11908, 1.087935, 0.692298), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=40.0, axisDirection=(-0.214966, 
    -0.55249, -0.699764), axisPoint=(0.214966, 1.05249, 0.699764), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=30.0, axisDirection=(-0.177887, 
    -0.636447, -0.360061), axisPoint=(0.177887, 1.136447, 0.660061), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-40.0, axisDirection=(
    -0.177887, -0.636447, -0.360061), axisPoint=(0.177887, 1.136447, 0.660061), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-200.0, axisDirection=(
    0.280263, -0.36473, -1.004698), axisPoint=(-0.280263, 0.86473, 1.004698), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-120.0, axisDirection=(
    0.226297, -0.793624, -1.056), axisPoint=(-0.211297, 0.813624, 1.056), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=300.0, axisDirection=(
    -0.982623, 0.0691, -1.077638), axisPoint=(-0.217377, 0.8309, 1.077638), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-70.0, axisDirection=(-0.30106, 
    -0.55831, -0.782367), axisPoint=(0.30106, 1.05831, 0.782367), instanceList=
    ('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.deleteSets(setNames=('node', 'Set-1'))
del mdb.models['Model-1'].rootAssembly.features['RP-1']
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-0.34412, 
    -0.571602, -0.751135), axisPoint=(0.34412, 1.071602, 0.751135), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=10.0, axisDirection=(0.24567, 
    -0.479877, -0.941505), axisPoint=(-0.24567, 0.979877, 0.941505), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-0.33226, 
    -0.9651, -0.785198), axisPoint=(0.34726, 0.9851, 0.785198), instanceList=(
    'cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=50.0, axisDirection=(-0.34726, 
    -0.485101, -0.785198), axisPoint=(0.34726, 0.985101, 0.785198), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.644562, -0.664564, -0.223645))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-1.2, 0.4, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(1.11737, -0.408617, -0.059144))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.09211, -0.070235, 0.042818))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(7.545812, -0.139907, -0.333391))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.044446, 
    -1.002335, 0.022785), axisPoint=(7.455554, 0.502335, -0.022785), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.268368, 0.394649, 0.53555))
# Save by mofid on 2024_07_27-04.20.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-10.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=-70.0, axisDirection=(0.734885, 
    0.203817, -0.607533), axisPoint=(-1.934885, 0.696183, 0.607533), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.761561, 0.221903, -0.583842))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.072439, -0.020711, -0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.072439, 0.020711, 0.065755))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.11511, -0.063264, -0.005343))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.061995, 0.307988, -0.165303))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.105715, -0.143153, -0.071372))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.009901, -0.04919, 0.026401))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.004951, -0.024595, 0.0132))
mdb.models['Model-1'].rootAssembly.rotate(angle=40.0, axisDirection=(0.118775, 
    0.087684, 0.103231), axisPoint=(-2.119884, 0.902227, 0.202554), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-20.0, axisDirection=(
    -0.042547, -0.038684, 0.081812), axisPoint=(-1.803826, 1.12282, 0.348998), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=-20.0, axisDirection=(
    -0.024223, -0.090244, 0.066963), axisPoint=(-1.82215, 1.17438, 0.363847), 
    instanceList=('cantilever_slab-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(2.208303, -0.147061, 0.165791))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.043301, 0.002769, -0.311931))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-1.2, -0.3, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(0.016308, 0.372196, -0.13529))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(1.183692, -0.072196, 0.43529))
# Save by mofid on 2024_07_27-04.35.39; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Water', name=
    'Section-water', thickness=None)
del mdb.models['Model-1'].parts['water_wave'].sectionAssignments[0]
mdb.models['Model-1'].parts['water_wave'].Set(cells=
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-5')
mdb.models['Model-1'].parts['water_wave'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['water_wave'].sets['Set-5'], sectionName=
    'Section-5', thicknessAssignment=FROM_SECTION)
# Save by mofid on 2024_07_27-04.39.38; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].parts['water_wave'].sectionAssignments[0]
mdb.models['Model-1'].EulerianSection(data={
    'material-water-2': 'Material-Water'}, name='Section-eu')
del mdb.models['Model-1'].sections['Section-water']
mdb.models['Model-1'].sections.changeKey(fromName='Section-5', toName=
    'Section-water')
mdb.models['Model-1'].parts['water_wave'].Set(cells=
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-6')
mdb.models['Model-1'].parts['water_wave'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['water_wave'].sets['Set-6'], sectionName=
    'Section-water', thicknessAssignment=FROM_SECTION)
# Save by mofid on 2024_07_27-04.41.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['box'].features['Remove cells-1']
mdb.models['Model-1'].parts['box'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['box'].cells.getSequenceFromMask(mask=('[#1 ]', 
    ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    depth=0.02)
mdb.models['Model-1'].parts['water_wave'].regenerate()
# Save by mofid on 2024_07_27-04.47.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['box'].features['Remove cells-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0255394093692303, -0.0448430702090263), value=0.05, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['water_wave'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0298272054642439, -0.0217618048191071), value=0.05, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
# Save by mofid on 2024_07_27-04.53.47; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.509237766265869, 0.137011051177979), value=1.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['box']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=10.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-1.6, 0.2), 
    point2=(0.2, -0.2))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -1.09109306335449, -0.406565546989441), value=0.05, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=4.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.7)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-0.05, 0.02), 
    point2=(0.02, -0.05))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -0.0827822834253311, -0.0175707116723061), value=0.05, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-4', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-4'].BaseSolidExtrude(depth=0.07, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by mofid on 2024_07_27-04.58.01; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.suppressFeatures(featureNames=('box-1', ))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -1.59912896156311, 0.69657576084137), value=1.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['applicator'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.210399076342583, -0.0318482890725136), value=1.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.120637789368629, -0.0242317765951157), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], textPoint=(
    -0.0478043854236603, -0.12594510614872), value=0.9)
mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].setValues(
    depth=0.7)
mdb.models['Model-1'].parts['Part-4'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.021686028689146, -0.0122368400916457), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0142022259533405, -0.0353898257017136), value=0.9, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.310443699359894, 0.0354558974504471), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0311179757118225, -0.130112513899803), value=0.9, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
# Save by mofid on 2024_07_27-05.04.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['box-1']
del mdb.models['Model-1'].rootAssembly.features['water_wave-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_27-05.05.10; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Part-4'].RemoveCells(cellList=
    mdb.models['Model-1'].parts['Part-4'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), ))
# Save by mofid on 2024_07_27-05.05.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-4-1', 
    part=mdb.models['Model-1'].parts['Part-4'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='water_wave-1', 
    part=mdb.models['Model-1'].parts['water_wave'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], ))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[18], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[19], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[20], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[21], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[22]))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(-0.1975, 0.05), 
    point2=(1.0425, 0.21875))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[39], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[40], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[41], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[42], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[43]))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(-0.0875, 0.405), 
    point2=(0.93125, -0.1225))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_27-05.11.51; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['water_wave'].regenerate()
# Save by mofid on 2024_07_27-05.12.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Part-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Part-4'].features['Solid extrude-1'].setValues(
    depth=0.02)
mdb.models['Model-1'].parts['Part-4'].regenerate()
# Save by mofid on 2024_07_27-05.12.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts.changeKey(fromName='Part-4', toName='box')
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Part-4-1']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].redo()
#* Nothing to redo.
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='box-1', part=
    mdb.models['Model-1'].parts['box'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0297447443008423, -0.226531803607941), value=0.99, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.210352540016174, 0.0370126962661743), value=0.8, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].rootAssembly.features['box-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='box-1', part=
    mdb.models['Model-1'].parts['box'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.286344647407532, 0.093120276927948), value=1.1, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[4], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.399541079998016, -0.189175128936768), value=1.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['box'].regenerate()
# Save by mofid on 2024_07_27-05.19.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-1', 
    ), vector=(-0.044199, -0.361519, -0.268069))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('applicator-1', ), 
    vector=(2.13125, -0.3225, -0.08))
mdb.models['Model-1'].steps['dynamic'].suppress()
mdb.models['Model-1'].steps['dynamic'].resume()
del mdb.models['Model-1'].steps['dynamic']
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    previous='Initial', timePeriod=5.0)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.1, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.1, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactExp(createStepName='Step-1', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Step-1', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Step-1')
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.051)
mdb.models['Model-1'].parts['water_wave'].generateMesh()
mdb.models['Model-1'].parts['applicator'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['applicator'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.1)
mdb.models['Model-1'].parts['applicator'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['applicator'].setMeshControls(algorithm=MEDIAL_AXIS
    , elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['applicator'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['applicator'].generateMesh()
mdb.models['Model-1'].parts['box'].seedPart(deviationFactor=0.1, minSizeFactor=
    0.1, size=0.07)
mdb.models['Model-1'].parts['box'].generateMesh()
mdb.models['Model-1'].parts['box'].deleteMesh(regions=
    mdb.models['Model-1'].parts['box'].faces.getSequenceFromMask(('[#10 ]', ), 
    ))
mdb.models['Model-1'].parts['box'].setMeshControls(algorithm=MEDIAL_AXIS, 
    regions=mdb.models['Model-1'].parts['box'].faces.getSequenceFromMask((
    '[#10 ]', ), ))
mdb.models['Model-1'].parts['box'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DiscreteFieldByVolumeFraction(accuracy=HIGH, 
    description='', eulerianInstance=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'], name='water', 
    referenceInstance=mdb.models['Model-1'].rootAssembly.instances['box-1'])
mdb.models['Model-1'].MaterialAssignment(fieldList=((Region(
    cells=mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), ('water', )), ), instanceList=(
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'], ), name=
    'Predefined Field-1', useFields=True)
mdb.models['Model-1'].Gravity(comp2=-0.98, createStepName='Step-1', 
    distributionType=UNIFORM, field='', name='Load-1')
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='x', region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['x'], v1=
    0.0, v2=UNSET, v3=UNSET, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='y', region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['y'], v1=
    UNSET, v2=0.0, v3=UNSET, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='z', region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['z'], v1=
    UNSET, v2=UNSET, v3=0.0, vr1=UNSET, vr2=UNSET, vr3=UNSET)
mdb.models['Model-1'].PeriodicAmplitude(a_0=0.0, data=((-5.0, 0.0), ), 
    frequency=5.0, name='Amp-2', start=0.0, timeSpan=TOTAL)
mdb.models['Model-1'].rootAssembly.Set(name='Set-7', referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['applicator-1'].referencePoints[2], 
    ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-2', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-10', region=mdb.models['Model-1'].rootAssembly.sets['Set-7'], u1=0.15, 
    u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by mofid on 2024_07_27-05.46.34; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_07_27-05.46.36; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.models['Model-1'].rootAssembly.features['box-1'].suppress()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['Model-1'].boundaryConditions['BC-7'].suppress()
# Save by mofid on 2024_07_27-05.48.55; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['cantilever_slab'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['cantilever_slab'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['cantilever_slab'].generateMesh()
# Save by mofid on 2024_07_27-05.50.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2052: Unknown part instance node set WATER_WAVE-1.X', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2055: Unknown part instance node set WATER_WAVE-1.Y', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2058: Unknown part instance node set WATER_WAVE-1.Z', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT TYPE C3D20R IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NO EULERIAN SECTIONS HAVE BEEN DEFINED--INITIAL CONDITIONS TYPE=VOLUME FRACTION WILL BE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT 1 INSTANCE WATER_WAVE-1 IS MISSING A PROPERTY DEFINITION; CHECK ELEMENT SET AND ELEMENT DEFINITIONS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.meshEditOptions.setValues(enableUndo=True, maxUndoCacheElements=0.5)
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['applicator'].setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=EXPLICIT), ElemType(elemCode=R3D3, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['applicator'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2052: Unknown part instance node set WATER_WAVE-1.X', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2055: Unknown part instance node set WATER_WAVE-1.Y', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 2058: Unknown part instance node set WATER_WAVE-1.Z', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT TYPE C3D20R IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NO EULERIAN SECTIONS HAVE BEEN DEFINED--INITIAL CONDITIONS TYPE=VOLUME FRACTION WILL BE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT 1 INSTANCE WATER_WAVE-1 IS MISSING A PROPERTY DEFINITION; CHECK ELEMENT SET AND ELEMENT DEFINITIONS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['cantilever_slab'].setElementType(elemTypes=(
    ElemType(elemCode=C3D8R, elemLibrary=EXPLICIT), ElemType(elemCode=C3D6, 
    elemLibrary=EXPLICIT), ElemType(elemCode=C3D4, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['cantilever_slab'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
# Save by mofid on 2024_07_27-05.56.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1307: Unknown part instance node set WATER_WAVE-1.X', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1310: Unknown part instance node set WATER_WAVE-1.Y', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1313: Unknown part instance node set WATER_WAVE-1.Z', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NO EULERIAN SECTIONS HAVE BEEN DEFINED--INITIAL CONDITIONS TYPE=VOLUME FRACTION WILL BE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT 1 INSTANCE WATER_WAVE-1 IS MISSING A PROPERTY DEFINITION; CHECK ELEMENT SET AND ELEMENT DEFINITIONS', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.1201491355896, 0.0179420560598373), value=0.5275, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[8], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[9])
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.143271386623383, -0.178621232509613), value=1.1, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[9], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[10])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[4], ))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].autoDimension(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], ))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.302657306194305, -0.052035853266716), value=1.01875, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[9], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[10])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], ), vector=(
    -0.0005, 0.105))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], ), vector=(
    1.04375, 0.265))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], ), vector=(
    -0.0595, -0.1975))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], ), vector=(-0.017, 
    -0.10875))
mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
# Save by mofid on 2024_07_27-06.06.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['water_wave'].sectionAssignments[0]
mdb.models['Model-1'].EulerianSection(data={
    'material-water-3': 'Material-Water'}, name='Section-water-2')
mdb.models['Model-1'].parts['water_wave'].Set(cells=
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-11')
mdb.models['Model-1'].parts['water_wave'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['water_wave'].sets['Set-11'], sectionName=
    'Section-water-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].generateMesh()
# Save by mofid on 2024_07_27-06.08.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1316: Unknown part instance node set WATER_WAVE-1.X', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1319: Unknown part instance node set WATER_WAVE-1.Y', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1322: Unknown part instance node set WATER_WAVE-1.Z', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_X BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_Y BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_Z BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_X HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_Y HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_Z HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['x'].setValues(region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['x'])
mdb.models['Model-1'].parts['water_wave'].Set(edges=
    mdb.models['Model-1'].parts['water_wave'].edges.getSequenceFromMask((
    '[#1 ]', ), ), name='x')
mdb.models['Model-1'].parts['water_wave'].Set(faces=
    mdb.models['Model-1'].parts['water_wave'].faces.getSequenceFromMask((
    '[#10 ]', ), ), name='y')
mdb.models['Model-1'].parts['water_wave'].Set(edges=
    mdb.models['Model-1'].parts['water_wave'].edges.getSequenceFromMask((
    '[#1 ]', ), ), name='x')
mdb.models['Model-1'].parts['water_wave'].Set(edges=
    mdb.models['Model-1'].parts['water_wave'].edges.getSequenceFromMask((
    '[#10 ]', ), ), name='z')
# Save by mofid on 2024_07_27-06.11.19; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6664, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8928, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21200582220627e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 4.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Sat Jul 27 06:11:50 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3720, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4980, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21200582220627e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.21723073720932, 
    'stableTimeIncrement': 3.21200536745891e-06, 
    'internalEnergy': 0.00420004082843661, 'stepTime': 0.21723073720932, 
    'totalEnergy': 1.75446891784668, 'jobName': 'Job-1', 
    'artificialEnergy': 7.95375513007457e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 67580, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.4745750427246, 'kineticEnergy': 2.79451727867126, 
    'wallTime': 126.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250003039836884, 
    'stableTimeIncrement': 3.21200514008524e-06, 
    'internalEnergy': 0.00658761570230126, 'stepTime': 0.250003039836884, 
    'totalEnergy': 2.74551653862, 'jobName': 'Job-1', 
    'artificialEnergy': 8.04701983270206e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 77762, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.5073699951172, 'kineticEnergy': 3.81538343429565, 
    'wallTime': 145.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.454265058040619, 
    'stableTimeIncrement': 3.21200514008524e-06, 
    'internalEnergy': 0.0481027364730835, 'stepTime': 0.454265058040619, 
    'totalEnergy': 11.5446739196777, 'jobName': 'Job-1', 
    'artificialEnergy': 8.86884492956597e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 141224, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.821533203125, 'kineticEnergy': 12.871392250061, 
    'wallTime': 268.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500002086162567, 
    'stableTimeIncrement': 3.21200491271156e-06, 
    'internalEnergy': 0.0655402466654778, 'stepTime': 0.500002086162567, 
    'totalEnergy': 14.0021848678589, 'jobName': 'Job-1', 
    'artificialEnergy': 9.08648132735834e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 155434, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.9195022583008, 'kineticEnergy': 15.4020481109619, 
    'wallTime': 298.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.669950067996979, 
    'stableTimeIncrement': 3.21200491271156e-06, 
    'internalEnergy': 0.165303558111191, 'stepTime': 0.669950067996979, 
    'totalEnergy': 24.623197555542, 'jobName': 'Job-1', 
    'artificialEnergy': 1.09623238131462e-06, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 208235, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.3688087463379, 'kineticEnergy': 26.3331279754639, 
    'wallTime': 419.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750001132488251, 
    'stableTimeIncrement': 3.21200491271156e-06, 
    'internalEnergy': 0.235224738717079, 'stepTime': 0.750001132488251, 
    'totalEnergy': 30.4929981231689, 'jobName': 'Job-1', 
    'artificialEnergy': 1.18394757464557e-06, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 233106, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.6189727783203, 'kineticEnergy': 32.3560600280762, 
    'wallTime': 482.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.863674223423004, 
    'stableTimeIncrement': 3.21200491271156e-06, 
    'internalEnergy': 0.357051372528076, 'stepTime': 0.863674223423004, 
    'totalEnergy': 38.8642768859863, 'jobName': 'Job-1', 
    'artificialEnergy': 1.39180474434397e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 268423, 'distortionContrEnergy': 0.0, 
    'externalWork': 38.0096130371094, 'kineticEnergy': 40.9791412353516, 
    'wallTime': 605.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.978876173496246, 
    'stableTimeIncrement': 3.21200423059054e-06, 
    'internalEnergy': 0.481980830430984, 'stepTime': 0.978876173496246, 
    'totalEnergy': 45.0498886108398, 'jobName': 'Job-1', 
    'artificialEnergy': 4.19174903072417e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 304215, 'distortionContrEnergy': 0.0, 
    'externalWork': 38.4493980407715, 'kineticEnergy': 47.1786804199219, 
    'wallTime': 729.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.00000011920929, 
    'stableTimeIncrement': 3.21200468533789e-06, 
    'internalEnergy': 0.505468666553497, 'stepTime': 1.00000011920929, 
    'totalEnergy': 46.1005172729492, 'jobName': 'Job-1', 
    'artificialEnergy': 4.67661993752699e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 310778, 'distortionContrEnergy': 0.0, 
    'externalWork': 38.5353775024414, 'kineticEnergy': 48.2186546325684, 
    'wallTime': 752.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.12587833404541, 
    'stableTimeIncrement': 3.21200423059054e-06, 
    'internalEnergy': 0.66601300239563, 'stepTime': 1.12587833404541, 
    'totalEnergy': 53.1501274108887, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000474768254207447, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 349887, 'distortionContrEnergy': 0.0, 
    'externalWork': 39.090259552002, 'kineticEnergy': 54.9946517944336, 
    'wallTime': 874.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.25000238418579, 
    'stableTimeIncrement': 3.21200423059054e-06, 
    'internalEnergy': 0.849721014499664, 'stepTime': 1.25000238418579, 
    'totalEnergy': 59.9776916503906, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000661331985611469, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 388451, 'distortionContrEnergy': 0.0, 
    'externalWork': 39.7100677490234, 'kineticEnergy': 62.104248046875, 
    'wallTime': 984.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.42103183269501, 
    'stableTimeIncrement': 3.21200172948011e-06, 
    'internalEnergy': 1.07862877845764, 'stepTime': 1.42103183269501, 
    'totalEnergy': 49.5266151428223, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000821899739094079, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 441588, 'distortionContrEnergy': 0.0, 
    'externalWork': 62.7641296386719, 'kineticEnergy': 50.0604248046875, 
    'wallTime': 1104.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.50000143051147, 
    'stableTimeIncrement': 3.21200332109584e-06, 
    'internalEnergy': 1.13941097259521, 'stepTime': 1.50000143051147, 
    'totalEnergy': 42.4518508911133, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000839630956761539, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 466123, 'distortionContrEnergy': 0.0, 
    'externalWork': 63.1622505187988, 'kineticEnergy': 42.9956741333008, 
    'wallTime': 1153.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.67373132705688, 
    'stableTimeIncrement': 3.21200286634848e-06, 
    'internalEnergy': 1.17488408088684, 'stepTime': 1.67373132705688, 
    'totalEnergy': 24.5629138946533, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000873882439918816, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 520099, 'distortionContrEnergy': 0.0, 
    'externalWork': 64.0239944458008, 'kineticEnergy': 25.1342926025391, 
    'wallTime': 1274.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.75000047683716, 
    'stableTimeIncrement': 3.21200332109584e-06, 
    'internalEnergy': 1.17342615127563, 'stepTime': 1.75000047683716, 
    'totalEnergy': 19.3388214111328, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000890575116500258, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 543795, 'distortionContrEnergy': 0.0, 
    'externalWork': 64.3996810913086, 'kineticEnergy': 20.1090831756592, 
    'wallTime': 1339.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.89942955970764, 
    'stableTimeIncrement': 3.21200286634848e-06, 
    'internalEnergy': 1.16858065128326, 'stepTime': 1.89942955970764, 
    'totalEnergy': 12.9941835403442, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000914253818336874, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 590221, 'distortionContrEnergy': 0.0, 
    'externalWork': 65.1521759033203, 'kineticEnergy': 14.3627023696899, 
    'wallTime': 1459.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.00000262260437, 
    'stableTimeIncrement': 3.21200332109584e-06, 
    'internalEnergy': 1.16464734077454, 'stepTime': 2.00000262260437, 
    'totalEnergy': 10.3313684463501, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000926410546526313, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 621468, 'distortionContrEnergy': 0.0, 
    'externalWork': 65.6800003051758, 'kineticEnergy': 12.1623859405518, 
    'wallTime': 1547.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.14300465583801, 
    'stableTimeIncrement': 3.21200309372216e-06, 
    'internalEnergy': 1.15909230709076, 'stepTime': 2.14300465583801, 
    'totalEnergy': 7.66401147842407, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000940411060582846, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 667606, 'distortionContrEnergy': 0.0, 
    'externalWork': 66.504997253418, 'kineticEnergy': 10.2577486038208, 
    'wallTime': 1668.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.25000047683716, 
    'stableTimeIncrement': 3.21200377584319e-06, 
    'internalEnergy': 1.15718924999237, 'stepTime': 2.25000047683716, 
    'totalEnergy': 6.35264348983765, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000947758846450597, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 702127, 'distortionContrEnergy': 0.0, 
    'externalWork': 67.1617279052734, 'kineticEnergy': 9.56334686279297, 
    'wallTime': 1756.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.39553785324097, 
    'stableTimeIncrement': 3.21200286634848e-06, 
    'internalEnergy': 1.15978503227234, 'stepTime': 2.39553785324097, 
    'totalEnergy': 5.19563961029053, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000963397556915879, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 749083, 'distortionContrEnergy': 0.0, 
    'externalWork': 68.1134948730469, 'kineticEnergy': 9.30295562744141, 
    'wallTime': 1877.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.50000143051147, 
    'stableTimeIncrement': 3.21200241160113e-06, 
    'internalEnergy': 1.16657209396362, 'stepTime': 2.50000143051147, 
    'totalEnergy': 4.7109489440918, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000974919239524752, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 782787, 'distortionContrEnergy': 0.0, 
    'externalWork': 68.8401184082031, 'kineticEnergy': 9.48995780944824, 
    'wallTime': 1971.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.64130806922913, 
    'stableTimeIncrement': 3.21200127473276e-06, 
    'internalEnergy': 1.1808100938797, 'stepTime': 2.64130806922913, 
    'totalEnergy': 3.86932969093323, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000989004853181541, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 828378, 'distortionContrEnergy': 0.0, 
    'externalWork': 97.4508895874023, 'kineticEnergy': 9.50511646270752, 
    'wallTime': 2092.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.75000238418579, 
    'stableTimeIncrement': 3.21200081998541e-06, 
    'internalEnergy': 1.19130170345306, 'stepTime': 2.75000238418579, 
    'totalEnergy': 3.39018559455872, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000995515845716, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 863447, 'distortionContrEnergy': 0.0, 
    'externalWork': 98.2625732421875, 'kineticEnergy': 9.7948637008667, 
    'wallTime': 2173.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.91004204750061, 
    'stableTimeIncrement': 3.21200150210643e-06, 
    'internalEnergy': 1.2067266702652, 'stepTime': 2.91004204750061, 
    'totalEnergy': 2.61430430412292, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00101044203620404, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 915082, 'distortionContrEnergy': 0.0, 
    'externalWork': 99.5060424804688, 'kineticEnergy': 10.1856803894043, 
    'wallTime': 2294.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.00000023841858, 
    'stableTimeIncrement': 3.21200150210643e-06, 
    'internalEnergy': 1.2140588760376, 'stepTime': 3.00000023841858, 
    'totalEnergy': 2.0981113910675, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00102495879400522, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 944106, 'distortionContrEnergy': 0.0, 
    'externalWork': 100.224807739258, 'kineticEnergy': 10.3412714004517, 
    'wallTime': 2363.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.13769292831421, 
    'stableTimeIncrement': 3.21200081998541e-06, 
    'internalEnergy': 1.22523176670074, 'stepTime': 3.13769292831421, 
    'totalEnergy': 1.25956428050995, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00104803498834372, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 988531, 'distortionContrEnergy': 0.0, 
    'externalWork': 101.347930908203, 'kineticEnergy': 10.552074432373, 
    'wallTime': 2484.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.2500011920929, 
    'stableTimeIncrement': 3.21200150210643e-06, 
    'internalEnergy': 1.23369860649109, 'stepTime': 3.2500011920929, 
    'totalEnergy': 0.546406984329224, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00106879125814885, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1024766, 'distortionContrEnergy': 0.0, 
    'externalWork': 102.281639099121, 'kineticEnergy': 10.7080554962158, 
    'wallTime': 2597.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.37449645996094, 
    'stableTimeIncrement': 3.21200081998541e-06, 
    'internalEnergy': 1.24348938465118, 'stepTime': 3.37449645996094, 
    'totalEnergy': -0.245940655469894, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00108767440542579, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1064933, 'distortionContrEnergy': 0.0, 
    'externalWork': 103.332237243652, 'kineticEnergy': 10.8884124755859, 
    'wallTime': 2718.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.4950213432312, 
    'stableTimeIncrement': 3.21200127473276e-06, 
    'internalEnergy': 1.25267791748047, 'stepTime': 3.4950213432312, 
    'totalEnergy': -1.01091909408569, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00110147823579609, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1103819, 'distortionContrEnergy': 0.0, 
    'externalWork': 104.362968444824, 'kineticEnergy': 11.0741739273071, 
    'wallTime': 2843.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.50000214576721, 
    'stableTimeIncrement': 3.21200195685378e-06, 
    'internalEnergy': 1.25280296802521, 'stepTime': 3.50000214576721, 
    'totalEnergy': -1.04385912418365, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00110178627073765, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1105426, 'distortionContrEnergy': 0.0, 
    'externalWork': 104.40584564209, 'kineticEnergy': 11.0818996429443, 
    'wallTime': 2847.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-8')
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].setValues(
    fieldList=((mdb.models['Model-1'].rootAssembly.sets['Set-8'], ('water', )), 
    ))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.62996482849121, 
    'stableTimeIncrement': 3.21200195685378e-06, 
    'internalEnergy': 1.26257026195526, 'stepTime': 3.62996482849121, 
    'totalEnergy': -1.84421825408936, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0011107511818409, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1147357, 'distortionContrEnergy': 0.0, 
    'externalWork': 105.534210205078, 'kineticEnergy': 11.3398694992065, 
    'wallTime': 2968.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.73491501808167, 
    'stableTimeIncrement': 3.21200195685378e-06, 
    'internalEnergy': 1.27032959461212, 'stepTime': 3.73491501808167, 
    'totalEnergy': -2.49545931816101, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00112113147042692, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1181218, 'distortionContrEnergy': 0.0, 
    'externalWork': 106.45654296875, 'kineticEnergy': 11.5277481079102, 
    'wallTime': 3094.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.75, 
    'stableTimeIncrement': 3.21200150210643e-06, 
    'internalEnergy': 1.27134299278259, 'stepTime': 3.75, 
    'totalEnergy': -2.58377456665039, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00112261378671974, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1186085, 'distortionContrEnergy': 0.0, 
    'externalWork': 106.589912414551, 'kineticEnergy': 11.5607347488403, 
    'wallTime': 3114.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.models['Model-1'].interactions['Int-1'].move('Step-1', 'Initial')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].setValues(
    fieldList=((mdb.models['Model-1'].rootAssembly.sets['Set-8'], ('water', )), 
    ))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.84375810623169, 
    'stableTimeIncrement': 3.21200172948011e-06, 
    'internalEnergy': 1.27896738052368, 'stepTime': 3.84375810623169, 
    'totalEnergy': -3.4888391494751, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00113317556679249, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1216335, 'distortionContrEnergy': 0.0, 
    'externalWork': 129.871704101562, 'kineticEnergy': 11.295316696167, 
    'wallTime': 3240.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.94464492797852, 
    'stableTimeIncrement': 3.21200104735908e-06, 
    'internalEnergy': 1.28613138198853, 'stepTime': 3.94464492797852, 
    'totalEnergy': -4.34530591964722, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0011433846084401, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1248885, 'distortionContrEnergy': 0.0, 
    'externalWork': 130.741577148438, 'kineticEnergy': 11.2280683517456, 
    'wallTime': 3369.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.00000095367432, 
    'stableTimeIncrement': 3.21200104735908e-06, 
    'internalEnergy': 1.28975045681, 'stepTime': 4.00000095367432, 
    'totalEnergy': -4.77969884872437, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00114838418085128, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1266745, 'distortionContrEnergy': 0.0, 
    'externalWork': 131.218994140625, 'kineticEnergy': 11.2284698486328, 
    'wallTime': 3445.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.07840728759766, 
    'stableTimeIncrement': 3.21200013786438e-06, 
    'internalEnergy': 1.29541349411011, 'stepTime': 4.07840728759766, 
    'totalEnergy': -5.30425596237183, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00115590961650014, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1290235, 'distortionContrEnergy': 0.0, 
    'externalWork': 131.850158691406, 'kineticEnergy': 11.2800140380859, 
    'wallTime': 3588.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.15640306472778, 
    'stableTimeIncrement': 3.21200036523805e-06, 
    'internalEnergy': 1.30100691318512, 'stepTime': 4.15640306472778, 
    'totalEnergy': -5.79686403274536, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00116491760127246, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1313602, 'distortionContrEnergy': 0.0, 
    'externalWork': 132.484954833984, 'kineticEnergy': 11.3681631088257, 
    'wallTime': 3724.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.22066020965576, 
    'stableTimeIncrement': 3.2119999104907e-06, 
    'internalEnergy': 1.30565810203552, 'stepTime': 4.22066020965576, 
    'totalEnergy': -6.18705940246582, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0011737362947315, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1332853, 'distortionContrEnergy': 0.0, 
    'externalWork': 133.015258789062, 'kineticEnergy': 11.4661626815796, 
    'wallTime': 3886.0})
# Save by mofid on 2024_07_27-07.17.48; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.25, 
    'stableTimeIncrement': 3.21200059261173e-06, 
    'internalEnergy': 1.30752110481262, 'stepTime': 4.25, 
    'totalEnergy': -6.36743927001953, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00117716623935848, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1341643, 'distortionContrEnergy': 0.0, 
    'externalWork': 133.259979248047, 'kineticEnergy': 11.5117712020874, 
    'wallTime': 3945.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
# Save by mofid on 2024_07_27-07.18.18; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.saveAs(pathName='C:/Users/mofid/Downloads/wave_slab_22.cae')
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.32433080673218, 
    'stableTimeIncrement': 3.21200059261173e-06, 
    'internalEnergy': 1.312704205513, 'stepTime': 4.32433080673218, 
    'totalEnergy': -6.81573438644409, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00118639075662941, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1363912, 'distortionContrEnergy': 0.0, 
    'externalWork': 133.887893676758, 'kineticEnergy': 11.6448841094971, 
    'wallTime': 4086.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.39956617355347, 
    'stableTimeIncrement': 3.21200081998541e-06, 
    'internalEnergy': 1.31751179695129, 'stepTime': 4.39956617355347, 
    'totalEnergy': -7.28026485443115, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00119807524606586, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1386452, 'distortionContrEnergy': 0.0, 
    'externalWork': 134.53547668457, 'kineticEnergy': 11.7834348678589, 
    'wallTime': 4224.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.4681191444397, 
    'stableTimeIncrement': 3.21200059261173e-06, 
    'internalEnergy': 1.32150506973267, 'stepTime': 4.4681191444397, 
    'totalEnergy': -7.722008228302, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00120882887858897, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1406990, 'distortionContrEnergy': 0.0, 
    'externalWork': 135.135940551758, 'kineticEnergy': 11.9023780822754, 
    'wallTime': 4372.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.50000238418579, 
    'stableTimeIncrement': 3.2119999104907e-06, 
    'internalEnergy': 1.32385003566742, 'stepTime': 4.50000238418579, 
    'totalEnergy': -7.92655754089355, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00121501518879086, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1416542, 'distortionContrEnergy': 0.0, 
    'externalWork': 135.418395996094, 'kineticEnergy': 11.9613590240479, 
    'wallTime': 4461.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.56308460235596, 
    'stableTimeIncrement': 3.21200059261173e-06, 
    'internalEnergy': 1.32717323303223, 'stepTime': 4.56308460235596, 
    'totalEnergy': -8.35467052459717, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00122907024342567, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1435441, 'distortionContrEnergy': 0.0, 
    'externalWork': 135.982803344727, 'kineticEnergy': 12.0615663528442, 
    'wallTime': 4700.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.63655757904053, 
    'stableTimeIncrement': 3.21200013786438e-06, 
    'internalEnergy': 1.33136534690857, 'stepTime': 4.63655757904053, 
    'totalEnergy': -8.8684024810791, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00123999326024204, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1457453, 'distortionContrEnergy': 0.0, 
    'externalWork': 136.648620605469, 'kineticEnergy': 12.1702251434326, 
    'wallTime': 4825.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 4.70594167709351, 
    'stableTimeIncrement': 3.21200059261173e-06, 
    'internalEnergy': 1.33527255058289, 'stepTime': 4.70594167709351, 
    'totalEnergy': -9.36324214935303, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00124739133752882, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 1478240, 'distortionContrEnergy': 0.0, 
    'externalWork': 137.284683227539, 'kineticEnergy': 12.2693252563477, 
    'wallTime': 4969.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.features['box-1'].resume()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['box'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['box'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['box'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['box-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['box-1'].edges[10], MIDDLE))
# Save by mofid on 2024_07_27-07.43.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].rootAssembly.features['RP-1']
mdb.models['Model-1'].rootAssembly.features['box-1'].suppress()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1680, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9376, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21200582220627e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.219065368175507, 
    'stableTimeIncrement': 3.21200491271156e-06, 
    'internalEnergy': 0.00432245060801506, 'stepTime': 0.219065368175507, 
    'totalEnergy': 1.81147217750549, 'jobName': 'Job-1', 
    'artificialEnergy': 7.95781659235217e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 68150, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.4762878417969, 'kineticEnergy': 2.85308027267456, 
    'wallTime': 121.0})
mdb.models['Model-1'].parts['cantilever_slab'].setElementType(elemTypes=(
    ElemType(elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['cantilever_slab'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250003039836884, 
    'stableTimeIncrement': 3.21200514008524e-06, 
    'internalEnergy': 0.00658761570230126, 'stepTime': 0.250003039836884, 
    'totalEnergy': 2.74551653862, 'jobName': 'Job-1', 
    'artificialEnergy': 8.04701983270206e-07, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 77762, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.5073699951172, 'kineticEnergy': 3.81538343429565, 
    'wallTime': 137.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
# Save by mofid on 2024_07_27-07.50.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.ModelFromInputFile(inputFileName=
    'C:/Users/mofid/Downloads/ebm-abaqus-main/ebm-abaqus-main/ebm-am-demo/full-model/es_roller.inp'
    , name='es_roller')
# Save by mofid on 2024_07_27-08.06.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['es_roller']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]), vector=(
    -0.0566980242729187, 0.0))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=45.0, centerPoint=(0.0, 
    0.0), objectList=(mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=180.0, centerPoint=(
    0.0, 0.0), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=90.0, centerPoint=(0.0, 
    0.0), objectList=(mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=-90.0, centerPoint=(
    -0.5, 0.0), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=180.0, centerPoint=(
    -0.14, -0.556698024272919), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]), vector=(0.32, 
    0.936698024272919))
# Save by mofid on 2024_07_30-05.56.22; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'cantilever_slab-2', part=mdb.models['Model-1'].parts['cantilever_slab'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(0.395, -0.12625, -0.08))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['applicator'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['applicator'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=180.0, centerPoint=(
    -0.5, -0.5), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]))
mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_30-06.02.08; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['cantilever_slab'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2024_07_30-06.06.04; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(0.0, 1.01375, 0.0))
del mdb.models['Model-1'].rootAssembly.features['cantilever_slab-1']
# Save by mofid on 2024_07_30-06.08.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(0.518125, 0.26375, -0.02))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(0.0, -0.25, 0.02))
# Save by mofid on 2024_07_30-06.09.46; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-2'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-9')
mdb.models['Model-1'].boundaryConditions['BC-4-encastre'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-9'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cantilever_slab-2'].faces.getSequenceFromMask(
    ('[#2 ]', ), ), name='Set-10')
mdb.models['Model-1'].boundaryConditions['BC-encastre'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-10'])
# Save by mofid on 2024_07_30-06.10.47; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_07_30-06.11.02; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['cantilever_slab'].generateMesh()
# Save by mofid on 2024_07_30-06.12.25; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2768, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3920, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.06370816360868e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 4.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(-0.135, 0.152261, 0.0))
# Save by mofid on 2024_07_30-06.15.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2128, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2256, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.21324387186905e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.147182121872902, 
    'stableTimeIncrement': 3.2132443266164e-06, 
    'internalEnergy': 0.00106280925683677, 'stepTime': 0.147182121872902, 
    'totalEnergy': -0.100459799170494, 'jobName': 'Job-1', 
    'artificialEnergy': 2.06813110708026e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 45801, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.609302520752, 'kineticEnergy': 0.848633289337158, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250001907348633, 
    'stableTimeIncrement': 3.21324409924273e-06, 
    'internalEnergy': 0.00288718054071069, 'stepTime': 0.250001907348633, 
    'totalEnergy': 0.517279326915741, 'jobName': 'Job-1', 
    'artificialEnergy': 2.06917920877459e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 77746, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.7006225585938, 'kineticEnergy': 1.55538737773895, 
    'wallTime': 207.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.365084767341614, 
    'stableTimeIncrement': 3.21324387186905e-06, 
    'internalEnergy': 0.00826836470514536, 'stepTime': 0.365084767341614, 
    'totalEnergy': 1.93744802474976, 'jobName': 'Job-1', 
    'artificialEnergy': 2.06961722142296e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 113501, 'distortionContrEnergy': 0.0, 
    'externalWork': 36.8634338378906, 'kineticEnergy': 3.13211822509766, 
    'wallTime': 330.0})
mdb.models['Model-1'].rootAssembly.translate(instanceList=('water_wave-1', ), 
    vector=(0.105, 0.22625, -0.02))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('cantilever_slab-2', 
    ), vector=(0.4625, 0.146489, -0.02))
# Save by mofid on 2024_07_30-06.23.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.442609190940857, 
    'stableTimeIncrement': 3.21324318974803e-06, 
    'internalEnergy': 0.014291288331151, 'stepTime': 0.442609190940857, 
    'totalEnergy': 2.92243361473083, 'jobName': 'Job-1', 
    'artificialEnergy': 2.07034772756742e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 137587, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.0125846862793, 'kineticEnergy': 4.25939130783081, 
    'wallTime': 455.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['cantilever_slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['cantilever_slab'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.48608672618866, 
    'stableTimeIncrement': 3.21324318974803e-06, 
    'internalEnergy': 0.0184647813439369, 'stepTime': 0.48608672618866, 
    'totalEnergy': 3.45923948287964, 'jobName': 'Job-1', 
    'artificialEnergy': 2.07087650778703e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 151095, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.1111640930176, 'kineticEnergy': 4.89007091522217, 
    'wallTime': 598.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500000953674316, 
    'stableTimeIncrement': 3.2132443266164e-06, 
    'internalEnergy': 0.0199091956019402, 'stepTime': 0.500000953674316, 
    'totalEnergy': 3.62837839126587, 'jobName': 'Job-1', 
    'artificialEnergy': 2.07108314498328e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 155418, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.1450653076172, 'kineticEnergy': 5.09149599075317, 
    'wallTime': 661.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.533310770988464, 
    'stableTimeIncrement': 3.21324318974803e-06, 
    'internalEnergy': 0.0235882978886366, 'stepTime': 0.533310770988464, 
    'totalEnergy': 4.03348350524902, 'jobName': 'Job-1', 
    'artificialEnergy': 2.07151715585496e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 165767, 'distortionContrEnergy': 0.0, 
    'externalWork': 37.2309722900391, 'kineticEnergy': 5.57844591140747, 
    'wallTime': 826.0})
# Save by mofid on 2024_07_30-06.30.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Material-Water'].eos.setValues(table=((
    1483000.0, 0.0, 0.0), ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-11', region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['Set-1'], 
    u1=0.0, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.6)
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=STIFFNESS, displacementHourglass=2, 
    linearBulkViscosity=0.7, quadraticBulkViscosity=0.8), ElemType(
    elemCode=UNKNOWN_WEDGE, elemLibrary=EXPLICIT), ElemType(
    elemCode=UNKNOWN_TET, elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
# Save by mofid on 2024_08_02-08.07.57; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['water_wave'].generateMesh()
mdb.models['Model-1'].parts['water_wave'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-55', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 1571: Unknown part instance node set WATER_WAVE-1.SET-1', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_SET-1 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName2\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-11'].setValues(region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['z'])
# Save by mofid on 2024_08_02-08.12.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName2\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName2\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-11'].move('Step-1', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['z'].suppress()
# Save by mofid on 2024_08_02-08.15.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-11'].move('Step-1', 'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-12', 
    region=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].sets['z'], u1=
    UNSET, u2=UNSET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=SET)
del mdb.models['Model-1'].boundaryConditions['BC-12']
# Save by mofid on 2024_08_02-08.16.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(improvedDtMethod=ON, 
    timePeriod=1.0)
# Save by mofid on 2024_08_02-08.16.56; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName2\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].setValues(
    fieldList=((mdb.models['Model-1'].rootAssembly.sets['Set-8'], ('water', )), 
    ))
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
# Save by mofid on 2024_08_02-08.18.51; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS ON THE *SECTION CONTROLS OPTION IS RELEVANT FOR SOLID, MEMBRANE, AND SHELL ELEMENTS WITH REDUCED INTEGRATION WHEREVER APPLICABLE. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12540, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 7 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 13168, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.08442508306439e-08, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-55', 
    'distortionContrEnergy': 0.0, 'wallTime': 5.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 1.08442614887849e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'internalEnergy': 2.52021448136009e-23, 
    'artificialEnergy': 2.11236070256102e-25, 'step': 1, 'increment': 2, 
    'phase': EXPLICIT_PHASE, 'externalWork': 2.13004159927368, 
    'kineticEnergy': 0.000261520588537678, 'stepTime': 1.08442614887849e-08, 
    'totalEnergy': 0.000261580222286284, 'jobName': 'Job-55', 
    'distortionContrEnergy': 0.0, 'wallTime': 6.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-11'].resume()
mdb.models['Model-1'].boundaryConditions['BC-11'].suppress()
# Save by mofid on 2024_08_02-08.33.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT, linearBulkViscosity=0.7, 
    quadraticBulkViscosity=0.8), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8300, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11884, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.08442508306439e-08, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-55', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 8.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 1.08442614887849e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'internalEnergy': 2.52021448136009e-23, 'stepTime': 1.08442614887849e-08, 
    'totalEnergy': 0.000261580222286284, 'jobName': 'Job-55', 
    'artificialEnergy': 2.11236070256102e-25, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 2, 'distortionContrEnergy': 0.0, 
    'externalWork': 2.13004159927368, 'kineticEnergy': 0.000261520588537678, 
    'wallTime': 10.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].steps['Step-1'].setValues(improvedDtMethod=ON, 
    timePeriod=5.0)
# Save by mofid on 2024_08_02-08.36.28; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5552, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2896, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.08442508306439e-08, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-55', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 1.08442614887849e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'internalEnergy': 2.52021448136009e-23, 'stepTime': 1.08442614887849e-08, 
    'totalEnergy': 0.000261580222286284, 'jobName': 'Job-55', 
    'artificialEnergy': 2.11236070256102e-25, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 2, 'distortionContrEnergy': 0.0, 
    'externalWork': 2.13004159927368, 'kineticEnergy': 0.000261520588537678, 
    'wallTime': 0.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=EC3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=ON, 
    hourglassControl=DEFAULT, linearBulkViscosity=0.7, 
    quadraticBulkViscosity=0.8), ElemType(elemCode=UNKNOWN_WEDGE, 
    elemLibrary=EXPLICIT), ElemType(elemCode=UNKNOWN_TET, 
    elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7760, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 6 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5564, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.08442508306439e-08, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-55', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The option *BOUNDARY,TYPE=DISPLACEMENT has been used with a jump in displacements at the nodes in node set WarnNodeDispBCJump-Step1 at the beginning of the next step; all jumps in displacement across steps are ignored. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'THE ANALYSIS MAY NEED A LARGE NUMBER OF INCREMENTS (MORE THAN 20,000,000), AND IT MAY BE AFFECTED BY ROUND-OFF ERRORS. FOR ACCURACY, RUNNING DOUBLE PRECISION EXECUTABLE IS REQUIRED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STATUS, {'totalTime': 1.08442614887849e-08, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'internalEnergy': 2.52021448136009e-23, 'stepTime': 1.08442614887849e-08, 
    'totalEnergy': 0.000261580222286284, 'jobName': 'Job-55', 
    'artificialEnergy': 2.11236070256102e-25, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 2, 'distortionContrEnergy': 0.0, 
    'externalWork': 2.13004159927368, 'kineticEnergy': 0.000261520588537678, 
    'wallTime': 0.0})
mdb.jobs['Job-55']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['water_wave'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['water_wave'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['water_wave'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
# Save by mofid on 2024_08_02-08.39.24; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].boundaryConditions['z'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), name='Set-11')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-12', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-11'], u1=UNSET, u2=
    UNSET, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=SET)
mdb.models['Model-1'].boundaryConditions['BC-12'].setValuesInStep(amplitude=
    'Amp-1', stepName='Step-1', u1=0.0, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=
    0.6)
# Save by mofid on 2024_08_02-08.41.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].suppress()
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].resume()
mdb.models['Model-1'].predefinedFields['Predefined Field-1'].suppress()
# Save by mofid on 2024_08_02-08.42.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 634: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 640: Unknown part instance node set WATER_WAVE-1.X', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 643: Unknown part instance node set WATER_WAVE-1.Y', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 674: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_X BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_WATER_WAVE-1_Y BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_X HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_WATER_WAVE-1_Y HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT, 
    particleConversion=TIME, particleConversionThreshold=0, 
    particleConversionPPD=1, particleConversionKernel=CUBIC), ElemType(
    elemCode=C3D4, elemLibrary=EXPLICIT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['water_wave'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '200 elements have missing property definitions. The elements have been identified in element set ErrElemMissingSection.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '200 elements have incorrect property definitions. The elements have been identified in element set WarnElemIncorrectProperty.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.models['Model-1'].boundaryConditions['x'].suppress()
mdb.models['Model-1'].boundaryConditions['y'].suppress()
# Save by mofid on 2024_08_02-08.46.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '200 elements have missing property definitions. The elements have been identified in element set ErrElemMissingSection.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '200 elements have incorrect property definitions. The elements have been identified in element set WarnElemIncorrectProperty.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].parts['water_wave'].sectionAssignments[0].suppress()
del mdb.models['Model-1'].parts['water_wave'].sectionAssignments[0]
mdb.models['Model-1'].HomogeneousSolidSection(material='Material-Water', name=
    'Section-water-3d', thickness=None)
mdb.models['Model-1'].parts['water_wave'].Set(cells=
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-18')
mdb.models['Model-1'].parts['water_wave'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['water_wave'].sets['Set-18'], sectionName=
    'Section-water-3d', thicknessAssignment=FROM_SECTION)
# Save by mofid on 2024_08_02-08.48.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['water_wave'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT, 
    particleConversion=TIME, particleConversionThreshold=0, 
    particleConversionPPD=1, particleConversionKernel=CUBIC), ElemType(
    elemCode=C3D4, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['water_wave'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12292, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 132 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].edges[8], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].faces.getSequenceFromMask(
    ('[#8 ]', ), ), name='p_Set-10')
mdb.models['Model-1'].RigidBody(name='Constraint-1', pinRegion=
    mdb.models['Model-1'].rootAssembly.sets['p_Set-10'], refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[63], 
    )))
# Save by mofid on 2024_08_02-08.54.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12660, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 132 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['x'].resume()
mdb.models['Model-1'].boundaryConditions['y'].resume()
mdb.models['Model-1'].boundaryConditions['z'].resume()
# Save by mofid on 2024_08_02-08.55.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['x'].suppress()
mdb.models['Model-1'].boundaryConditions['y'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].suppress()
mdb.models['Model-1'].boundaryConditions['x'].resume()
mdb.models['Model-1'].boundaryConditions['y'].resume()
mdb.models['Model-1'].boundaryConditions['z'].resume()
# Save by mofid on 2024_08_02-08.57.04; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '21 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['x'].setValues(v1=UNSET, v2=0.0)
mdb.models['Model-1'].boundaryConditions['y'].setValues(v2=UNSET, v3=0.0)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].edges.getSequenceFromMask(
    ('[#10 ]', ), ), name='Set-12')
mdb.models['Model-1'].boundaryConditions['y'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-12'])
mdb.models['Model-1'].boundaryConditions['y'].suppress()
# Save by mofid on 2024_08_02-08.59.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].constraints['Constraint-1'].suppress()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET65 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '1 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\mofid\\Downloads\\DirectoryName3\\Job-55.odb', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['z'].suppress()
mdb.models['Model-1'].boundaryConditions['x'].suppress()
mdb.models['Model-1'].boundaryConditions['x'].resume()
mdb.models['Model-1'].boundaryConditions['x'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].resume()
# Save by mofid on 2024_08_02-09.01.51; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET65 HAS NO MEMBERS AND WILL BE IGNORED.  NODES DEFINED IN THIS SET MAY HAVE BEEN DELETED BECAUSE THEY WERE NOT CONNECTED TO ANY ELEMENTS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10184, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 133 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].constraints['Constraint-1'].resume()
# Save by mofid on 2024_08_02-09.02.48; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12744, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 132 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['water_wave-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='b_Set-13')
mdb.models['Model-1'].constraints['Constraint-1'].setValues(bodyRegion=
    mdb.models['Model-1'].rootAssembly.sets['b_Set-13'], isothermal=ON, 
    refPointAtCOM=ON, refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[63], )))
# Save by mofid on 2024_08_02-09.04.36; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5292, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 138 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-1'].resume()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].boundaryConditions['z'].suppress()
mdb.jobs['Job-55'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4208, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 138 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSecondaryNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.models['Model-1'].boundaryConditions['BC-12'].setValuesInStep(stepName=
    'Step-1', u1=FREED, u2=FREED, u3=FREED, ur1=FREED, ur2=FREED)
# Save by mofid on 2024_08_02-09.09.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'RIGID ELEMENTS WILL NOT BE CONSIDERED IN THE APPLICATION OF  GRAV LOADS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE R3D4', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7556, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 54 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
del mdb.models['Model-1'].rootAssembly.features['box-1']
del mdb.models['Model-1'].rootAssembly.features['applicator-1']
mdb.models['Model-1'].rootAssembly.deleteFeatures(('water_wave-1', 'RP-1'))
# Save by mofid on 2024_08_05-07.23.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-55'].submit(consistencyChecking=OFF)
mdb.jobs['Job-55']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *RIGIDBODY, file "Job-55.inp", line 426: Unknown assembly set _PICKEDSET68', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *RIGIDBODY, file "Job-55.inp", line 426: Unknown assembly set P_SET-10', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *RIGIDBODY, file "Job-55.inp", line 426: Unknown assembly set B_SET-13', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 468: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-55.inp", line 497: Unknown assembly node set SET-11', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SPECIFIED POISSONS RATIO VALUE OF 0.50000 IS OR VERY CLOSE TO 0.5. THIS VALUE WILL BE RESET TO 0.4999999. THIS MAY CAUSE THE STABLE TIME INCREMENT TO BE VERY SMALL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '*RIGID BODY REFERENCE NODE IS 0.', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'ISOTHERMAL=YES PARAMETER ON *RIGID BODY OPTION SHOULD BE USED ONLY FOR FULLY COUPLED THERMAL-STRESS ANALYSIS.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET68 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'UNABLE TO LOCATE NODE SET ASSEMBLY__PICKEDSET68. THE NODE SET MUST HAVE BEEN PREVIOUSLY DEFINED.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-11 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'D:\\temp\\Job-55.odb', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
mdb.jobs['Job-55']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-55.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-55'})
# Save by mofid on 2024_08_05-07.42.45; build 2023 2022_09_28-21.41.55 183150
